function createPropertyStyle(e){var t;return t="Sale"===e.get("type_en")?"../images/map-icons/pins/48/pin2.png":"../images/map-icons/pins/48/pin5.png",new ol.style.Style({geometry:e.getGeometry(),image:new ol.style.Icon({src:t,anchorOrigin:"bottom-left",anchor:[0,0],scale:.7})})}function propertyStyleFunction(e,t){var o=e.get("features").length;if(o>1)style=[new ol.style.Style({image:new ol.style.Circle({radius:20,stroke:new ol.style.Stroke({color:[156,39,176,1],width:5}),fill:new ol.style.Fill({color:[68,138,255,.8]})}),text:new ol.style.Text({text:o.toString(),fill:new ol.style.Fill({color:"#FFFFFF"})}),zIndex:101})];else{var r=e.get("features")[0];style=[createPropertyStyle(r)]}return style}function selectStyleFunction(e,t){for(var o=[new ol.style.Style({})],r=e.get("features"),a=r.length-1;a>=0;--a)originalFeature=r[a],o.push(createPropertyStyle(originalFeature));return o}function filteredEsateStyle(e,t){return styleCache=[new ol.style.Style({image:new ol.style.Icon({src:"../images/map-icons/pins/48/pin4.png",anchorOrigin:"bottom-left",anchor:[.5,.5],scale:.7})})]}function addInteraction(){selectSource.clear(),draw=new ol.interaction.Draw({source:selectSource,type:"LineString",geometryFunction:geometryFunction,maxPoints:2}),draw.on("drawstart",function(){selectSource.clear()}),draw.on("drawend",function(){map.removeInteraction(draw)}),map.addInteraction(draw)}function geometryFunction(e,t){t||(t=new ol.geom.Polygon(null));var o=e[0],r=e[1];return t.setCoordinates([[o,[o[0],r[1]],r,[r[0],o[1]],o]]),t}function handleInfo(e){e.preventDefault(),map.removeInteraction(draw);var t=(e.coordinate,{}),o={};t.title=o,"el"===lang?(o.estateCode="Κωδικός Ιδιοκτησίας",o.type="Τύπος",o.area="Εμβαδό",o.address="Διευθυνση",o.bedrooms="Υπνοδωμάτια",o.price="Τιμή",o["new"]="Νεόδμητο",o.parking="Στάθμεση",o.furnished="Επιπλωμένο",o.pets="Κατοικίδια",o.view="Θέα",o.heating="Θέρμανση",o.cooling="Ψύξη",o.contactInfo="Στοιχεία Επικοινωνίας",o.name="Όνομα",o.lastname="Επίθετο",o.phone="Τηλέφωνο",o.email="Ηλεκτρονική Διεύθυνση"):(o.estateCode="Estate Code",o.type="Type",o.area="Size",o.address="Address",o.bedrooms="Bedrooms",o.price="Price",o["new"]="Newly Build",o.parking="Parking",o.furnished="Furnished",o.pets="Pets Allowed",o.view="View",o.heating="Heating",o.cooling="Cooling",o.contactInfo="Contact Info",o.name="Name",o.lastname="Last Name",o.phone="Telephone",o.email="Email"),clickedFeature=map.forEachFeatureAtPixel(e.pixel,function(e,t){return{feature:e,layer:t}},this,function(e){return"estates"===e.get("id")||"filteredEstates"===e.get("id")?!0:void 0},this);var r;clickedFeature?"estates"===clickedFeature.layer.get("id")&&1===clickedFeature.feature.get("features").length?(r=clickedFeature.feature.getProperties().features[0],createPSAandCard(r,t)):"filteredEstates"===clickedFeature.layer.get("id")&&(r=clickedFeature.feature,createPSAandCard(r,t)):PSA.setSource(null)}function createPSAandCard(e,t){var o={};o.gid=e.get("gid"),o.type=e.get("estatetype"),o.area=e.get("estatearea"),"el"===lang?o.address=e.get("street_el")+" "+e.get("h_num_el"):o.address=e.get("street_en")+" "+e.get("h_num_en"),o.bedrooms=e.get("bedrooms"),o.price=e.get("price"),o["new"]=e.get("new"),o.parking=e.get("parking"),o.furnished=e.get("furnished"),o.pets=e.get("pets"),o.view=e.get("view"),o.heating=e.get("heating"),o.cooling=e.get("cooling"),"el"===lang?(o.name=e.get("name_el"),o.lastname=e.get("lastname_el")):(o.name=e.get("name_en"),o.lastname=e.get("lastname_en")),o.phone=e.get("phone1"),o.email=e.get("email"),o.coordinate=e.get("geometry").getCoordinates();var r=new ol.source.Vector({attributions:[new ol.Attribution({html:'POI by <a href="http://www.terracognita.gr/">Terra Cognita</a>'})],format:geoJSONFormat,loader:function(e,t,r){var a="http://localhost:3000/db/uses/"+o.gid,n=this;$.ajax({url:a,type:"GET",dataType:"json"}).done(function(e){var t=geoJSONFormat.readFeatures(e.property_services_analysis,{featureProjection:"EPSG:3857"}),o=new ol.style.Style({fill:new ol.style.Fill({color:[156,39,176,.1]})});t[0].setStyle(o),n.addFeatures(t)}).fail(function(){console.log("error")})},strategy:ol.loadingstrategy.all});PSA.setSource(r),map.getView().setCenter(o.coordinate),map.getView().setResolution(1.2),t.feature=o,dust.render("estateCards.dust",t,function(e,t){$(".estate-cards").html(t),$(".estate-cards").addClass("estate-cards-active")}),$('a[href="#openModal"]').click(function(){dust.render("modalInfo.dust",t,function(e,t){$(".modal-content").html(t)})}),$('a[href="#closeEstateCard"]').click(function(){$(".estate-cards").removeClass("estate-cards-active")})}var center=[3677385,4120949],extent=[3590094,4102833,3855483,4261211],lang=document.documentElement.lang,styleCache={},geoJSONFormat=new ol.format.GeoJSON({defaultDataProjection:"EPSG:4326"}),bing=new ol.layer.Tile({visible:!0,source:new ol.source.BingMaps({key:"Ak2Gq8VUfICsPpuf7LRANXmXt2sHWmSLPhohmVLFtFIEwYjs_5MCyAhAFwRSVpLj",imagerySet:"Aerial"}),maxZoom:19,crossOrigin:"anonymous",preload:1/0,id:"bing"}),mapbox=new ol.layer.Tile({source:new ol.source.XYZ({attributions:[new ol.Attribution({html:'<a href="https://www.mapbox.com/about/maps/" target="_blank">&copy; Mapbox &copy; OpenStreetMap</a>'})],url:"https://api.mapbox.com/v4/mapbox.streets/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoiZmlydmFpbiIsImEiOiJlOWYyYTM0NThiNWM0YjJjODJjNDE4ODQzNzA2MGQyNiJ9.-NVDO27Hzt-w_nQosUPfLA"}),id:"mapbox"}),propertySource=new ol.source.Vector({format:geoJSONFormat,loader:function(e,t,o){console.log(t);var r=ol.proj.transformExtent(e,"EPSG:3857","EPSG:4326"),a="http://localhost:3000/db/property?bbox[x1]="+r[0]+"&bbox[y1]="+r[1]+"&bbox[x2]="+r[2]+"&bbox[y2]="+r[3],n=this;this.clear(),console.log(e),$.ajax({url:a,type:"GET",dataType:"json"}).done(function(e){var t=geoJSONFormat.readFeatures(e,{featureProjection:"EPSG:3857"});n.addFeatures(t)}).fail(function(){console.log("error")})},strategy:ol.loadingstrategy.bbox}),propertyClusterSource=new ol.source.Cluster({distance:40,source:propertySource,attributions:[new ol.Attribution({html:'All maps © <a href="http://www.terracognita.gr/">Terra Cognita</a>'})]}),property=new ol.layer.Vector({source:propertyClusterSource,id:"estates",visible:!0,style:propertyStyleFunction});property.setZIndex(2);var PSAStyleFunction=function(e,t){var o,r=e.get("style");return o="el"===lang?e.get("name_el"):e.get("name_en"),styleCache[r]||(styleCache=[new ol.style.Style({image:new ol.style.Icon({src:"../images/maki/renders/"+r+"-24.png",anchorOrigin:"bottom-left",anchor:[.5,.5],scale:1}),text:new ol.style.Text({text:o,stroke:new ol.style.Stroke({color:[156,39,176,.8],width:1}),offsetY:12})})]),styleCache},PSA=new ol.layer.Vector({style:PSAStyleFunction,maxResolution:3});PSA.setZIndex(1);var filteredEstates=new ol.layer.Vector({source:new ol.source.Vector({format:geoJSONFormat}),id:"filteredEstates",visible:!0,style:filteredEsateStyle});filteredEstates.setZIndex(2);var selectSource=new ol.source.Vector({}),selectBox=new ol.layer.Vector({source:selectSource,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(227, 72, 27, 0.2)"}),stroke:new ol.style.Stroke({color:"#E3481B",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#E3481B"})})})});selectBox.setZIndex(3);var map=new ol.Map({target:"map",layers:[mapbox,property,PSA,filteredEstates,selectBox],loadTilesWhileAnimating:!0,loadTilesWhileInteracting:!0,renderer:"canvas",controls:ol.control.defaults({attributionOptions:{collapsible:!1,collapsed:!1}}).extend([new ol.control.ScaleLine({units:"metric"}),new ol.control.OverviewMap({className:"ol-overviewmap ol-custom-overviewmap",collapsible:!0,collapsed:!0,layers:[bing]}),new ol.control.ZoomToExtent({extent:extent})]),view:new ol.View({center:center,projection:"EPSG:3857",zoom:14,maxZoom:19,minZoom:10})});"el"===lang?(bing.set("name","Δορυφορική εικόνα"),mapbox.set("name","Χάρτης"),property.set("name","Ακίνητα")):(bing.set("name","Sattelite Image"),mapbox.set("name","Map"),property.set("name","Properties")),window.app||(window.app={});var app=window.app;app.filters=function(e){this.leaseType=void 0!==e.leaseType?e.leaseType:"Rent",this.startPrice=void 0!==e.startPrice?e.startPrice:0,this.endPrice=void 0!==e.endPrice?e.endPrice:1e10,this.parking=void 0!==e.parking?e.parking:!1,this.furnsished=void 0!==e.furnished?e.pakring:!1,this.heating=void 0!==e.heating?e.heating:!1,this.cooling=void 0!==e.cooling?e.cooling:!1,this.view=void 0!==e.view?e.view:!1},app.filters.prototype.setDefaults=function(){var e;PSA.setSource(null),toastr.options={closeButton:!1,debug:!1,newestOnTop:!1,progressBar:!1,positionClass:"toast-top-center",preventDuplicates:!1,onclick:null,showDuration:"300",hideDuration:"1000",timeOut:"5000",extendedTimeOut:"1000",showEasing:"swing",hideEasing:"linear",showMethod:"fadeIn",hideMethod:"fadeOut"},e=0===selectSource.getFeatures().length?ol.proj.transformExtent(extent,"EPSG:3857","EPSG:4326"):ol.proj.transformExtent(selectSource.getFeatures()[0].getGeometry().getExtent(),"EPSG:3857","EPSG:4326"),this.extent=e},app.filters.prototype.ajaxCall=function(){$.ajax({url:"http://localhost:3000/db/filteredproperty?bbox[x1]="+this.extent[0]+"&bbox[y1]="+this.extent[1]+"&bbox[x2]="+this.extent[2]+"&bbox[y2]="+this.extent[3],type:"GET",dataType:"json",data:{leaseType:this.leaseType,furnished:this.furnished,heating:this.heating,parking:this.parking,cooling:this.cooling,view:this.view,startPrice:this.startPrice,endPrice:this.endPrice}}).done(function(e){var t=geoJSONFormat.readFeatures(e,{featureProjection:"EPSG:3857"});if(t.length>0){toastr.clear(),filteredEstates.getSource().clear(),filteredEstates.getSource().addFeatures(t),filteredEstates.setVisible(!0),property.setVisible(!1);filteredEstates.getSource().getExtent()}else toastr.error("No Info Found!"),filteredEstates.setVisible(!1),property.setVisible(!0)})},$("#invokeFilters").click(function(){window.options||(window.options={});var e;window.options.leaseType=$("input[name=options]:checked").val(),window.options.startPrice=$("#startPrice").val(),window.options.endPrice=$("#endPrice").val(),window.options.parking=$("#checkbox-1").prop("checked"),window.options.furnished=$("#checkbox-2").prop("checked"),window.options.heating=$("#checkbox-3").prop("checked"),window.options.cooling=$("#checkbox-4").prop("checked"),window.options.view=$("#checkbox-5").prop("checked"),e=new app.filters(window.options),e.setDefaults(),e.ajaxCall()}),$("#clearFilters").click(function(){$("label[for=option-1]").addClass("is-checked"),$("label[for=option-2]").removeClass("is-checked"),$("label[for=checkbox-1]").removeClass("is-checked"),$("label[for=checkbox-2]").removeClass("is-checked"),$("label[for=checkbox-3]").removeClass("is-checked"),$("label[for=checkbox-4]").removeClass("is-checked"),$("label[for=checkbox-5]").removeClass("is-checked"),$("label[for=checkbox-6]").removeClass("is-checked"),filteredEstates.getSource().clear(),property.setVisible(!0),PSA.setSource(null),selectSource.clear(),map.removeInteraction(draw)});var draw;$("#checkbox-6").click(function(){this.checked?addInteraction():(map.removeInteraction(draw),selectSource.clear())}),function(){var e=new ol.Geolocation({projection:map.getView().getProjection(),trackingOptions:{maximumAge:1e4,enableHighAccuracy:!0,timeout:6e5}}),t=new ol.Feature;e.on("change:accuracyGeometry",function(){t.setGeometry(e.getAccuracyGeometry())});var o=new ol.Feature;o.setStyle(new ol.style.Style({image:new ol.style.Circle({radius:6,fill:new ol.style.Fill({color:"#3399CC"}),stroke:new ol.style.Stroke({color:"#fff",width:2})})})),e.on("change:position",function(){var t=e.getPosition();o.setGeometry(t?new ol.geom.Point(t):null)}),featuresOverlaySource=new ol.source.Vector({});new ol.layer.Vector({map:map,source:featuresOverlaySource});$(".geolocation").on("change",function(r){r.preventDefault(),$(this).prop("checked")===!0?(e.setTracking(!0),featuresOverlaySource.addFeatures([o,t])):(e.setTracking(!1),featuresOverlaySource.clear())})}(),$(".info").on("change",function(e){e.preventDefault(),PSA.setSource(null),$(this).prop("checked")===!0?map.on("click",handleInfo):map.un("click",handleInfo)}),function(){function e(e){e.preventDefault();var r=n.getSource().getFeatures().length,a=e.coordinate;if(0===r)o.setGeometry(new ol.geom.Point(a)),o.setId("first"),n.getSource().addFeature(o),i[0]=a[0],i[1]=a[1];else if(1===r){var l=o.clone();l.setGeometry(new ol.geom.Point(a)),l.setId("second"),n.getSource().addFeature(l),i[2]=a[0],i[3]=a[1],t(i)}else n.getSource().clear()}function t(e){var t=ol.proj.transform([e[0],e[1]],"EPSG:3857","EPSG:4326"),o=ol.proj.transform([e[2],e[3]],"EPSG:3857","EPSG:4326"),r=t[0],a=t[1],i=o[0],l=o[1];$.ajax({url:"https://api.mapbox.com/v4/directions/mapbox.driving/"+r+","+a+";"+i+","+l+".json?alternatives=false&access_token=pk.eyJ1IjoiZmlydmFpbiIsImEiOiJlOWYyYTM0NThiNWM0YjJjODJjNDE4ODQzNzA2MGQyNiJ9.-NVDO27Hzt-w_nQosUPfLA",type:"GET",dataType:"json"}).done(function(e){var t={};t.type="Feature",t.geometry=e.routes[0].geometry,n.getSource().addFeatures(geoJSONFormat.readFeatures(t,{dataProjection:"EPSG:4326",featureProjection:"EPSG:3857"})),map.getView().fit(n.getSource().getExtent(),map.getSize())}).fail(function(){}).always(function(){})}var o=new ol.Feature,r=new ol.style.Style({image:new ol.style.Icon({anchor:[.5,1],anchorXUnits:"fraction",anchorYUnits:"fraction",opacity:1,scale:1,src:"../images/map-icons/pins/24/pin1.png",snapToPixel:!1}),zIndex:100});o.setStyle(r);var a=new ol.style.Style({stroke:new ol.style.Stroke({color:"#408080",width:5,lineDash:[4,4]})}),n=new ol.layer.Vector({map:map,source:new ol.source.Vector,style:a,id:"route",nameEl:"Διαδρομή",NameEn:"Route"}),i=[];geoJSONFormat=new ol.format.GeoJSON({defaultDataProjection:"EPSG:4326",geometryName:"geometry"}),$(".marker").on("change",function(t){t.preventDefault(),$(this).prop("checked")===!0?map.on("singleclick",e):(map.un("singleclick",e),n.getSource().clear())})}(),function(){$(".weather").change(function(){if($(this).prop("checked")===!0){map.getOverlays().forEach(function(e){"weather"===e.get("name")&&($(e.getElement()).parent().remove(),$(e.getElement()).remove())});var e=ol.proj.transform(map.getView().getCenter(),"EPSG:3857","EPSG:4326"),t=e[1],o=e[0];$.ajax({url:"http://api.openweathermap.org/data/2.5/find?lat="+t+"&lon="+o+"&cnt=5&cluster=no&units=metric&type=accurate&APPID=f9cd9fa2c427c3b115e87e4862619c5c",type:"GET",dataType:"json"}).done(function(e){function t(e,t){var o=document.createElement("div");return o.setAttribute("class","weather-popup default-primary-color mdl-shadow--6dp"),o.setAttribute("id",t),o.setAttribute("data-name","weather"),new ol.Overlay({element:o,position:e})}var o,r,a=e.list;$.each(a,function(e,a){r=ol.proj.transform([a.coord.lon,a.coord.lat],"EPSG:4326","EPSG:3857"),o=t(r,e),map.addOverlay(o),o.set("name","weather"),weatherData={name:a.name,temp:a.main.temp,pressure:a.main.pressure,humidity:a.main.humidity},dust.render("weatherPopup.dust",weatherData,function(t,o){$("#"+e).html(o)})})}).fail(function(){})}else $(this).prop("checked")===!1&&map.getOverlays().forEach(function(e){"weather"===e.get("name")&&($(e.getElement()).parent().remove(),$(e.getElement()).remove())})})}();
//# sourceMappingURL=data:application/json;base64,
