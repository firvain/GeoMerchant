function getIconType(e){var t={Apartment:function(){return"apartment"},Store:function(){return"store"},"Detached House":function(){return"detached"}};return t[e]()}function getIconPath(e){var t={"true":function(){return"./images/pins/sale/"},"false":function(){return"./images/pins/rent/"},none:function(){return"./images/pins/none/"}};return t[e]()}function PropertyStyle(e){var t;return t=getIconPath("none")+getIconType(e.get("estatetype_en"))+"-48.png",new ol.style.Style({image:new ol.style.Icon({src:t,anchorOrigin:"bottom-left",anchor:[.5,0],scale:1})})}function drawnPropertiesStyle(e){var t;return t="./images/pins/generic-48.png","undefined"!=typeof e?new ol.style.Style({image:new ol.style.Icon({src:t,anchorOrigin:"bottom-left",anchor:[.5,0],scale:1,color:e})}):new ol.style.Style({image:new ol.style.Icon({src:t,anchorOrigin:"bottom-left",anchor:[.5,0],scale:1})})}function selectedStyle(e){var t;return t=getIconPath("none")+getIconType(e.get("estatetype_en"))+"-64.png",new ol.style.Style({image:new ol.style.Icon({src:t,anchorOrigin:"bottom-left",anchor:[.5,0],scale:1,color:"#ffeb3b"})})}function clickInfo(e){var t={};e.preventDefault(),select.setActive(!0),select.once("select",function(e){var a,r=e.selected,o=r.length;1===o?(t.feature={},a=_.head(e.selected),a.getKeys().forEach(function(e){t.feature[e]=a.get(e)}),dust.render("adminPropertyInfo",t,function(e,t){$(".property-info").html(t),$(".property-info").removeClass("visuallyhidden"),componentHandler.upgradeDom(),$("#listing").on("click",function(e){var t;e.preventDefault(),t=$(this).data("gid"),$.ajax({url:"http://127.0.0.1:3000/db/listing",type:"GET",dataType:"json",data:{gid:t}}).done(function(e){var a=e.id;$("#openModal").css("width","auto"),$(".modal-dialog").removeClass("visuallyhidden"),dust.render("listingInsert",e,function(e,r){$(".modal-content").html(r),componentHandler.upgradeDom(),handleForm.set({name:"insert-update-listing",submitBtnId:"ok"}),"Sale"===$("input[name=options]:checked").val()&&($("#pets").parent().hide(),$("#prefered_customer").parent().hide()),$("input[name=options]").on("change",function(e){"Sale"===$(this).val()?($("#pets").prop("disabled",!0),$("#pets").prop("checked",!1),$("#pets").parent().hide(),$("label[for=pets]").removeClass("is-checked"),$("#prefered_customer").val(""),$("#prefered_customer").parent().eq(0).removeClass("is-dirty"),$("#prefered_customer").prop("disabled",!0),$("#prefered_customer").parent().hide()):($("#pets").prop("disabled",!1),$("#pets").parent().show(),$("#prefered_customer").prop("disabled",!1),$("#prefered_customer").parent().show())}),$("#sent-listing").on("click",function(e){var r;e.preventDefault(),r=handleForm.get(),null!==r&&(r.property_gid=t,r.listing_id=a,$.ajax({url:"http://127.0.0.1:3000/db/listing",type:"PUT",data:r,dataType:"text"}).done(function(e,t,a){200===a.status?toastr.success("Property Updated In Database"):toastr.error("Oops Something Went Wrong!!!")}).fail(function(e,t,a){toastr.error("Oops Something Went Wrong!!!")}).always(function(){handleForm.clear(),$("#openModal").addClass("visuallyhidden"),propertySource.clear(),select.getFeatures().clear(),select.setActive(!1)}))}),$("#cancel-listing").on("click",function(e){e.preventDefault(),handleForm.clear(),select.getFeatures().clear(),select.setActive(!1),$("#openModal").addClass("visuallyhidden")})})}).fail(function(){var e={};"el"===lang?(e.msg="Δεν Βρέθηκε Αγγελία",e.text="Δημιουργία Καινούργιας;",e.yes="ΝΑΙ",e.no="ΟΧΙ"):(e.msg="No Listing Found",e.text="Create New Listing?",e.yes="YES",e.no="NO"),dust.render("dialog",e,function(e,a){$("#openModal").removeClass("visuallyhidden"),$("#openModal").css("width","auto"),$(".modal-content").html(a),componentHandler.upgradeDom(),$("#yes").on("click",function(e){e.preventDefault(),dust.render("listingInsert",{rent:"true",addImage:"true"},function(e,a){var r;$(".modal-content").html(a),componentHandler.upgradeDom(),r=new Dropzone(document.getElementById("dropzone"),{uploadMultiple:!1,acceptedFiles:".jpg",parallelUploads:6,url:"https://api.cloudinary.com/v1_1/firvain/auto/upload"}),r.on("sending",function(e,a,r){r.append("api_key",375138932689591),r.append("callback","http://127.0.0.1:3000/public/cloudinary_cors.html"),r.append("upload_preset","testupload"),r.append("public_id",t)}),r.on("success",function(){this.element.style.display="none"}),handleForm.set({name:"insert-update-listing",submitBtnId:"ok"}),$("input[name=options]").on("change",function(e){"Sale"===$(this).val()?($("#pets").prop("disabled",!0),$("#pets").prop("checked",!1),$("label[for=pets]").removeClass("is-checked"),$("#prefered_customer").val(""),$("#prefered_customer").parent().eq(0).removeClass("is-dirty"),$("#prefered_customer").prop("disabled",!0)):($("#pets").prop("disabled",!1),$("#prefered_customer").prop("disabled",!1))}),$("#sent-listing").on("click",function(e){var a;e.preventDefault(),a=handleForm.get(),null!==a&&(a.property_gid=t,$.ajax({url:"http://127.0.0.1:3000/db/listing",type:"POST",data:a,dataType:"text"}).done(function(e,t,a){201===a.status?toastr.success("Property Updated In Database"):toastr.error("Oops Something Went Wrong!!!")}).fail(function(e,t,a){toastr.error("Oops Something Went Wrong!!!")}).always(function(){handleForm.clear(),$("#openModal").addClass("visuallyhidden"),select.getFeatures().clear(),select.setActive(!1)}))}),$("#cancel-listing").on("click",function(e){e.preventDefault(),handleForm.clear(),select.getFeatures().clear(),select.setActive(!1),$("#openModal").addClass("visuallyhidden")})})}),$("#no").on("click",function(e){e.preventDefault(),$("#openModal").addClass("visuallyhidden"),select.getFeatures().clear(),select.setActive(!1)})})})})})):(select.getFeatures().clear(),$(".property-info").addClass("visuallyhidden"),toastr.error("Cant Find Any Property There..."))})}function string_el_to_url(e){for(var t,a=new Array("α","ά","Ά","Α","β","Β","γ","Γ","δ","Δ","ε","έ","Ε","Έ","ζ","Ζ","η","ή","Η","θ","Θ","ι","ί","ϊ","ΐ","Ι","Ί","κ","Κ","λ","Λ","μ","Μ","ν","Ν","ξ","Ξ","ο","ό","Ο","Ό","π","Π","ρ","Ρ","σ","ς","Σ","τ","Τ","υ","ύ","Υ","Ύ","φ","Φ","χ","Χ","ψ","Ψ","ω","ώ","Ω","Ώ"," ","'","'",","),r=new Array("a","a","A","A","v","V","g","G","d","D","e","e","E","E","z","Z","i","i","I","th","Th","i","i","i","i","I","I","k","K","l","L","m","M","n","N","x","X","o","o","O","O","p","P","r","R","s","s","S","t","T","u","u","Y","Y","f","F","ch","Ch","ps","Ps","o","o","O","O"," ","_","_","_"),o=0;o<a.length;o++)t=e.replace(new RegExp(a[o],"g"),r[o]);return t}var $loading=$(".mdl-spinner"),center=[3677385,4120949],extent=[3590094,4102833,3855483,4261211],lang=document.documentElement.lang,geoJSONFormat=new ol.format.GeoJSON({defaultDataProjection:"EPSG:4326"}),propertySource,property,map,features,drawnProperties,draw,select,translate,bing,mapbox;toastr.options={closeButton:!1,debug:!1,newestOnTop:!1,progressBar:!1,positionClass:"toast-top-center",preventDuplicates:!1,onclick:null,showDuration:"300",hideDuration:"1000",timeOut:"5000",extendedTimeOut:"1000",showEasing:"swing",hideEasing:"linear",showMethod:"fadeIn",hideMethod:"fadeOut"},bing=new ol.layer.Tile({visible:!0,source:new ol.source.BingMaps({key:"Ak2Gq8VUfICsPpuf7LRANXmXt2sHWmSLPhohmVLFtFIEwYjs_5MCyAhAFwRSVpLj",imagerySet:"Aerial"}),maxZoom:19,crossOrigin:"anonymous",preload:1/0,id:"bing"}),mapbox=new ol.layer.Tile({source:new ol.source.XYZ({attributions:[new ol.Attribution({html:'<a href="https://www.mapbox.com/about/maps/" target="_blank">&copy; Mapbox &copy; OpenStreetMap</a>'})],url:"https://api.mapbox.com/v4/mapbox.streets/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoiZmlydmFpbiIsImEiOiJlOWYyYTM0NThiNWM0YjJjODJjNDE4ODQzNzA2MGQyNiJ9.-NVDO27Hzt-w_nQosUPfLA"}),id:"mapbox"}),propertySource=new ol.source.Vector({format:geoJSONFormat,loader:function(e,t,a){var r="http://127.0.0.1:3000/db/property/"+id,o=this;$.ajax({url:r,type:"GET",beforeSend:function(e){localStorage.getItem("userToken")&&e.setRequestHeader("Authorization","Bearer "+localStorage.getItem("userToken"))},dataType:"json"}).done(function(e,t,a){var r=geoJSONFormat.readFeatures(e,{featureProjection:"EPSG:3857"});o.addFeatures(r)}).fail(function(e,t,a){toastr.clear(),404===e.status?toastr.error("Sorry, we cannot find this property!"):503===e.status?toastr.error("Service Unavailable"):toastr.error("Internal Server Error")})},strategy:ol.loadingstrategy.all}),property=new ol.layer.Vector({source:propertySource,id:"property",visible:!0,style:PropertyStyle}),property.setZIndex(2),map=new ol.Map({target:"adminMap",layers:[mapbox,property],loadTilesWhileAnimating:!0,loadTilesWhileInteracting:!0,renderer:"canvas",controls:ol.control.defaults({attributionOptions:{collapsible:!1,collapsed:!1}}).extend([new ol.control.ScaleLine({units:"metric"}),new ol.control.OverviewMap({className:"ol-overviewmap ol-custom-overviewmap",collapsible:!0,collapsed:!0,layers:[bing]}),new ol.control.ZoomToExtent({extent:extent})]),view:new ol.View({center:center,projection:"EPSG:3857",zoom:14,maxZoom:19,minZoom:10})}),"el"===lang?(bing.set("name","Δορυφορική εικόνα"),mapbox.set("name","Χάρτης"),property.set("name","Ακίνητα")):(bing.set("name","Sattelite Image"),mapbox.set("name","Map"),property.set("name","Properties")),features=new ol.Collection,drawnProperties=new ol.layer.Vector({source:new ol.source.Vector,id:"drawnProperties",style:drawnPropertiesStyle("#4caf50")}),map.addLayer(drawnProperties),draw=new ol.interaction.Draw({source:drawnProperties.getSource(),type:"Point",style:drawnPropertiesStyle("#4caf50")}),map.addInteraction(draw),draw.setActive(!1),select=new ol.interaction.Select({layers:[property],features:features,multi:!1,style:selectedStyle}),map.addInteraction(select),select.setActive(!1),translate=new ol.interaction.Translate({features:select.getFeatures()}),map.addInteraction(translate),translate.setActive(!1),map.on("click",clickInfo),$("#logout").click(function(){location.href="/map/logout"}),$("#insertProperty").click(function(){function e(e){$(".modal-dialog").removeClass("visuallyhidden"),dust.render("propertyInsert",e,function(a,r){$(".modal-content").html(r),componentHandler.upgradeDom(),handleForm.set({name:"insertProperty",submitBtnId:"insert"}),$("#estateType").change(function(){"Μονοκατοικία"===$(this).val()?($("#estateType_en").val("Detached House"),$("#estateType_en").parent().find(".mdl-selectfield__box-value").html("Detached House"),$("#bedrooms").val(""),$("#bedrooms").prop("disabled",!1)):"Διαμέρισμα"===$(this).val()?($("#estateType_en").val("Apartment"),$("#estateType_en").parent().find(".mdl-selectfield__box-value").html("Apartment"),$("#bedrooms").val(""),$("#bedrooms").prop("disabled",!1)):($("#estateType_en").val("Store"),$("#estateType_en").parent().find(".mdl-selectfield__box-value").html("Store"),$("#bedrooms").val(0),$("#bedrooms").prop("disabled",!0))}),$("#estateType_en").change(function(){"Detached House"===$(this).val()?($("#estateType").val("Μονοκατοικία"),$("#estateType").parent().find(".mdl-selectfield__box-value").html("Μονοκατοικία"),$("#bedrooms").val(""),$("#bedrooms").prop("disabled",!1)):"Apartment"===$(this).val()?($("#estateType").val("Διαμέρισμα"),$("#estateType").parent().find(".mdl-selectfield__box-value").html("Διαμέρισμα"),$("#bedrooms").val(""),$("#bedrooms").prop("disabled",!1)):($("#estateType").val("Κατάστημα"),$("#estateType").parent().find(".mdl-selectfield__box-value").html("Κατάστημα"),$("#bedrooms").val(0),$("#bedrooms").prop("disabled",!0))}),$("#cancelInsert").on("click",function(e){e.preventDefault(),handleForm.clear(),drawnProperties.getSource().clear(),draw.unByKey(t),$(".modal-dialog").addClass("visuallyhidden"),map.on("click",clickInfo)}),$("#insert").on("click",function(a){var r;a.preventDefault(),r=handleForm.get(),null!==r&&(r.x=e.coords[0],r.y=e.coords[1],r.adminId=id,$.ajax({url:"http://127.0.0.1:3000/db/property",type:"POST",data:r}).done(function(){toastr.clear(),toastr.success("Property Recorded In Database")}).fail(function(e,t,a){toastr.clear(),404===e.status?toastr.error("Sorry, we cannot find this property!"):503===e.status?toastr.error("Service Unavailable"):toastr.error("Internal Server Error")}).always(function(){a.preventDefault(),drawnProperties.getSource().clear(),propertySource.clear(),handleForm.clear(),draw.unByKey(t),$(".modal-dialog").addClass("visuallyhidden"),map.on("click",clickInfo)}))})})}var t;toastr.clear(),$(".property-info").addClass("visuallyhidden"),map.un("click",clickInfo),select.getFeatures().clear(),select.setActive(!1),draw.setActive(!0),t=draw.on("drawend",function(t){var a,r,o,n,s,l,i={};t.preventDefault(),draw.setActive(!1),a=ol.proj.transform(t.feature.getGeometry().getCoordinates(),"EPSG:3857","EPSG:4326"),i.coords=a,o=a[1]+","+a[0],r=$.getJSON("https://maps.googleapis.com/maps/api/geocode/json",{latlng:o,key:"AIzaSyCkH39_Ez21_RlC_pjXD09zpJ_ - eVhzCrQ"},function(e,t){return e}),r.then(function(){n=_.head(_.head(r.responseJSON.results).address_components).long_name,s=string_el_to_url(n),i.street_el=n,i.street_en=s,l=_.first(_.drop(_.map(_.head(r.responseJSON.results).address_components,"long_name"))),i.area_name=l,e(i)})})}),$("#deleteProperty").click(function(e){e.preventDefault(),toastr.clear(),$(".property-info").addClass("visuallyhidden"),map.un("click",clickInfo),draw.setActive(!1),features.clear(),propertySource.clear(),select.getFeatures().clear(),select.setActive(!0),select.once("select",function(e){var t;1===e.target.getFeatures().getLength()&&(t=toastr.warning('<p>Are you sure?</p><div class="toastr-btns"><button id="yesDelete" class="mdl-button mdl-js-button ">Yes</button><button id="noDelete" class="mdl-button mdl-js-button">No</button></div>'),t.on("click","#yesDelete",function(){var e=select.getFeatures().item(0).get("gid");$.ajax({url:"http://127.0.0.1:3000/db/property",type:"DELETE",dataType:"json",data:{gid:e}}).done(function(e,t,a){toastr.clear(),toastr.success("Property Successfully Deleted with id = "+e.propertygid+" from Database")}).fail(function(e,t,a){toastr.clear(),404===e.status?toastr.error("Sorry, we cannot find this property!"):503===e.status?toastr.error("Service Unavailable"):toastr.error("Internal Server Error")}).always(function(){propertySource.clear(),select.getFeatures().clear(),select.setActive(!1),map.on("click",clickInfo)}),t.remove()}),t.on("click","#noDelete",function(){t.remove(),select.getFeatures().clear(),select.setActive(!1)}))})}),$("#updateProperty").on("click",function(e){function t(e,t){$(".modal-dialog").removeClass("visuallyhidden"),dust.render("propertyUpdate",e,function(e,r){var o={};$(".modal-content").html(r),o.bedrooms=$("#bedrooms").val(),o.street_en=$("#street_en").val(),o.street_el=$("#street_el").val(),o.area_name=$("#area_name").val(),componentHandler.upgradeDom(),handleForm.set({name:"updateProperty",submitBtnId:"update"}),$("#estateType").change(function(){"Μονοκατοικία"===$(this).val()?($("#estateType_en").val("Detached House"),$("#estateType_en").parent().find(".mdl-selectfield__box-value").html("Detached House"),$("#bedrooms").val(o.bedrooms),$("#bedrooms").prop("disabled",!1)):"Διαμέρισμα"===$(this).val()?($("#estateType_en").val("Apartment"),$("#estateType_en").parent().find(".mdl-selectfield__box-value").html("Apartment"),$("#bedrooms").val(o.bedrooms),$("#bedrooms").prop("disabled",!1)):($("#estateType_en").val("Store"),$("#estateType_en").parent().find(".mdl-selectfield__box-value").html("Store"),$("#bedrooms").val(0),$("#bedrooms").prop("disabled",!0))}),$("#estateType_en").change(function(){"Detached House"===$(this).val()?($("#estateType").val("Μονοκατοικία"),$("#estateType").parent().find(".mdl-selectfield__box-value").html("Μονοκατοικία"),$("#bedrooms").val(o.bedrooms),$("#bedrooms").prop("disabled",!1)):"Apartment"===$(this).val()?($("#estateType").val("Διαμέρισμα"),$("#estateType").parent().find(".mdl-selectfield__box-value").html("Διαμέρισμα"),$("#bedrooms").val(o.bedrooms),$("#bedrooms").prop("disabled",!1)):($("#estateType").val("Κατάστημα"),$("#estateType").parent().find(".mdl-selectfield__box-value").html("Κατάστημα"),$("#bedrooms").val(0),$("#bedrooms").prop("disabled",!0))}),$("#update").on("click",function(e){var r;e.preventDefault(),r=handleForm.get(),_.isNil(r)||(r.x=t[0],r.y=t[1],r.gid=a,$.ajax({url:"http://127.0.0.1:3000/db/property",type:"PUT",data:r}).done(function(e,t,a){toastr.clear(),toastr.success("Property with gid "+e.propertygid+" Updated in Database")}).fail(function(e,t,a){toastr.clear(),404===e.status?toastr.error("Sorry, we cannot find this property!"):503===e.status?toastr.error("Service Unavailable"):toastr.error("Internal Server Error")}).always(function(){propertySource.clear(),select.getFeatures().clear(),select.setActive(!1),translate.unByKey(n),translate.setActive(!1),map.on("click",clickInfo),$(".modal-dialog").addClass("visuallyhidden")}))}),$("#cancelUpdate").on("click",function(e){e.preventDefault(),handleForm.clear(),propertySource.clear(),select.getFeatures().clear(),translate.unByKey(n),select.setActive(!1),translate.setActive(!1),map.on("click",clickInfo),$(".modal-dialog").addClass("visuallyhidden"),map.on("click",clickInfo)})})}var a,r,o,n;e.preventDefault(),toastr.clear(),map.un("click",clickInfo),draw.setActive(!1),features.clear(),propertySource.clear(),select.getFeatures().clear(),select.setActive(!0),$(".property-info").addClass("visuallyhidden"),select.once("select",function(e){var s,l=e.selected,i=l.length;1===i&&(a=_.head(e.selected).get("gid"),s=_.head(e.selected),o=ol.proj.transform(s.getGeometry().getCoordinates(),"EPSG:3857","EPSG:4326"),$.ajax({url:"http://127.0.0.1:3000/db/property",type:"GET",dataType:"json",data:{gid:a}}).done(function(e){var a={};a.options={},r=_.head(e.features).properties,a=toastr.warning('<p>Change Property Coordinates?</p><div class="toastr-btns"><button id="yesChangeXY" class="mdl-button mdl-js-button ">Yes</button><button id="noChangeXY" class="mdl-button mdl-js-button">No</button></div>'),a.on("click","#yesChangeXY",function(){var e,a,s,l,i;translate.setActive(!0),n=translate.on("translateend",function(n){o=ol.proj.transform(n.features.item(0).getGeometry().getCoordinates(),"EPSG:3857","EPSG:4326"),e=o[1]+","+o[0],a=$.getJSON("https://maps.googleapis.com/maps/api/geocode/json",{latlng:e,key:"AIzaSyCkH39_Ez21_RlC_pjXD09zpJ_ - eVhzCrQ"},function(e,t){return e.results}),a.then(function(){s=_.head(_.head(a.responseJSON.results).address_components).long_name,l=string_el_to_url(s),r.street_el=s,r.street_en=l,i=_.first(_.drop(_.map(_.head(a.responseJSON.results).address_components,"long_name"))),r.area_name=i,t(r,o)})})}),a.on("click","#noChangeXY",function(){translate.setActive(!1),toastr.clear(),t(r,o)})}).fail(function(){toastr.error("Oops Something Went Wrong!!!")}))}),$("#adminMap").removeAttr("style")}),$(document).ready(function(){window.Parsley.on("field:error",function(){console.log("Validation failed for: ",this.$element)}),window.Parsley.addValidator("date",{requirementType:"string",validateString:function(e,t){return moment(e,"DD-MM-YYYY",!0).isValid()===!0},messages:{en:"Wrong Date",el:"Λάθος Ημερομηνία"}})}),$(document).ajaxStart(function(){$loading.addClass("is-active")}).ajaxStop(function(){$loading.removeClass("is-active")});var handleForm=function(e,t){"use strict";function a(e){p=e.name,u=e.submitBtnId,r()}function r(){var t=e(".getmdl-select");t.each(function(){o(this)})}function o(e){var t=e.querySelector("input"),a=e.querySelectorAll("li");e.querySelector("i"),[].forEach.call(a,function(e){e.onclick=function(){t.value=e.textContent}})}function n(){return m=e('form[name="'+p+'"').parsley(),!0}function s(){m.destroy()}function l(){return m.validate()}function i(t){e("#street_el").val(t.street_el),e("#street_en").val(t.street_en)}function c(){var t={};return n(),l()===!0?(e('form[name="'+p+'"').find(".mdl-textfield__input").each(function(a,r){t[e(this).attr("id")]=e(this).val()}),e('form[name="'+p+'"').find(".mdl-checkbox__input").each(function(a,r){t[e(this).attr("id")]=e(this).prop("checked")}),e('form[name="'+p+'"').find(".mdl-radio__button").each(function(a,r){t[e(this).attr("id")]=e(this).prop("checked")}),e('form[name="'+p+'"').find(".mdl-selectfield__select").each(function(a,r){t[e(this).attr("id")]=e(this).val()}),t):null}function d(){1==n()&&s(),e('form[name="'+p+'"').find(".mdl-textfield__input").each(function(t,a){e(this).val(""),e(this).parent().eq(0).removeClass("is-dirty"),e(this).parent().eq(0).removeClass("is-invalid")}),e('form[name="'+p+'"').find(".mdl-checkbox__input").each(function(t,a){e(this).prop("checked",!1)}),e('form[name="'+p+'"').find(".mdl-checkbox").each(function(t,a){e(this).removeClass("is-checked")})}var p,u,m;return{set:a,get:c,clear:d,setAttributes:i}}(jQuery,parsley);
//# sourceMappingURL=data:application/json;base64,
