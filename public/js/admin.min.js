function PropertyStyle(){var e="../images/map-icons/pins/48/pin1.png";return new ol.style.Style({image:new ol.style.Icon({src:e,anchor:[.5,1],scale:.7})})}function clickInfo(e){var t,o,n={};o=new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 0, 0, 0.2)"}),stroke:new ol.style.Stroke({color:"#FF00003",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#FF0000"})})}),e.preventDefault(),t=map.forEachFeatureAtPixel(e.pixel,function(e,t){return{feature:e,layer:t}},this,function(e){return"property"===e.get("id")?!0:void 0},this),t?(n.feature={},t.feature.setStyle(o),t.feature.getKeys().forEach(function(e){n.feature[e]=t.feature.get(e)}),dust.render("adminPropertyInfo",n,function(e,o){$(".property-info").html(o),$(".property-info").removeClass("visuallyhidden"),componentHandler.upgradeDom(),$("#listing").on("click",function(e){var o;e.preventDefault(),o=$(this).data("gid"),$.ajax({url:"http://127.0.0.1:3000/db/listing",type:"GET",dataType:"json",data:{gid:o}}).done(function(e){var n=e.id;$(".modal-dialog").removeClass("visuallyhidden"),dust.render("listingInsert",e,function(e,r){$(".modal-content").html(r),componentHandler.upgradeDom(),handleForm.set({name:"insert-update-listing",submitBtnId:"ok"}),$("input[name=options]").on("change",function(e){"Sale"===$(this).val()?($("#pets").prop("disabled",!0),$("#pets").prop("checked",!1),$("label[for=pets]").removeClass("is-checked"),$("#prefered_customer").val(""),$("#prefered_customer").parent().eq(0).removeClass("is-dirty"),$("#prefered_customer").prop("disabled",!0)):($("#pets").prop("disabled",!1),$("#prefered_customer").prop("disabled",!1))}),$("#sent-listing").on("click",function(e){var r;e.preventDefault(),r=handleForm.get(),console.log(r),null!==r&&(r.property_gid=o,r.listing_id=n,$.ajax({url:"http://127.0.0.1:3000/db/listing/update",type:"POST",data:r,dataType:"text"}).done(function(e,t,o){201===o.status?toastr.success("Property Updated In Database"):toastr.error("Oops Something Went Wrong!!!")}).fail(function(e,t,o){toastr.error("Oops Something Went Wrong!!!")}).always(function(){handleForm.clear(),$("#openModal").addClass("visuallyhidden"),propertySource.clear(),t.feature.setStyle(null)}))}),$("#cancel-listing").on("click",function(e){e.preventDefault(),handleForm.clear(),t.feature.setStyle(null),$("#openModal").addClass("visuallyhidden")})})}).fail(function(){var e={};"el"===lang?(e.msg="Δεν Βρέθηκε Αγγελία",e.text="Δημιουργία Καινούργιας;",e.yes="ΝΑΙ",e.no="ΟΧΙ"):(e.msg="No Listing Found",e.text="Create New Listing?",e.yes="YES",e.no="NO"),dust.render("dialog",e,function(e,n){$("#openModal").removeClass("visuallyhidden"),$(".modal-content").html(n),componentHandler.upgradeDom(),$("#yes").on("click",function(e){e.preventDefault(),dust.render("listingInsert",{rent:"true"},function(e,n){$(".modal-content").html(n),componentHandler.upgradeDom(),handleForm.set({name:"insert-update-listing",submitBtnId:"ok"}),$("input[name=options]").on("change",function(e){"Sale"===$(this).val()?($("#pets").prop("disabled",!0),$("#pets").prop("checked",!1),$("label[for=pets]").removeClass("is-checked"),$("#prefered_customer").val(""),$("#prefered_customer").parent().eq(0).removeClass("is-dirty"),$("#prefered_customer").prop("disabled",!0)):($("#pets").prop("disabled",!1),$("#prefered_customer").prop("disabled",!1))}),$("#sent-listing").on("click",function(e){var n;e.preventDefault(),n=handleForm.get(),null!==n&&(n.property_gid=o,$.ajax({url:"http://127.0.0.1:3000/db/listing/insert",type:"POST",data:n,dataType:"text"}).done(function(e,t,o){201===o.status?toastr.success("Property Updated In Database"):toastr.error("Oops Something Went Wrong!!!")}).fail(function(e,t,o){toastr.error("Oops Something Went Wrong!!!")}).always(function(){handleForm.clear(),$("#openModal").addClass("visuallyhidden"),t.feature.setStyle(null)}))}),$("#cancel-listing").on("click",function(e){e.preventDefault(),handleForm.clear(),t.feature.setStyle(null),$("#openModal").addClass("visuallyhidden")})})}),$("#no").on("click",function(e){e.preventDefault(),$("#openModal").addClass("visuallyhidden"),t.feature.setStyle(null)})})})})})):(propertySource.forEachFeature(function(e){e.setStyle(null)}),$(".property-info").addClass("visuallyhidden"),toastr.options={positionClass:"toast-bottom-full-width",preventDuplicates:!0,timeOut:60},toastr.error("Cant Find Any Property There..."))}var center=[3677385,4120949],extent=[3590094,4102833,3855483,4261211],lang=document.documentElement.lang,geoJSONFormat=new ol.format.GeoJSON({defaultDataProjection:"EPSG:4326"}),propertySource,property,map,features,drawnProperties,draw,select,translate,bing=new ol.layer.Tile({visible:!0,source:new ol.source.BingMaps({key:"Ak2Gq8VUfICsPpuf7LRANXmXt2sHWmSLPhohmVLFtFIEwYjs_5MCyAhAFwRSVpLj",imagerySet:"Aerial"}),maxZoom:19,crossOrigin:"anonymous",preload:1/0,id:"bing"}),mapbox=new ol.layer.Tile({source:new ol.source.XYZ({attributions:[new ol.Attribution({html:'<a href="https://www.mapbox.com/about/maps/" target="_blank">&copy; Mapbox &copy; OpenStreetMap</a>'})],url:"https://api.mapbox.com/v4/mapbox.streets/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoiZmlydmFpbiIsImEiOiJlOWYyYTM0NThiNWM0YjJjODJjNDE4ODQzNzA2MGQyNiJ9.-NVDO27Hzt-w_nQosUPfLA"}),id:"mapbox"});propertySource=new ol.source.Vector({format:geoJSONFormat,loader:function(e,t,o){var n="http://127.0.0.1:3000/db/admin",r=this;r.clear(),$.ajax({url:n,type:"POST",beforeSend:function(e){localStorage.getItem("userToken")&&e.setRequestHeader("Authorization","Bearer "+localStorage.getItem("userToken"))},dataType:"json",data:{id:id}}).done(function(e){var t=geoJSONFormat.readFeatures(e,{featureProjection:"EPSG:3857"});r.addFeatures(t)}).fail(function(){console.log("error")})},strategy:ol.loadingstrategy.all}),property=new ol.layer.Vector({source:propertySource,id:"property",visible:!0,style:PropertyStyle()}),property.setZIndex(2),map=new ol.Map({target:"adminMap",layers:[mapbox,property],loadTilesWhileAnimating:!0,loadTilesWhileInteracting:!0,renderer:"canvas",controls:ol.control.defaults({attributionOptions:{collapsible:!1,collapsed:!1}}).extend([new ol.control.ScaleLine({units:"metric"}),new ol.control.OverviewMap({className:"ol-overviewmap ol-custom-overviewmap",collapsible:!0,collapsed:!0,layers:[bing]}),new ol.control.ZoomToExtent({extent:extent})]),view:new ol.View({center:center,projection:"EPSG:3857",zoom:14,maxZoom:19,minZoom:10})}),"el"===lang?(bing.set("name","Δορυφορική εικόνα"),mapbox.set("name","Χάρτης"),property.set("name","Ακίνητα")):(bing.set("name","Sattelite Image"),mapbox.set("name","Map"),property.set("name","Properties")),features=new ol.Collection,drawnProperties=new ol.layer.Vector({source:new ol.source.Vector,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"#ffcc33",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#ffcc33"})})}),id:"drawnProperties"}),map.addLayer(drawnProperties),draw=new ol.interaction.Draw({source:drawnProperties.getSource(),type:"Point",style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"#ffcc33",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#ffcc33"})})})}),map.addInteraction(draw),draw.setActive(!1),select=new ol.interaction.Select({layers:[property],features:features,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 0, 0, 0.2)"}),stroke:new ol.style.Stroke({color:"#FF00003",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#FF0000"})})})}),map.addInteraction(select),select.setActive(!1),translate=new ol.interaction.Translate({features:select.getFeatures()}),map.addInteraction(translate),translate.setActive(!1),map.on("click",clickInfo),$("#logout").click(function(){location.href="/map/logout"}),$("#insertProperty").click(function(){$(".property-info").addClass("visuallyhidden"),toastr.options={positionClass:"toast-top-center",preventDuplicates:!0,timeOut:60},map.un("click",clickInfo),select.setActive(!1),draw.setActive(!0),draw.on("drawend",function(e){var t={};e.preventDefault(),draw.setActive(!1),$(".modal-dialog").removeClass("visuallyhidden"),dust.render("propertyInsert",t,function(e,t){$(".modal-content").html(t),componentHandler.upgradeDom(),handleForm.set({name:"insertProperty",submitBtnId:"insert"}),$("#cancelInsert").on("click",function(e){e.preventDefault(),handleForm.clear(),drawnProperties.getSource().clear(),$(".modal-dialog").addClass("visuallyhidden"),map.on("click",clickInfo)}),$("#insert").on("click",function(e){var t,o;e.preventDefault(),t=handleForm.get(),console.log(t),null!==t&&(handleCoords.setLayer("drawnProperties"),o=handleCoords.coords(),t.x=o[0],t.y=o[1],t.adminId=id,$.ajax({url:"http://127.0.0.1:3000/db/insert",type:"POST",data:t}).done(function(e,t,o){toastr.options={positionClass:"toast-bottom-full-width",preventDuplicates:!0,timeOut:60},201===o.status?toastr.success("Property Recorded In Database"):toastr.error("Oops Something Went Wrong!!!")}).fail(function(e,t,o){toastr.error("Oops Something Went Wrong!!!")}).always(function(){e.preventDefault(),drawnProperties.getSource().clear(),propertySource.clear(),handleForm.clear(),$(".modal-dialog").addClass("visuallyhidden"),map.on("click",clickInfo)}))})})})}),$("#deleteProperty").click(function(e){e.preventDefault(),$(".property-info").addClass("visuallyhidden"),toastr.options={positionClass:"toast-top-center",preventDuplicates:!0,timeOut:20},map.un("click",clickInfo),draw.setActive(!1),features.clear(),propertySource.clear(),select.setActive(!0),select.once("select",function(e){var t;1===e.target.getFeatures().getLength()&&(toastr.options.newestOnTop=!0,toastr.options.preventDuplicates=!0,toastr.options.extendedTimeOut=0,toastr.options.timeOut=0,toastr.options.closeButton=!0,t=toastr.warning('<p>Are you sure?</p><div class="toastr-btns"><button id="yesDelete" class="mdl-button mdl-js-button ">Yes</button><button id="noDelete" class="mdl-button mdl-js-button">No</button></div>'),t.on("click","#yesDelete",function(){var e=select.getFeatures().item(0).get("gid");$.ajax({url:"http://127.0.0.1:3000/db/delete",type:"POST",dataType:"text",data:{gid:e}}).done(function(e,t,o){toastr.options={positionClass:"toast-bottom-full-width",preventDuplicates:!0,timeOut:60},toastr.success("Property Deleted From Database")}).fail(function(e,t,o){toastr.options={positionClass:"toast-bottom-full-width",preventDuplicates:!0,timeOut:60},toastr.success("Oops Something Went Wrong!!!")}).always(function(){propertySource.clear(),select.getFeatures().clear(),select.setActive(!1),map.on("click",clickInfo)}),t.remove()}),t.on("click","#noDelete",function(){t.remove(),select.getFeatures().clear(),select.setActive(!1)}))})}),$("#updateProperty").on("click",function(e){var t,o;e.preventDefault(),map.un("click",clickInfo),draw.setActive(!1),features.clear(),propertySource.clear(),select.setActive(!0),translate.setActive(!0),$(".property-info").addClass("visuallyhidden"),select.once("select",function(e){1===select.getFeatures().getLength()&&(t=select.getFeatures().item(0).get("gid"),$.ajax({url:"http://127.0.0.1:3000/db/fetch",type:"POST",dataType:"json",data:{gid:t}}).done(function(e){o=_.head(e.features).properties}).fail(function(){toastr.error("Oops Something Went Wrong!!!")}).always(function(){console.log("complete")}))}),translate.on("translateend",function(e){var n=ol.proj.transform(e.coordinate,"EPSG:3857","EPSG:4326");$(".modal-dialog").removeClass("visuallyhidden"),dust.render("propertyUpdate",o,function(e,o){$(".modal-content").html(o),componentHandler.upgradeDom(),handleForm.set({name:"updateProperty",submitBtnId:"update"}),$("#update").on("click",function(e){var o;e.preventDefault(),o=handleForm.get(),_.isNil(o)||(o.x=n[0],o.y=n[1],o.gid=t,$.ajax({url:"http://127.0.0.1:3000/db/update",type:"POST",data:o}).done(function(e,t,o){toastr.options={positionClass:"toast-bottom-full-width",preventDuplicates:!0,timeOut:60},200===o.status?toastr.success("Property Updated In Database"):toastr.error("Oops Something Went Wrong!!!")}).fail(function(){toastr.error("Oops Something Went Wrong!!!")}).always(function(){propertySource.clear(),select.getFeatures().clear(),select.setActive(!1),translate.setActive(!1),map.on("click",clickInfo),$(".modal-dialog").addClass("visuallyhidden")}))}),$("#cancelUpdate").on("click",function(e){e.preventDefault(),handleForm.clear(),propertySource.clear(),select.getFeatures().clear(),select.setActive(!1),translate.setActive(!1),map.on("click",clickInfo),$(".modal-dialog").addClass("visuallyhidden"),map.on("click",clickInfo)})}),$("#adminMap").removeAttr("style")})}),$(document).ready(function(){window.Parsley.on("field:error",function(){console.log("Validation failed for: ",this.$element)}),window.Parsley.addValidator("date",{requirementType:"string",validateString:function(e,t){return moment(e,"DD-MM-YYYY",!0).isValid()===!0?!0:!1},messages:{en:"Wrong Date",el:"Λάθος Ημερομηνία"}})});var handleCoords=function(e){"use strict";function t(e){for(var t=map.getLayers(),o=t.getLength(),n=0;o>n;n++)if(e===t.item(n).get("id"))return t.item(n);return null}function o(e){a=t(e)}function n(){var t;return t=a.getSource().getFeatures()[0].getGeometry().getCoordinates(),r=e.proj.transform(t,"EPSG:3857","EPSG:4326")}var r,a;return{coords:n,setLayer:o}}(ol),handleForm=function(e,t){"use strict";function o(e){d=e.name,u=e.submitBtnId,n()}function n(){var t=e(".getmdl-select");t.each(function(){r(this)})}function r(e){var t=e.querySelector("input"),o=e.querySelectorAll("li");e.querySelector("i"),[].forEach.call(o,function(e){e.onclick=function(){t.value=e.textContent}})}function a(){return p=e('form[name="'+d+'"').parsley(),!0}function l(){p.destroy()}function i(){return p.validate()}function s(){var t={};return a(),i()===!0?(e('form[name="'+d+'"').find(".mdl-textfield__input").each(function(o,n){t[e(this).attr("id")]=e(this).val()}),e('form[name="'+d+'"').find(".mdl-checkbox__input").each(function(o,n){t[e(this).attr("id")]=e(this).prop("checked")}),e('form[name="'+d+'"').find(".mdl-radio__button").each(function(o,n){t[e(this).attr("id")]=e(this).prop("checked")}),t):null}function c(){1==a()&&l(),e('form[name="'+d+'"').find(".mdl-textfield__input").each(function(t,o){e(this).val(""),e(this).parent().eq(0).removeClass("is-dirty"),e(this).parent().eq(0).removeClass("is-invalid")}),e('form[name="'+d+'"').find(".mdl-checkbox__input").each(function(t,o){e(this).prop("checked",!1)}),e('form[name="'+d+'"').find(".mdl-checkbox").each(function(t,o){e(this).removeClass("is-checked")})}var d,u,p;return{set:o,get:s,clear:c}}(jQuery,parsley);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluLmpzIiwiaGFuZGxlQ29vcmRzLmpzIiwiaGFuZGxlRm9ybS5qcyJdLCJuYW1lcyI6WyJQcm9wZXJ0eVN0eWxlIiwic3JjIiwib2wiLCJzdHlsZSIsIlN0eWxlIiwiaW1hZ2UiLCJJY29uIiwiYW5jaG9yIiwic2NhbGUiLCJjbGlja0luZm8iLCJldmVudCIsImNsaWNrZWRGZWF0dXJlIiwiY2xpY2tlZEZlYXR1cmVTdHlsZSIsIm9iaiIsImZpbGwiLCJGaWxsIiwiY29sb3IiLCJzdHJva2UiLCJTdHJva2UiLCJ3aWR0aCIsIkNpcmNsZSIsInJhZGl1cyIsInByZXZlbnREZWZhdWx0IiwibWFwIiwiZm9yRWFjaEZlYXR1cmVBdFBpeGVsIiwicGl4ZWwiLCJmZWF0dXJlIiwibGF5ZXIiLCJ0aGlzIiwiZ2V0Iiwic2V0U3R5bGUiLCJnZXRLZXlzIiwiZm9yRWFjaCIsImtleSIsImR1c3QiLCJyZW5kZXIiLCJlcnIiLCJvdXQiLCIkIiwiaHRtbCIsInJlbW92ZUNsYXNzIiwiY29tcG9uZW50SGFuZGxlciIsInVwZ3JhZGVEb20iLCJvbiIsImdpZCIsImRhdGEiLCJhamF4IiwidXJsIiwidHlwZSIsImRhdGFUeXBlIiwiZG9uZSIsImxpc3RpbmdfaWQiLCJpZCIsImhhbmRsZUZvcm0iLCJzZXQiLCJuYW1lIiwic3VibWl0QnRuSWQiLCJ2YWwiLCJwcm9wIiwicGFyZW50IiwiZXEiLCJjb25zb2xlIiwibG9nIiwicHJvcGVydHlfZ2lkIiwidGV4dFN0YXR1cyIsImpxWEhSIiwic3RhdHVzIiwidG9hc3RyIiwic3VjY2VzcyIsImVycm9yIiwiZmFpbCIsImVycm9yVGhyb3duIiwiYWx3YXlzIiwiY2xlYXIiLCJhZGRDbGFzcyIsInByb3BlcnR5U291cmNlIiwibGFuZyIsIm1zZyIsInRleHQiLCJ5ZXMiLCJubyIsInJlbnQiLCJmb3JFYWNoRmVhdHVyZSIsImYiLCJvcHRpb25zIiwicG9zaXRpb25DbGFzcyIsInByZXZlbnREdXBsaWNhdGVzIiwidGltZU91dCIsImNlbnRlciIsImV4dGVudCIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50IiwiZ2VvSlNPTkZvcm1hdCIsImZvcm1hdCIsIkdlb0pTT04iLCJkZWZhdWx0RGF0YVByb2plY3Rpb24iLCJwcm9wZXJ0eSIsImZlYXR1cmVzIiwiZHJhd25Qcm9wZXJ0aWVzIiwiZHJhdyIsInNlbGVjdCIsInRyYW5zbGF0ZSIsImJpbmciLCJUaWxlIiwidmlzaWJsZSIsInNvdXJjZSIsIkJpbmdNYXBzIiwiaW1hZ2VyeVNldCIsIm1heFpvb20iLCJjcm9zc09yaWdpbiIsInByZWxvYWQiLCJJbmZpbml0eSIsIm1hcGJveCIsIlhZWiIsImF0dHJpYnV0aW9ucyIsIkF0dHJpYnV0aW9uIiwiVmVjdG9yIiwibG9hZGVyIiwicmVzb2x1dGlvbiIsInByb2plY3Rpb24iLCJzZWxmIiwiYmVmb3JlU2VuZCIsInhociIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzZXRSZXF1ZXN0SGVhZGVyIiwicmVzcG9uc2UiLCJyZWFkRmVhdHVyZXMiLCJmZWF0dXJlUHJvamVjdGlvbiIsImFkZEZlYXR1cmVzIiwic3RyYXRlZ3kiLCJsb2FkaW5nc3RyYXRlZ3kiLCJhbGwiLCJzZXRaSW5kZXgiLCJNYXAiLCJ0YXJnZXQiLCJsYXllcnMiLCJsb2FkVGlsZXNXaGlsZUFuaW1hdGluZyIsImxvYWRUaWxlc1doaWxlSW50ZXJhY3RpbmciLCJyZW5kZXJlciIsImNvbnRyb2xzIiwiY29udHJvbCIsImRlZmF1bHRzIiwiYXR0cmlidXRpb25PcHRpb25zIiwiY29sbGFwc2libGUiLCJjb2xsYXBzZWQiLCJleHRlbmQiLCJTY2FsZUxpbmUiLCJ1bml0cyIsIk92ZXJ2aWV3TWFwIiwiY2xhc3NOYW1lIiwiWm9vbVRvRXh0ZW50IiwidmlldyIsIlZpZXciLCJ6b29tIiwibWluWm9vbSIsIkNvbGxlY3Rpb24iLCJhZGRMYXllciIsImludGVyYWN0aW9uIiwiRHJhdyIsImdldFNvdXJjZSIsImFkZEludGVyYWN0aW9uIiwic2V0QWN0aXZlIiwiU2VsZWN0IiwiVHJhbnNsYXRlIiwiZ2V0RmVhdHVyZXMiLCJjbGljayIsImxvY2F0aW9uIiwiaHJlZiIsInVuIiwiYyIsImhhbmRsZUNvb3JkcyIsInNldExheWVyIiwiY29vcmRzIiwieCIsInkiLCJhZG1pbklkIiwib25jZSIsImUiLCIkdG9hc3QiLCJnZXRMZW5ndGgiLCJuZXdlc3RPblRvcCIsImV4dGVuZGVkVGltZU91dCIsImNsb3NlQnV0dG9uIiwid2FybmluZyIsIml0ZW0iLCJyZW1vdmUiLCJfIiwiaGVhZCIsInByb3BlcnRpZXMiLCJwcm9qIiwidHJhbnNmb3JtIiwiY29vcmRpbmF0ZSIsImlzTmlsIiwicmVtb3ZlQXR0ciIsInJlYWR5Iiwid2luZG93IiwiUGFyc2xleSIsIiRlbGVtZW50IiwiYWRkVmFsaWRhdG9yIiwicmVxdWlyZW1lbnRUeXBlIiwidmFsaWRhdGVTdHJpbmciLCJ2YWx1ZSIsInJlcXVpcmVtZW50IiwibW9tZW50IiwiaXNWYWxpZCIsIm1lc3NhZ2VzIiwiZW4iLCJlbCIsImZpbmRCeUlkIiwiZ2V0TGF5ZXJzIiwibGVuZ3RoIiwiaSIsImwiLCJnZXRDb29yZHMiLCJjb29yZEVQU0czODU3IiwiZ2V0R2VvbWV0cnkiLCJnZXRDb29yZGluYXRlcyIsInBhcnNsZXkiLCJzZXRPcHRpb25zIiwiZm9ybU5hbWUiLCJlbmFibGVTZWxlY3QiLCJlYWNoIiwiYWRkRXZlbnRMaXN0ZW5lcnMiLCJ0IiwicXVlcnlTZWxlY3RvciIsIm4iLCJxdWVyeVNlbGVjdG9yQWxsIiwiY2FsbCIsIm9uY2xpY2siLCJ0ZXh0Q29udGVudCIsImNyZWF0ZVZhbGlkYXRvciIsInAiLCJkZXN0cm95VmFsaWRhdG9yIiwiZGVzdHJveSIsInZhbGlkYXRlRm9ybSIsInZhbGlkYXRlIiwiZ2V0QXR0cmlidXRlcyIsImZpbmQiLCJpbmRleCIsImVsZW1lbnQiLCJhdHRyIiwicmVzZXRGb3JtIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiQUE0QkEsUUFBQUEsaUJBQ0EsR0FBQUMsR0FBQSxzQ0FDQSxPQUFB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M00sRUFBQVYsTUFBQThCLEtBQUEsYUFFQXBCLEVBQUEsY0FBQXNMLEVBQUEsS0FBQWtCLEtBQUEsc0JBQUFoQixLQUNBLFNBQUFpQixFQUFBQyxHQUNBbk8sRUFBQXlCLEVBQUFWLE1BQUFxTixLQUFBLE9BQUEzTSxFQUFBVixNQUFBOEIsS0FBQSxhQUVBN0MsR0FFQSxLQUdBLFFBQUFxTyxLQUNBLEdBQUFYLEtBQ0FFLElBRUFuTSxFQUFBLGNBQUFzTCxFQUFBLEtBQUFrQixLQUFBLHlCQUFBaEIsS0FFQSxTQUFBaUIsRUFBQUMsR0FDQTFNLEVBQUFWLE1BQUE2QixJQUFBLElBQ0FuQixFQUFBVixNQUFBK0IsU0FBQUMsR0FBQSxHQUFBcEIsWUFBQSxZQUNBRixFQUFBVixNQUFBK0IsU0FBQUMsR0FBQSxHQUFBcEIsWUFBQSxnQkFFQUYsRUFBQSxjQUFBc0wsRUFBQSxLQUFBa0IsS0FBQSx3QkFBQWhCLEtBRUEsU0FBQWlCLEVBQUFDLEdBQ0ExTSxFQUFBVixNQUFBOEIsS0FBQSxXQUFBLEtBRUFwQixFQUFBLGNBQUFzTCxFQUFBLEtBQUFrQixLQUFBLGlCQUFBaEIsS0FFQSxTQUFBaUIsRUFBQUMsR0FDQTFNLEVBQUFWLE1BQUFZLFlBQUEsZ0JBeEZBLEdBQUFvTCxHQUFBcEssRUFBQWdMLENBMkZBLFFBQ0FsTCxJQUFBcUssRUFDQTlMLElBQUFnTixFQUNBcEssTUFBQXlLLElBT0FDLE9BQUF6QiIsImZpbGUiOiJhZG1pbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY2VudGVyID0gWzM2NzczODUsIDQxMjA5NDldLFxyXG4gICAgZXh0ZW50ID0gWzM1OTAwOTQsIDQxMDI4MzMsIDM4NTU0ODMsIDQyNjEyMTFdLFxyXG4gICAgbGFuZyA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5sYW5nLFxyXG4gICAgZ2VvSlNPTkZvcm1hdCA9IG5ldyBvbC5mb3JtYXQuR2VvSlNPTih7XHJcbiAgICAgIGRlZmF1bHREYXRhUHJvamVjdGlvbjogJ0VQU0c6NDMyNidcclxuICAgIH0pLFxyXG4gICAgcHJvcGVydHlTb3VyY2UsIHByb3BlcnR5LCBtYXAsIGZlYXR1cmVzLCBkcmF3blByb3BlcnRpZXMsIGRyYXcsIHNlbGVjdCwgdHJhbnNsYXRlO1xyXG52YXIgYmluZyA9IG5ldyBvbC5sYXllci5UaWxlKHtcclxuICB2aXNpYmxlOiB0cnVlLFxyXG4gIHNvdXJjZTogbmV3IG9sLnNvdXJjZS5CaW5nTWFwcyh7XHJcbiAgICBrZXk6ICdBazJHcThWVWZJQ3NQcHVmN0xSQU5YbVh0MnNIV21TTFBob2htVkxGdEZJRXdZanNfNU1DeUFoQUZ3UlNWcExqJyxcclxuICAgIGltYWdlcnlTZXQ6ICdBZXJpYWwnXHJcbiAgfSksXHJcbiAgbWF4Wm9vbTogMTksXHJcbiAgY3Jvc3NPcmlnaW46ICdhbm9ueW1vdXMnLFxyXG4gIHByZWxvYWQ6IEluZmluaXR5LFxyXG4gIGlkOiAnYmluZydcclxufSk7XHJcbnZhciBtYXBib3ggPSBuZXcgb2wubGF5ZXIuVGlsZSh7XHJcbiAgc291cmNlOiBuZXcgb2wuc291cmNlLlhZWih7XHJcbiAgICBhdHRyaWJ1dGlvbnM6IFtuZXcgb2wuQXR0cmlidXRpb24oe1xyXG4gICAgICBodG1sOiAnPGEgaHJlZj1cImh0dHBzOi8vd3d3Lm1hcGJveC5jb20vYWJvdXQvbWFwcy9cIiB0YXJnZXQ9XCJfYmxhbmtcIj4mY29weTsgTWFwYm94ICZjb3B5OyBPcGVuU3RyZWV0TWFwPC9hPidcclxuICAgIH0pXSxcclxuICAgIHVybDogJ2h0dHBzOi8vYXBpLm1hcGJveC5jb20vdjQvbWFwYm94LnN0cmVldHMve3p9L3t4fS97eX0ucG5nP2FjY2Vzc190b2tlbj1way5leUoxSWpvaVptbHlkbUZwYmlJc0ltRWlPaUpsT1dZeVlUTTBOVGhpTldNMFlqSmpPREpqTkRFNE9EUXpOekEyTUdReU5pSjkuLU5WRE8yN0h6dC13X25Rb3NVUGZMQSdcclxuICB9KSxcclxuICBpZDogJ21hcGJveCdcclxufSk7XHJcblxyXG5mdW5jdGlvbiBQcm9wZXJ0eVN0eWxlKCkge1xyXG4gIHZhciBzcmMgPSAnLi4vaW1hZ2VzL21hcC1pY29ucy9waW5zLzQ4L3BpbjEucG5nJztcclxuICByZXR1cm4gbmV3IG9sLnN0eWxlLlN0eWxlKHtcclxuICAgIGltYWdlOiBuZXcgb2wuc3R5bGUuSWNvbigoe1xyXG4gICAgICBzcmM6IHNyYyxcclxuICAgICAgYW5jaG9yOiBbXHJcbiAgICAgICAgMC41LCAxXHJcbiAgICAgIF0sXHJcbiAgICAgIHNjYWxlOiAwLjdcclxuICAgIH0pKVxyXG4gIH0pO1xyXG59XHJcbnByb3BlcnR5U291cmNlID0gbmV3IG9sLnNvdXJjZS5WZWN0b3Ioe1xyXG4gIGZvcm1hdDogZ2VvSlNPTkZvcm1hdCxcclxuICBsb2FkZXI6IGZ1bmN0aW9uKGV4dGVudCwgcmVzb2x1dGlvbiwgcHJvamVjdGlvbikge1xyXG4gICAgdmFyIHVybCA9ICdodHRwOi8vMTI3LjAuMC4xOjMwMDAvZGIvYWRtaW4nO1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgc2VsZi5jbGVhcigpO1xyXG4gICAgJC5hamF4KHtcclxuICAgICAgdXJsOiB1cmwsXHJcbiAgICAgIHR5cGU6ICdQT1NUJyxcclxuICAgICAgJ2JlZm9yZVNlbmQnOiBmdW5jdGlvbih4aHIpIHtcclxuICAgICAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXJUb2tlbicpKSB7XHJcbiAgICAgICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcignQXV0aG9yaXphdGlvbicsICdCZWFyZXIgJyArIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyVG9rZW4nKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICBkYXRhVHlwZTogJ2pzb24nLFxyXG4gICAgICBkYXRhOiB7XHJcbiAgICAgICAgaWQ6IGlkXHJcbiAgICAgIH1cclxuICAgIH0pLmRvbmUoZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuICAgICAgdmFyIGZlYXR1cmVzID0gZ2VvSlNPTkZvcm1hdC5yZWFkRmVhdHVyZXMocmVzcG9uc2UsIHtcclxuICAgICAgICBmZWF0dXJlUHJvamVjdGlvbjogJ0VQU0c6Mzg1NydcclxuICAgICAgfSk7XHJcbiAgICAgIHNlbGYuYWRkRmVhdHVyZXMoZmVhdHVyZXMpO1xyXG4gICAgfSkuZmFpbChmdW5jdGlvbigpIHtcclxuICAgICAgY29uc29sZS5sb2coJ2Vycm9yJyk7XHJcbiAgICB9KTtcclxuICB9LFxyXG4gIHN0cmF0ZWd5OiBvbC5sb2FkaW5nc3RyYXRlZ3kuYWxsXHJcbn0pO1xyXG5wcm9wZXJ0eSA9IG5ldyBvbC5sYXllci5WZWN0b3Ioe1xyXG4gIHNvdXJjZTogcHJvcGVydHlTb3VyY2UsXHJcbiAgaWQ6ICdwcm9wZXJ0eScsXHJcbiAgdmlzaWJsZTogdHJ1ZSxcclxuICBzdHlsZTogUHJvcGVydHlTdHlsZSgpXHJcbn0pO1xyXG5wcm9wZXJ0eS5zZXRaSW5kZXgoMik7XHJcbm1hcCA9IG5ldyBvbC5NYXAoe1xyXG4gIHRhcmdldDogJ2FkbWluTWFwJyxcclxuICBsYXllcnM6IFtcclxuICAgIG1hcGJveCwgcHJvcGVydHlcclxuICBdLFxyXG4gIGxvYWRUaWxlc1doaWxlQW5pbWF0aW5nOiB0cnVlLFxyXG4gIGxvYWRUaWxlc1doaWxlSW50ZXJhY3Rpbmc6IHRydWUsXHJcbiAgcmVuZGVyZXI6ICdjYW52YXMnLFxyXG4gIGNvbnRyb2xzOiBvbC5jb250cm9sLmRlZmF1bHRzKHtcclxuICAgIGF0dHJpYnV0aW9uT3B0aW9uczoge1xyXG4gICAgICBjb2xsYXBzaWJsZTogZmFsc2UsXHJcbiAgICAgIGNvbGxhcHNlZDogZmFsc2VcclxuICAgIH1cclxuICB9KS5leHRlbmQoW1xyXG4gICAgbmV3IG9sLmNvbnRyb2wuU2NhbGVMaW5lKHtcclxuICAgICAgdW5pdHM6ICdtZXRyaWMnXHJcbiAgICB9KSxcclxuICAgIG5ldyBvbC5jb250cm9sLk92ZXJ2aWV3TWFwKHtcclxuICAgICAgY2xhc3NOYW1lOiAnb2wtb3ZlcnZpZXdtYXAgb2wtY3VzdG9tLW92ZXJ2aWV3bWFwJyxcclxuICAgICAgY29sbGFwc2libGU6IHRydWUsXHJcbiAgICAgIGNvbGxhcHNlZDogdHJ1ZSxcclxuICAgICAgbGF5ZXJzOiBbYmluZ11cclxuICAgIH0pLFxyXG4gICAgbmV3IG9sLmNvbnRyb2wuWm9vbVRvRXh0ZW50KHtcclxuICAgICAgZXh0ZW50OiBleHRlbnRcclxuICAgIH0pXHJcbiAgXSksXHJcbiAgdmlldzogbmV3IG9sLlZpZXcoe1xyXG4gICAgY2VudGVyOiBjZW50ZXIsXHJcbiAgICAvLyBleHRlbnQ6IGV4dGVudCxcclxuICAgIHByb2plY3Rpb246ICdFUFNHOjM4NTcnLFxyXG4gICAgem9vbTogMTQsXHJcbiAgICBtYXhab29tOiAxOSxcclxuICAgIG1pblpvb206IDEwXHJcbiAgfSlcclxufSk7XHJcbmlmIChsYW5nID09PSAnZWwnKSB7XHJcbiAgYmluZy5zZXQoJ25hbWUnLCAnzpTOv8+Bz4XPhs6/z4HOuc66zq4gzrXOuc66z4zOvc6xJyk7XHJcbiAgbWFwYm94LnNldCgnbmFtZScsICfOp86sz4HPhM63z4InKTtcclxuICBwcm9wZXJ0eS5zZXQoJ25hbWUnLCAnzpHOus6vzr3Ot8+EzrEnKTtcclxufSBlbHNlIHtcclxuICBiaW5nLnNldCgnbmFtZScsICdTYXR0ZWxpdGUgSW1hZ2UnKTtcclxuICBtYXBib3guc2V0KCduYW1lJywgJ01hcCcpO1xyXG4gIHByb3BlcnR5LnNldCgnbmFtZScsICdQcm9wZXJ0aWVzJyk7XHJcbn1cclxuLy89PT09PT0gaW50ZXJhY3Rpb25zID09PT09PVxyXG5mZWF0dXJlcyA9IG5ldyBvbC5Db2xsZWN0aW9uKCk7XHJcbmRyYXduUHJvcGVydGllcyA9IG5ldyBvbC5sYXllci5WZWN0b3Ioe1xyXG4gIHNvdXJjZTogbmV3IG9sLnNvdXJjZS5WZWN0b3IoKSxcclxuICBzdHlsZTogbmV3IG9sLnN0eWxlLlN0eWxlKHtcclxuICAgIGZpbGw6IG5ldyBvbC5zdHlsZS5GaWxsKHtcclxuICAgICAgY29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMiknXHJcbiAgICB9KSxcclxuICAgIHN0cm9rZTogbmV3IG9sLnN0eWxlLlN0cm9rZSh7XHJcbiAgICAgIGNvbG9yOiAnI2ZmY2MzMycsXHJcbiAgICAgIHdpZHRoOiAyXHJcbiAgICB9KSxcclxuICAgIGltYWdlOiBuZXcgb2wuc3R5bGUuQ2lyY2xlKHtcclxuICAgICAgcmFkaXVzOiA3LFxyXG4gICAgICBmaWxsOiBuZXcgb2wuc3R5bGUuRmlsbCh7XHJcbiAgICAgICAgY29sb3I6ICcjZmZjYzMzJ1xyXG4gICAgICB9KVxyXG4gICAgfSlcclxuICB9KSxcclxuICBpZDogJ2RyYXduUHJvcGVydGllcydcclxufSk7XHJcbm1hcC5hZGRMYXllcihkcmF3blByb3BlcnRpZXMpO1xyXG4vL2RyYXdcclxuZHJhdyA9IG5ldyBvbC5pbnRlcmFjdGlvbi5EcmF3KHtcclxuICAvLyBmZWF0dXJlczogZmVhdHVyZXMsXHJcbiAgc291cmNlOiBkcmF3blByb3BlcnRpZXMuZ2V0U291cmNlKCksXHJcbiAgdHlwZTogJ1BvaW50JyxcclxuICBzdHlsZTogbmV3IG9sLnN0eWxlLlN0eWxlKHtcclxuICAgIGZpbGw6IG5ldyBvbC5zdHlsZS5GaWxsKHtcclxuICAgICAgY29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMiknXHJcbiAgICB9KSxcclxuICAgIHN0cm9rZTogbmV3IG9sLnN0eWxlLlN0cm9rZSh7XHJcbiAgICAgIGNvbG9yOiAnI2ZmY2MzMycsXHJcbiAgICAgIHdpZHRoOiAyXHJcbiAgICB9KSxcclxuICAgIGltYWdlOiBuZXcgb2wuc3R5bGUuQ2lyY2xlKHtcclxuICAgICAgcmFkaXVzOiA3LFxyXG4gICAgICBmaWxsOiBuZXcgb2wuc3R5bGUuRmlsbCh7XHJcbiAgICAgICAgY29sb3I6ICcjZmZjYzMzJ1xyXG4gICAgICB9KVxyXG4gICAgfSlcclxuICB9KVxyXG59KTtcclxubWFwLmFkZEludGVyYWN0aW9uKGRyYXcpO1xyXG5kcmF3LnNldEFjdGl2ZShmYWxzZSk7XHJcbi8vc2VsZWN0XHJcbnNlbGVjdCA9IG5ldyBvbC5pbnRlcmFjdGlvbi5TZWxlY3Qoe1xyXG4gIGxheWVyczogW3Byb3BlcnR5XSxcclxuICBmZWF0dXJlczogZmVhdHVyZXMsXHJcbiAgc3R5bGU6IG5ldyBvbC5zdHlsZS5TdHlsZSh7XHJcbiAgICBmaWxsOiBuZXcgb2wuc3R5bGUuRmlsbCh7XHJcbiAgICAgIGNvbG9yOiAncmdiYSgyNTUsIDAsIDAsIDAuMiknXHJcbiAgICB9KSxcclxuICAgIHN0cm9rZTogbmV3IG9sLnN0eWxlLlN0cm9rZSh7XHJcbiAgICAgIGNvbG9yOiAnI0ZGMDAwMDMnLFxyXG4gICAgICB3aWR0aDogMlxyXG4gICAgfSksXHJcbiAgICBpbWFnZTogbmV3IG9sLnN0eWxlLkNpcmNsZSh7XHJcbiAgICAgIHJhZGl1czogNyxcclxuICAgICAgZmlsbDogbmV3IG9sLnN0eWxlLkZpbGwoe1xyXG4gICAgICAgIGNvbG9yOiAnI0ZGMDAwMCdcclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgfSlcclxufSk7XHJcbm1hcC5hZGRJbnRlcmFjdGlvbihzZWxlY3QpO1xyXG5zZWxlY3Quc2V0QWN0aXZlKGZhbHNlKTtcclxudHJhbnNsYXRlID0gbmV3IG9sLmludGVyYWN0aW9uLlRyYW5zbGF0ZSh7XHJcbiAgZmVhdHVyZXM6IHNlbGVjdC5nZXRGZWF0dXJlcygpXHJcbn0pO1xyXG5tYXAuYWRkSW50ZXJhY3Rpb24odHJhbnNsYXRlKTtcclxudHJhbnNsYXRlLnNldEFjdGl2ZShmYWxzZSk7XHJcbi8vPT09PT09IGluZm8gPT09PT09XHJcbm1hcC5vbignY2xpY2snLCBjbGlja0luZm8pO1xyXG5cclxuZnVuY3Rpb24gY2xpY2tJbmZvKGV2ZW50KSB7XHJcbiAgdmFyIG9iaiA9IHt9O1xyXG4gIHZhciBjbGlja2VkRmVhdHVyZSAsIGNsaWNrZWRGZWF0dXJlU3R5bGU7XHJcbiAgY2xpY2tlZEZlYXR1cmVTdHlsZSA9IG5ldyBvbC5zdHlsZS5TdHlsZSh7XHJcbiAgICBmaWxsOiBuZXcgb2wuc3R5bGUuRmlsbCh7XHJcbiAgICAgIGNvbG9yOiAncmdiYSgyNTUsIDAsIDAsIDAuMiknXHJcbiAgICB9KSxcclxuICAgIHN0cm9rZTogbmV3IG9sLnN0eWxlLlN0cm9rZSh7XHJcbiAgICAgIGNvbG9yOiAnI0ZGMDAwMDMnLFxyXG4gICAgICB3aWR0aDogMlxyXG4gICAgfSksXHJcbiAgICBpbWFnZTogbmV3IG9sLnN0eWxlLkNpcmNsZSh7XHJcbiAgICAgIHJhZGl1czogNyxcclxuICAgICAgZmlsbDogbmV3IG9sLnN0eWxlLkZpbGwoe1xyXG4gICAgICAgIGNvbG9yOiAnI0ZGMDAwMCdcclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgfSlcclxuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIGNsaWNrZWRGZWF0dXJlID0gbWFwLmZvckVhY2hGZWF0dXJlQXRQaXhlbChldmVudC5waXhlbCwgZnVuY3Rpb24oZmVhdHVyZSwgbGF5ZXIpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGZlYXR1cmU6IGZlYXR1cmUsXHJcbiAgICAgIGxheWVyOiBsYXllclxyXG4gICAgfTtcclxuICB9LCB0aGlzLCBmdW5jdGlvbihsYXllcikge1xyXG4gICAgaWYgKGxheWVyLmdldCgnaWQnKSA9PT0gJ3Byb3BlcnR5Jykge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICB9LCB0aGlzKTtcclxuICBpZiAoY2xpY2tlZEZlYXR1cmUpIHtcclxuICAgIG9iai5mZWF0dXJlID0ge307XHJcbiAgICBjbGlja2VkRmVhdHVyZS5mZWF0dXJlLnNldFN0eWxlKGNsaWNrZWRGZWF0dXJlU3R5bGUpO1xyXG4gICAgLy8gY2xpY2tlZEZlYXR1cmUuZmVhdHVyZS5zZXRTY2FsZSgxLjIpO1xyXG4gICAgY2xpY2tlZEZlYXR1cmUuZmVhdHVyZS5nZXRLZXlzKCkuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcclxuICAgICAgb2JqLmZlYXR1cmVba2V5XSA9IGNsaWNrZWRGZWF0dXJlLmZlYXR1cmUuZ2V0KGtleSk7XHJcbiAgICB9KTtcclxuICAgIGR1c3QucmVuZGVyKCdhZG1pblByb3BlcnR5SW5mbycsIG9iaiwgZnVuY3Rpb24oZXJyLCBvdXQpIHtcclxuICAgICAgJCgnLnByb3BlcnR5LWluZm8nKS5odG1sKG91dCk7XHJcbiAgICAgICQoJy5wcm9wZXJ0eS1pbmZvJykucmVtb3ZlQ2xhc3MoJ3Zpc3VhbGx5aGlkZGVuJyk7XHJcbiAgICAgIGNvbXBvbmVudEhhbmRsZXIudXBncmFkZURvbSgpO1xyXG4gICAgICAkKCcjbGlzdGluZycpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgICAgICAgdmFyIGdpZDtcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGdpZCA9ICQodGhpcykuZGF0YSgnZ2lkJyk7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgIHVybDogJ2h0dHA6Ly8xMjcuMC4wLjE6MzAwMC9kYi9saXN0aW5nJyxcclxuICAgICAgICAgIHR5cGU6ICdHRVQnLFxyXG4gICAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcclxuICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgZ2lkOiBnaWRcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgICAgLmRvbmUoZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhkYXRhKTtcclxuICAgICAgICAgICAgdmFyIGxpc3RpbmdfaWQgPSBkYXRhLmlkO1xyXG4gICAgICAgICAgICAkKCcubW9kYWwtZGlhbG9nJykucmVtb3ZlQ2xhc3MoJ3Zpc3VhbGx5aGlkZGVuJyk7XHJcbiAgICAgICAgICAgIGR1c3QucmVuZGVyKCdsaXN0aW5nSW5zZXJ0JywgZGF0YSwgZnVuY3Rpb24oZXJyLCBvdXQpIHtcclxuICAgICAgICAgICAgICAkKCcubW9kYWwtY29udGVudCcpLmh0bWwob3V0KTtcclxuICAgICAgICAgICAgICBjb21wb25lbnRIYW5kbGVyLnVwZ3JhZGVEb20oKTtcclxuICAgICAgICAgICAgICBoYW5kbGVGb3JtLnNldCh7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiAnaW5zZXJ0LXVwZGF0ZS1saXN0aW5nJyxcclxuICAgICAgICAgICAgICAgIHN1Ym1pdEJ0bklkOiAnb2snXHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgJCgnaW5wdXRbbmFtZT1vcHRpb25zXScpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbihldmVudCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCQodGhpcykudmFsKCkgPT09ICdTYWxlJykge1xyXG4gICAgICAgICAgICAgICAgICAkKCcjcGV0cycpLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICQoJyNwZXRzJykucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgJCgnbGFiZWxbZm9yPXBldHNdJykucmVtb3ZlQ2xhc3MoJ2lzLWNoZWNrZWQnKTtcclxuICAgICAgICAgICAgICAgICAgJCgnI3ByZWZlcmVkX2N1c3RvbWVyJykudmFsKCcnKTtcclxuICAgICAgICAgICAgICAgICAgJCgnI3ByZWZlcmVkX2N1c3RvbWVyJykucGFyZW50KCkuZXEoMCkucmVtb3ZlQ2xhc3MoJ2lzLWRpcnR5Jyk7XHJcbiAgICAgICAgICAgICAgICAgICQoJyNwcmVmZXJlZF9jdXN0b21lcicpLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAkKCcjcGV0cycpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAkKCcjcHJlZmVyZWRfY3VzdG9tZXInKS5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAkKCcjc2VudC1saXN0aW5nJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgIHZhciBkYXRhO1xyXG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgIGRhdGEgPSBoYW5kbGVGb3JtLmdldCgpO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoZGF0YSAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICBkYXRhLnByb3BlcnR5X2dpZCA9IGdpZDtcclxuICAgICAgICAgICAgICAgICAgZGF0YS5saXN0aW5nX2lkID0gbGlzdGluZ19pZDtcclxuICAgICAgICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgICAgICB1cmw6ICdodHRwOi8vMTI3LjAuMC4xOjMwMDAvZGIvbGlzdGluZy91cGRhdGUnLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAndGV4dCdcclxuICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAuZG9uZShmdW5jdGlvbihkYXRhLCB0ZXh0U3RhdHVzLCBqcVhIUikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgaWYgKGpxWEhSLnN0YXR1cyA9PT0gMjAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvYXN0ci5zdWNjZXNzKCdQcm9wZXJ0eSBVcGRhdGVkIEluIERhdGFiYXNlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0b2FzdHIuZXJyb3IoJ09vcHMgU29tZXRoaW5nIFdlbnQgV3JvbmchISEnKTtcclxuICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC5mYWlsKGZ1bmN0aW9uKGpxWEhSLCB0ZXh0U3RhdHVzLCBlcnJvclRocm93bikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgdG9hc3RyLmVycm9yKCdPb3BzIFNvbWV0aGluZyBXZW50IFdyb25nISEhJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAuYWx3YXlzKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgaGFuZGxlRm9ybS5jbGVhcigpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgJCgnI29wZW5Nb2RhbCcpLmFkZENsYXNzKCd2aXN1YWxseWhpZGRlbicpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgcHJvcGVydHlTb3VyY2UuY2xlYXIoKTtcclxuICAgICAgICAgICAgICAgICAgICAgIGNsaWNrZWRGZWF0dXJlLmZlYXR1cmUuc2V0U3R5bGUobnVsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgJCgnI2NhbmNlbC1saXN0aW5nJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICBoYW5kbGVGb3JtLmNsZWFyKCk7XHJcbiAgICAgICAgICAgICAgICBjbGlja2VkRmVhdHVyZS5mZWF0dXJlLnNldFN0eWxlKG51bGwpO1xyXG4gICAgICAgICAgICAgICAgJCgnI29wZW5Nb2RhbCcpLmFkZENsYXNzKCd2aXN1YWxseWhpZGRlbicpO1xyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuZmFpbChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgdmFyIG9iaiA9IHt9O1xyXG4gICAgICAgICAgICBpZiAobGFuZyA9PT0gJ2VsJykge1xyXG4gICAgICAgICAgICAgIG9iai5tc2cgPSAnzpTOtc69IM6Sz4HOrc64zrfOus61IM6RzrPOs861zrvOr86xJyxcclxuICAgICAgICAgICAgICBvYmoudGV4dCA9ICfOlM63zrzOuc6/z4XPgc6zzq/OsSDOms6xzrnOvc6/z43Pgc6zzrnOsc+COycsXHJcbiAgICAgICAgICAgICAgb2JqLnllcyA9ICfOnc6RzpknXHJcbiAgICAgICAgICAgICAgb2JqLm5vID0gJ86fzqfOmSdcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICBvYmoubXNnID0gJ05vIExpc3RpbmcgRm91bmQnLFxyXG4gICAgICAgICAgICAgIG9iai50ZXh0ID0gJ0NyZWF0ZSBOZXcgTGlzdGluZz8nLFxyXG4gICAgICAgICAgICAgIG9iai55ZXMgPSAnWUVTJ1xyXG4gICAgICAgICAgICAgIG9iai5ubyA9ICdOTydcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBkdXN0LnJlbmRlcignZGlhbG9nJywgb2JqLCBmdW5jdGlvbihlcnJvciwgb3V0KSB7XHJcbiAgICAgICAgICAgICAgJCgnI29wZW5Nb2RhbCcpLnJlbW92ZUNsYXNzKCd2aXN1YWxseWhpZGRlbicpO1xyXG4gICAgICAgICAgICAgICQoJy5tb2RhbC1jb250ZW50JykuaHRtbChvdXQpO1xyXG4gICAgICAgICAgICAgIGNvbXBvbmVudEhhbmRsZXIudXBncmFkZURvbSgpO1xyXG4gICAgICAgICAgICAgICQoJyN5ZXMnKS5vbignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xyXG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgIGR1c3QucmVuZGVyKCdsaXN0aW5nSW5zZXJ0Jywge1xyXG4gICAgICAgICAgICAgICAgICByZW50OiAndHJ1ZSdcclxuICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uKGVyciwgb3V0KSB7XHJcbiAgICAgICAgICAgICAgICAgICQoJy5tb2RhbC1jb250ZW50JykuaHRtbChvdXQpO1xyXG4gICAgICAgICAgICAgICAgICBjb21wb25lbnRIYW5kbGVyLnVwZ3JhZGVEb20oKTtcclxuICAgICAgICAgICAgICAgICAgaGFuZGxlRm9ybS5zZXQoe1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpbnNlcnQtdXBkYXRlLWxpc3RpbmcnLFxyXG4gICAgICAgICAgICAgICAgICAgIHN1Ym1pdEJ0bklkOiAnb2snXHJcbiAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAkKCdpbnB1dFtuYW1lPW9wdGlvbnNdJykub24oJ2NoYW5nZScsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCQodGhpcykudmFsKCkgPT09ICdTYWxlJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgJCgnI3BldHMnKS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgJCgnI3BldHMnKS5wcm9wKCdjaGVja2VkJywgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgJCgnbGFiZWxbZm9yPXBldHNdJykucmVtb3ZlQ2xhc3MoJ2lzLWNoZWNrZWQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICQoJyNwcmVmZXJlZF9jdXN0b21lcicpLnZhbCgnJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAkKCcjcHJlZmVyZWRfY3VzdG9tZXInKS5wYXJlbnQoKS5lcSgwKS5yZW1vdmVDbGFzcygnaXMtZGlydHknKTtcclxuICAgICAgICAgICAgICAgICAgICAgICQoJyNwcmVmZXJlZF9jdXN0b21lcicpLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICQoJyNwZXRzJykucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAkKCcjcHJlZmVyZWRfY3VzdG9tZXInKS5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAkKCcjc2VudC1saXN0aW5nJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YTtcclxuICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEgPSBoYW5kbGVGb3JtLmdldCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBkYXRhLnByb3BlcnR5X2dpZCA9IGdpZDtcclxuICAgICAgICAgICAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogJ2h0dHA6Ly8xMjcuMC4wLjE6MzAwMC9kYi9saXN0aW5nL2luc2VydCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVR5cGU6ICd0ZXh0J1xyXG4gICAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgLmRvbmUoZnVuY3Rpb24oZGF0YSwgdGV4dFN0YXR1cywganFYSFIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoanFYSFIuc3RhdHVzID09PSAyMDEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvYXN0ci5zdWNjZXNzKCdQcm9wZXJ0eSBVcGRhdGVkIEluIERhdGFiYXNlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvYXN0ci5lcnJvcignT29wcyBTb21ldGhpbmcgV2VudCBXcm9uZyEhIScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgLmZhaWwoZnVuY3Rpb24oanFYSFIsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdG9hc3RyLmVycm9yKCdPb3BzIFNvbWV0aGluZyBXZW50IFdyb25nISEhJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hbHdheXMoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlRm9ybS5jbGVhcigpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNvcGVuTW9kYWwnKS5hZGRDbGFzcygndmlzdWFsbHloaWRkZW4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBjbGlja2VkRmVhdHVyZS5mZWF0dXJlLnNldFN0eWxlKG51bGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAkKCcjY2FuY2VsLWxpc3RpbmcnKS5vbignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaGFuZGxlRm9ybS5jbGVhcigpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNsaWNrZWRGZWF0dXJlLmZlYXR1cmUuc2V0U3R5bGUobnVsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI29wZW5Nb2RhbCcpLmFkZENsYXNzKCd2aXN1YWxseWhpZGRlbicpO1xyXG4gICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgJCgnI25vJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICAkKCcjb3Blbk1vZGFsJykuYWRkQ2xhc3MoJ3Zpc3VhbGx5aGlkZGVuJyk7XHJcbiAgICAgICAgICAgICAgICBjbGlja2VkRmVhdHVyZS5mZWF0dXJlLnNldFN0eWxlKG51bGwpO1xyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHByb3BlcnR5U291cmNlLmZvckVhY2hGZWF0dXJlKGZ1bmN0aW9uKGYpIHtcclxuICAgICAgZi5zZXRTdHlsZShudWxsKVxyXG4gICAgfSk7XHJcbiAgICAkKCcucHJvcGVydHktaW5mbycpLmFkZENsYXNzKCd2aXN1YWxseWhpZGRlbicpO1xyXG4gICAgdG9hc3RyLm9wdGlvbnMgPSB7XHJcbiAgICAgICdwb3NpdGlvbkNsYXNzJzogJ3RvYXN0LWJvdHRvbS1mdWxsLXdpZHRoJyxcclxuICAgICAgJ3ByZXZlbnREdXBsaWNhdGVzJzogdHJ1ZSxcclxuICAgICAgJ3RpbWVPdXQnOiA2MFxyXG4gICAgfTtcclxuICAgIHRvYXN0ci5lcnJvcignQ2FudCBGaW5kIEFueSBQcm9wZXJ0eSBUaGVyZS4uLicpO1xyXG4gIH1cclxufVxyXG4vLz09PT09PSBsb2dvdXQgPT09PT09XHJcbiQoJyNsb2dvdXQnKS5jbGljayhmdW5jdGlvbigpIHtcclxuICBsb2NhdGlvbi5ocmVmID0gJy9tYXAvbG9nb3V0JztcclxufSk7XHJcbi8vPT09PT09IGluc2VydCA9PT09PT1cclxuJCgnI2luc2VydFByb3BlcnR5JykuY2xpY2soZnVuY3Rpb24oKSB7XHJcbiAgJCgnLnByb3BlcnR5LWluZm8nKS5hZGRDbGFzcygndmlzdWFsbHloaWRkZW4nKTtcclxuICB0b2FzdHIub3B0aW9ucyA9IHtcclxuICAgICdwb3NpdGlvbkNsYXNzJzogJ3RvYXN0LXRvcC1jZW50ZXInLFxyXG4gICAgJ3ByZXZlbnREdXBsaWNhdGVzJzogdHJ1ZSxcclxuICAgICd0aW1lT3V0JzogNjBcclxuICB9O1xyXG4gIG1hcC51bignY2xpY2snLCBjbGlja0luZm8pO1xyXG4gIHNlbGVjdC5zZXRBY3RpdmUoZmFsc2UpO1xyXG4gIGRyYXcuc2V0QWN0aXZlKHRydWUpO1xyXG4gIGRyYXcub24oJ2RyYXdlbmQnLCBmdW5jdGlvbihldmVudCkge1xyXG4gICAgdmFyIG9iaiA9IHt9O1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIGRyYXcuc2V0QWN0aXZlKGZhbHNlKTtcclxuICAgICQoJy5tb2RhbC1kaWFsb2cnKS5yZW1vdmVDbGFzcygndmlzdWFsbHloaWRkZW4nKTtcclxuICAgIGR1c3QucmVuZGVyKCdwcm9wZXJ0eUluc2VydCcsIG9iaiwgZnVuY3Rpb24oZXJyLCBvdXQpIHtcclxuICAgICAgJCgnLm1vZGFsLWNvbnRlbnQnKS5odG1sKG91dCk7XHJcbiAgICAgIGNvbXBvbmVudEhhbmRsZXIudXBncmFkZURvbSgpO1xyXG4gICAgICBoYW5kbGVGb3JtLnNldCh7XHJcbiAgICAgICAgbmFtZTogJ2luc2VydFByb3BlcnR5JyxcclxuICAgICAgICBzdWJtaXRCdG5JZDogJ2luc2VydCdcclxuICAgICAgfSk7XHJcbiAgICAgICQoJyNjYW5jZWxJbnNlcnQnKS5vbignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgaGFuZGxlRm9ybS5jbGVhcigpO1xyXG4gICAgICAgIGRyYXduUHJvcGVydGllcy5nZXRTb3VyY2UoKS5jbGVhcigpO1xyXG5cclxuICAgICAgICAkKCcubW9kYWwtZGlhbG9nJykuYWRkQ2xhc3MoJ3Zpc3VhbGx5aGlkZGVuJyk7XHJcbiAgICAgICAgbWFwLm9uKCdjbGljaycsIGNsaWNrSW5mbyk7XHJcbiAgICAgIH0pO1xyXG4gICAgICAkKCcjaW5zZXJ0Jykub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgICB2YXIgZGF0YSwgYztcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGRhdGEgPSBoYW5kbGVGb3JtLmdldCgpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgICAgIGlmIChkYXRhICE9PSBudWxsKSB7XHJcbiAgICAgICAgICBoYW5kbGVDb29yZHMuc2V0TGF5ZXIoJ2RyYXduUHJvcGVydGllcycpO1xyXG4gICAgICAgICAgYyA9IGhhbmRsZUNvb3Jkcy5jb29yZHMoKTtcclxuICAgICAgICAgIGRhdGEueCA9IGNbMF07XHJcbiAgICAgICAgICBkYXRhLnkgPSBjWzFdO1xyXG4gICAgICAgICAgZGF0YS5hZG1pbklkID0gaWQ7XHJcbiAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICB1cmw6ICdodHRwOi8vMTI3LjAuMC4xOjMwMDAvZGIvaW5zZXJ0JyxcclxuICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxyXG4gICAgICAgICAgICBkYXRhOiBkYXRhXHJcbiAgICAgICAgICB9KS5kb25lKGZ1bmN0aW9uKGRhdGEsIHRleHRTdGF0dXMsIGpxWEhSKSB7XHJcbiAgICAgICAgICAgIHRvYXN0ci5vcHRpb25zID0ge1xyXG4gICAgICAgICAgICAgICdwb3NpdGlvbkNsYXNzJzogJ3RvYXN0LWJvdHRvbS1mdWxsLXdpZHRoJyxcclxuICAgICAgICAgICAgICAncHJldmVudER1cGxpY2F0ZXMnOiB0cnVlLFxyXG4gICAgICAgICAgICAgICd0aW1lT3V0JzogNjBcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgaWYgKGpxWEhSLnN0YXR1cyA9PT0gMjAxKSB7XHJcbiAgICAgICAgICAgICAgdG9hc3RyLnN1Y2Nlc3MoJ1Byb3BlcnR5IFJlY29yZGVkIEluIERhdGFiYXNlJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgdG9hc3RyLmVycm9yKCdPb3BzIFNvbWV0aGluZyBXZW50IFdyb25nISEhJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pLmZhaWwoZnVuY3Rpb24oanFYSFIsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKSB7XHJcbiAgICAgICAgICAgIHRvYXN0ci5lcnJvcignT29wcyBTb21ldGhpbmcgV2VudCBXcm9uZyEhIScpO1xyXG4gICAgICAgICAgfSkuYWx3YXlzKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBkcmF3blByb3BlcnRpZXMuZ2V0U291cmNlKCkuY2xlYXIoKTtcclxuICAgICAgICAgICAgcHJvcGVydHlTb3VyY2UuY2xlYXIoKTtcclxuICAgICAgICAgICAgaGFuZGxlRm9ybS5jbGVhcigpO1xyXG4gICAgICAgICAgICAkKCcubW9kYWwtZGlhbG9nJykuYWRkQ2xhc3MoJ3Zpc3VhbGx5aGlkZGVuJyk7XHJcbiAgICAgICAgICAgIG1hcC5vbignY2xpY2snLCBjbGlja0luZm8pO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59KTtcclxuLy89PT09PT0gZGVsZXRlID09PT09PVxyXG4kKCcjZGVsZXRlUHJvcGVydHknKS5jbGljayhmdW5jdGlvbihldmVudCkge1xyXG4gIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgJCgnLnByb3BlcnR5LWluZm8nKS5hZGRDbGFzcygndmlzdWFsbHloaWRkZW4nKTtcclxuICB0b2FzdHIub3B0aW9ucyA9IHtcclxuICAgICdwb3NpdGlvbkNsYXNzJzogJ3RvYXN0LXRvcC1jZW50ZXInLFxyXG4gICAgJ3ByZXZlbnREdXBsaWNhdGVzJzogdHJ1ZSxcclxuICAgICd0aW1lT3V0JzogMjBcclxuICB9O1xyXG4gIG1hcC51bignY2xpY2snLCBjbGlja0luZm8pO1xyXG4gIGRyYXcuc2V0QWN0aXZlKGZhbHNlKTtcclxuICBmZWF0dXJlcy5jbGVhcigpO1xyXG4gIHByb3BlcnR5U291cmNlLmNsZWFyKCk7XHJcbiAgc2VsZWN0LnNldEFjdGl2ZSh0cnVlKTtcclxuICBzZWxlY3Qub25jZSgnc2VsZWN0JywgZnVuY3Rpb24oZSkge1xyXG4gICAgdmFyICR0b2FzdDtcclxuICAgIGlmIChlLnRhcmdldC5nZXRGZWF0dXJlcygpLmdldExlbmd0aCgpID09PSAxKSB7XHJcbiAgICAgIHRvYXN0ci5vcHRpb25zLm5ld2VzdE9uVG9wID0gdHJ1ZTtcclxuICAgICAgdG9hc3RyLm9wdGlvbnMucHJldmVudER1cGxpY2F0ZXMgPSB0cnVlO1xyXG4gICAgICB0b2FzdHIub3B0aW9ucy5leHRlbmRlZFRpbWVPdXQgPSAwO1xyXG4gICAgICB0b2FzdHIub3B0aW9ucy50aW1lT3V0ID0gMDtcclxuICAgICAgdG9hc3RyLm9wdGlvbnMuY2xvc2VCdXR0b24gPSB0cnVlO1xyXG4gICAgICAkdG9hc3QgPSB0b2FzdHIud2FybmluZygnPHA+QXJlIHlvdSBzdXJlPzwvcD48ZGl2IGNsYXNzPVwidG9hc3RyLWJ0bnNcIj48YnV0dG9uIGlkPVwieWVzRGVsZXRlXCIgY2xhc3M9XCJtZGwtYnV0dG9uIG1kbC1qcy1idXR0b24gXCI+WWVzPC9idXR0b24+PGJ1dHRvbiBpZD1cIm5vRGVsZXRlXCIgY2xhc3M9XCJtZGwtYnV0dG9uIG1kbC1qcy1idXR0b25cIj5ObzwvYnV0dG9uPjwvZGl2PicpO1xyXG4gICAgICAkdG9hc3Qub24oJ2NsaWNrJywgJyN5ZXNEZWxldGUnLCBmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgZ2lkID0gc2VsZWN0LmdldEZlYXR1cmVzKCkuaXRlbSgwKS5nZXQoJ2dpZCcpO1xyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICB1cmw6ICdodHRwOi8vMTI3LjAuMC4xOjMwMDAvZGIvZGVsZXRlJyxcclxuICAgICAgICAgIHR5cGU6ICdQT1NUJyxcclxuICAgICAgICAgIGRhdGFUeXBlOiAndGV4dCcsXHJcbiAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgIGdpZDogZ2lkXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgIC5kb25lKGZ1bmN0aW9uKGRhdGEsIHRleHRTdGF0dXMsIGpxWEhSKSB7XHJcblxyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhqcVhIUi5zdGF0dXMpO1xyXG4gICAgICAgICAgICB0b2FzdHIub3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgICAncG9zaXRpb25DbGFzcyc6ICd0b2FzdC1ib3R0b20tZnVsbC13aWR0aCcsXHJcbiAgICAgICAgICAgICAgJ3ByZXZlbnREdXBsaWNhdGVzJzogdHJ1ZSxcclxuICAgICAgICAgICAgICAndGltZU91dCc6IDYwXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHRvYXN0ci5zdWNjZXNzKCdQcm9wZXJ0eSBEZWxldGVkIEZyb20gRGF0YWJhc2UnKTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuZmFpbChmdW5jdGlvbihqcVhIUiwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24pIHtcclxuICAgICAgICAgICAgdG9hc3RyLm9wdGlvbnMgPSB7XHJcbiAgICAgICAgICAgICAgJ3Bvc2l0aW9uQ2xhc3MnOiAndG9hc3QtYm90dG9tLWZ1bGwtd2lkdGgnLFxyXG4gICAgICAgICAgICAgICdwcmV2ZW50RHVwbGljYXRlcyc6IHRydWUsXHJcbiAgICAgICAgICAgICAgJ3RpbWVPdXQnOiA2MFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB0b2FzdHIuc3VjY2VzcygnT29wcyBTb21ldGhpbmcgV2VudCBXcm9uZyEhIScpO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5hbHdheXMoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHByb3BlcnR5U291cmNlLmNsZWFyKCk7XHJcbiAgICAgICAgICAgIHNlbGVjdC5nZXRGZWF0dXJlcygpLmNsZWFyKCk7XHJcbiAgICAgICAgICAgIHNlbGVjdC5zZXRBY3RpdmUoZmFsc2UpO1xyXG4gICAgICAgICAgICBtYXAub24oJ2NsaWNrJywgY2xpY2tJbmZvKTtcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkdG9hc3QucmVtb3ZlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgICAkdG9hc3Qub24oJ2NsaWNrJywgJyNub0RlbGV0ZScsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICR0b2FzdC5yZW1vdmUoKTtcclxuICAgICAgICBzZWxlY3QuZ2V0RmVhdHVyZXMoKS5jbGVhcigpO1xyXG4gICAgICAgIHNlbGVjdC5zZXRBY3RpdmUoZmFsc2UpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9KTtcclxufSk7XHJcblxyXG4vLz09PT09PSB1cGRhdGUgPT09PT09XHJcblxyXG4kKCcjdXBkYXRlUHJvcGVydHknKS5vbignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xyXG4gIHZhciBnaWQsIG9iajtcclxuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIG1hcC51bignY2xpY2snLCBjbGlja0luZm8pO1xyXG4gIGRyYXcuc2V0QWN0aXZlKGZhbHNlKTtcclxuICBmZWF0dXJlcy5jbGVhcigpO1xyXG4gIHByb3BlcnR5U291cmNlLmNsZWFyKCk7XHJcbiAgc2VsZWN0LnNldEFjdGl2ZSh0cnVlKTtcclxuICB0cmFuc2xhdGUuc2V0QWN0aXZlKHRydWUpO1xyXG4gICQoJy5wcm9wZXJ0eS1pbmZvJykuYWRkQ2xhc3MoJ3Zpc3VhbGx5aGlkZGVuJyk7XHJcbiAgc2VsZWN0Lm9uY2UoJ3NlbGVjdCcsIGZ1bmN0aW9uKGUpIHtcclxuICAgIGlmIChzZWxlY3QuZ2V0RmVhdHVyZXMoKS5nZXRMZW5ndGgoKSA9PT0gMSkge1xyXG4gICAgICBnaWQgPSBzZWxlY3QuZ2V0RmVhdHVyZXMoKS5pdGVtKDApLmdldCgnZ2lkJyk7XHJcbiAgICAgICQuYWpheCh7XHJcbiAgICAgICAgdXJsOiAnaHR0cDovLzEyNy4wLjAuMTozMDAwL2RiL2ZldGNoJyxcclxuICAgICAgICB0eXBlOiAnUE9TVCcsXHJcbiAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcclxuICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICBnaWQ6IGdpZFxyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgICAgICAuZG9uZShmdW5jdGlvbihkYXRhKSB7XHJcbiAgICAgICAgICBvYmogPSBfLmhlYWQoZGF0YS5mZWF0dXJlcykucHJvcGVydGllcztcclxuXHJcbiAgICAgICAgfSlcclxuICAgICAgICAuZmFpbChmdW5jdGlvbigpIHtcclxuICAgICAgICAgIHRvYXN0ci5lcnJvcignT29wcyBTb21ldGhpbmcgV2VudCBXcm9uZyEhIScpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmFsd2F5cyhmdW5jdGlvbigpIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdjb21wbGV0ZScpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0pO1xyXG4gIHRyYW5zbGF0ZS5vbigndHJhbnNsYXRlZW5kJywgZnVuY3Rpb24oZSkge1xyXG4gICAgdmFyIGNvb3JkcyA9IG9sLnByb2oudHJhbnNmb3JtKGUuY29vcmRpbmF0ZSwgJ0VQU0c6Mzg1NycsICdFUFNHOjQzMjYnKTtcclxuICAgICQoJy5tb2RhbC1kaWFsb2cnKS5yZW1vdmVDbGFzcygndmlzdWFsbHloaWRkZW4nKTtcclxuICAgIGR1c3QucmVuZGVyKCdwcm9wZXJ0eVVwZGF0ZScsIG9iaiwgZnVuY3Rpb24oZXJyLCBvdXQpIHtcclxuXHJcbiAgICAgICQoJy5tb2RhbC1jb250ZW50JykuaHRtbChvdXQpO1xyXG4gICAgICBjb21wb25lbnRIYW5kbGVyLnVwZ3JhZGVEb20oKTtcclxuICAgICAgaGFuZGxlRm9ybS5zZXQoe1xyXG4gICAgICAgIG5hbWU6ICd1cGRhdGVQcm9wZXJ0eScsXHJcbiAgICAgICAgc3VibWl0QnRuSWQ6ICd1cGRhdGUnXHJcbiAgICAgIH0pO1xyXG4gICAgICAkKCcjdXBkYXRlJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgICB2YXIgZGF0YTtcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGRhdGEgPSBoYW5kbGVGb3JtLmdldCgpO1xyXG4gICAgICAgIGlmICghXy5pc05pbChkYXRhKSkge1xyXG4gICAgICAgICAgZGF0YS54ID0gY29vcmRzWzBdO1xyXG4gICAgICAgICAgZGF0YS55ID0gY29vcmRzWzFdO1xyXG4gICAgICAgICAgZGF0YS5naWQgPSBnaWQ7XHJcblxyXG4gICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsOiAnaHR0cDovLzEyNy4wLjAuMTozMDAwL2RiL3VwZGF0ZScsXHJcbiAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcclxuICAgICAgICAgICAgZGF0YTogZGF0YVxyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmRvbmUoZnVuY3Rpb24oZGF0YSwgdGV4dFN0YXR1cywganFYSFIpIHtcclxuICAgICAgICAgICAgICB0b2FzdHIub3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgICAgICdwb3NpdGlvbkNsYXNzJzogJ3RvYXN0LWJvdHRvbS1mdWxsLXdpZHRoJyxcclxuICAgICAgICAgICAgICAgICdwcmV2ZW50RHVwbGljYXRlcyc6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAndGltZU91dCc6IDYwXHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICBpZiAoanFYSFIuc3RhdHVzID09PSAyMDApIHtcclxuICAgICAgICAgICAgICAgIHRvYXN0ci5zdWNjZXNzKCdQcm9wZXJ0eSBVcGRhdGVkIEluIERhdGFiYXNlJyk7XHJcbiAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRvYXN0ci5lcnJvcignT29wcyBTb21ldGhpbmcgV2VudCBXcm9uZyEhIScpO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmZhaWwoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgdG9hc3RyLmVycm9yKCdPb3BzIFNvbWV0aGluZyBXZW50IFdyb25nISEhJyk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5hbHdheXMoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgcHJvcGVydHlTb3VyY2UuY2xlYXIoKTtcclxuICAgICAgICAgICAgICBzZWxlY3QuZ2V0RmVhdHVyZXMoKS5jbGVhcigpO1xyXG4gICAgICAgICAgICAgIHNlbGVjdC5zZXRBY3RpdmUoZmFsc2UpO1xyXG4gICAgICAgICAgICAgIHRyYW5zbGF0ZS5zZXRBY3RpdmUoZmFsc2UpO1xyXG4gICAgICAgICAgICAgIG1hcC5vbignY2xpY2snLCBjbGlja0luZm8pO1xyXG4gICAgICAgICAgICAgICQoJy5tb2RhbC1kaWFsb2cnKS5hZGRDbGFzcygndmlzdWFsbHloaWRkZW4nKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgJCgnI2NhbmNlbFVwZGF0ZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICBoYW5kbGVGb3JtLmNsZWFyKCk7XHJcbiAgICAgICAgcHJvcGVydHlTb3VyY2UuY2xlYXIoKTtcclxuICAgICAgICBzZWxlY3QuZ2V0RmVhdHVyZXMoKS5jbGVhcigpO1xyXG4gICAgICAgIHNlbGVjdC5zZXRBY3RpdmUoZmFsc2UpO1xyXG4gICAgICAgIHRyYW5zbGF0ZS5zZXRBY3RpdmUoZmFsc2UpO1xyXG4gICAgICAgIG1hcC5vbignY2xpY2snLCBjbGlja0luZm8pO1xyXG4gICAgICAgICQoJy5tb2RhbC1kaWFsb2cnKS5hZGRDbGFzcygndmlzdWFsbHloaWRkZW4nKTtcclxuICAgICAgICBtYXAub24oJ2NsaWNrJywgY2xpY2tJbmZvKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICAgICQoJyNhZG1pbk1hcCcpLnJlbW92ZUF0dHIoJ3N0eWxlJyk7XHJcbiAgfSk7XHJcbn0pO1xyXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcclxuICB3aW5kb3cuUGFyc2xleS5vbignZmllbGQ6ZXJyb3InLCBmdW5jdGlvbigpIHtcclxuICAgIC8vIFRoaXMgZ2xvYmFsIGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIGZvciBhbnkgZmllbGQgdGhhdCBmYWlscyB2YWxpZGF0aW9uLlxyXG4gICAgY29uc29sZS5sb2coJ1ZhbGlkYXRpb24gZmFpbGVkIGZvcjogJywgdGhpcy4kZWxlbWVudCk7XHJcbiAgfSk7XHJcbiAgd2luZG93LlBhcnNsZXlcclxuICAgIC5hZGRWYWxpZGF0b3IoJ2RhdGUnLCB7XHJcbiAgICAgIHJlcXVpcmVtZW50VHlwZTogJ3N0cmluZycsXHJcbiAgICAgIHZhbGlkYXRlU3RyaW5nOiBmdW5jdGlvbih2YWx1ZSwgcmVxdWlyZW1lbnQpIHtcclxuICAgICAgICBpZiAobW9tZW50KHZhbHVlLCAnREQtTU0tWVlZWScsIHRydWUpLmlzVmFsaWQoKSA9PT0gdHJ1ZSkge1xyXG4gICAgICAgICAgcmV0dXJuIHRydWVcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmV0dXJuIGZhbHNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgIGVuOiAnV3JvbmcgRGF0ZScsXHJcbiAgICAgICAgZWw6ICfOm86szrjOv8+CIM6XzrzOtc+Bzr/OvM63zr3Or86xJ1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuLy8gd2luZG93LlBhcnNsZXlcclxuLy8gICAuYWRkVmFsaWRhdG9yKCdzYWxlcmVudGVuJywge1xyXG4vLyAgICAgcmVxdWlyZW1lbnRUeXBlOiAnc3RyaW5nJyxcclxuLy8gICAgIHZhbGlkYXRlU3RyaW5nOiBmdW5jdGlvbih2YWx1ZSwgcmVxdWlyZW1lbnQpIHtcclxuLy8gICAgICAgaWYgKHZhbHVlID09PSAnU2FsZScgfHwgdmFsdWUgPT09ICdSZW50Jykge1xyXG4vLyAgICAgICAgIHJldHVybiB0cnVlXHJcbi8vICAgICAgIH0gZWxzZSB7XHJcbi8vICAgICAgICAgcmV0dXJuIGZhbHNlXHJcbi8vICAgICAgIH1cclxuLy8gICAgIH0sXHJcbi8vICAgICBtZXNzYWdlczoge1xyXG4vLyAgICAgICBlbjogJ1BsZWFzZSBUeXBlIFNhbGUgb3IgUmVudCcsXHJcbi8vICAgICAgIGVsOiAnzqDOsc+BzrHOus6xzrvPjiDPgM67zrfOus+Bzr/Ou86/zrPOrs+Dz4TOtSBTYWxlIM6uIFJlbnQnXHJcbi8vICAgICB9XHJcbi8vICAgfSk7XHJcbi8vIHdpbmRvdy5QYXJzbGV5XHJcbi8vICAgLmFkZFZhbGlkYXRvcignc2FsZXJlbnRlbCcsIHtcclxuLy8gICAgIHJlcXVpcmVtZW50VHlwZTogJ3N0cmluZycsXHJcbi8vICAgICB2YWxpZGF0ZVN0cmluZzogZnVuY3Rpb24odmFsdWUsIHJlcXVpcmVtZW50KSB7XHJcbi8vICAgICAgIGlmICh2YWx1ZSA9PT0gJ86gz47Ou863z4POtycgfHwgdmFsdWUgPT09ICfOlc69zr/Ouc66zq/Osc+DzrcnKSB7XHJcbi8vICAgICAgICAgcmV0dXJuIHRydWVcclxuLy8gICAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgICByZXR1cm4gZmFsc2VcclxuLy8gICAgICAgfVxyXG4vLyAgICAgfSxcclxuLy8gICAgIG1lc3NhZ2VzOiB7XHJcbi8vICAgICAgIGVuOiAnUGxlYXNlIFR5cGUgzqDPjs67zrfPg863IG9yIM6Vzr3Ov865zrrOr86xz4POtycsXHJcbi8vICAgICAgIGVsOiAnzqDOsc+BzrHOus6xzrvPjiDPgM67zrfOus+Bzr/Ou86/zrPOrs+Dz4TOtSDOoM+OzrvOt8+Dzrcgzq4gzpXOvc6/zrnOus6vzrHPg863J1xyXG4vLyAgICAgfVxyXG4vLyAgIH0pO1xyXG59KTtcclxuIiwidmFyIGhhbmRsZUNvb3JkcyA9IChmdW5jdGlvbihvbCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICB2YXIgY29vcmRzO1xyXG4gIHZhciBsO1xyXG5cclxuICBmdW5jdGlvbiBmaW5kQnlJZChpZCkge1xyXG4gICAgdmFyIGxheWVycyA9IG1hcC5nZXRMYXllcnMoKTtcclxuICAgIHZhciBsZW5ndGggPSBsYXllcnMuZ2V0TGVuZ3RoKCk7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGlmIChpZCA9PT0gbGF5ZXJzLml0ZW0oaSkuZ2V0KCdpZCcpKSB7XHJcbiAgICAgICAgcmV0dXJuIGxheWVycy5pdGVtKGkpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGZpbmRCeU5hbWUobmFtZSkge1xyXG4gICAgdmFyIGk7XHJcbiAgICB2YXIgbGF5ZXJzID0gbWFwLmdldExheWVycygpO1xyXG4gICAgdmFyIGxlbmd0aCA9IGxheWVycy5nZXRMZW5ndGgoKTtcclxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAobmFtZSA9PT0gbGF5ZXJzLml0ZW0oaSkuZ2V0KCduYW1lRW4nKSB8fCBuYW1lID09PSBsYXllcnMuaXRlbShpKS5nZXQoJ25hbWVFbCcpKSB7XHJcbiAgICAgICAgcmV0dXJuIGxheWVycy5pdGVtKGkpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHNldExheWVyKGlkKSB7XHJcbiAgICBsID0gZmluZEJ5SWQoaWQpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ2V0Q29vcmRzKCkge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG4gICAgdmFyIGNvb3JkRVBTRzM4NTc7XHJcbiAgICBjb29yZEVQU0czODU3ID0gbC5nZXRTb3VyY2UoKS5nZXRGZWF0dXJlcygpWzBdLmdldEdlb21ldHJ5KCkuZ2V0Q29vcmRpbmF0ZXMoKTtcclxuICAgIGNvb3JkcyA9IG9sLnByb2oudHJhbnNmb3JtKGNvb3JkRVBTRzM4NTcsICdFUFNHOjM4NTcnLCAnRVBTRzo0MzI2Jyk7XHJcbiAgICByZXR1cm4gY29vcmRzO1xyXG4gIH1cclxuICByZXR1cm4ge1xyXG4gICAgY29vcmRzOiBnZXRDb29yZHMsXHJcbiAgICBzZXRMYXllcjogc2V0TGF5ZXJcclxuICB9O1xyXG59KG9sKSk7XHJcbiIsInZhciBoYW5kbGVGb3JtID0gKGZ1bmN0aW9uKCQsIHBhcnNsZXkpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgdmFyIGZvcm1OYW1lLCBzdWJtaXRCdG5JZCwgcDtcclxuXHJcbiAgZnVuY3Rpb24gc2V0T3B0aW9ucyhvcHRpb25zKSB7XHJcbiAgICBmb3JtTmFtZSA9IG9wdGlvbnMubmFtZTtcclxuICAgIHN1Ym1pdEJ0bklkID0gb3B0aW9ucy5zdWJtaXRCdG5JZDtcclxuICAgIGVuYWJsZVNlbGVjdCgpO1xyXG4gIH1cclxuICBmdW5jdGlvbiBlbmFibGVTZWxlY3QoKSB7XHJcbiAgICB2YXIgZSA9ICQoJy5nZXRtZGwtc2VsZWN0Jyk7XHJcbiAgICBlLmVhY2goZnVuY3Rpb24oKSB7XHJcbiAgICAgIGFkZEV2ZW50TGlzdGVuZXJzKHRoaXMpO1xyXG4gICAgfSlcclxuICB9XHJcbiAgZnVuY3Rpb24gYWRkRXZlbnRMaXN0ZW5lcnMoZSkge1xyXG4gICAgdmFyIHQgPSBlLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0JyksXHJcbiAgICAgICAgbiA9IGUucXVlcnlTZWxlY3RvckFsbCgnbGknKTtcclxuICAgIGUucXVlcnlTZWxlY3RvcignaScpO1xyXG4gICAgW10uZm9yRWFjaC5jYWxsKG4sIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgZS5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdC52YWx1ZSA9IGUudGV4dENvbnRlbnRcclxuICAgICAgfVxyXG4gICAgfSlcclxuICB9XHJcbiAgZnVuY3Rpb24gZGlzYWJsZVN1Ym1pdEJ0bigpIHtcclxuICAgICQoJyMnICsgc3VibWl0QnRuSWQgKyAnJykucHJvcCgnZGlzYWJsZWQnLCB0cnVlKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGNyZWF0ZVZhbGlkYXRvcigpIHtcclxuICAgIHAgPSAkKCdmb3JtW25hbWU9XCInICsgZm9ybU5hbWUgKyAnXCInKS5wYXJzbGV5KCk7XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGRlc3Ryb3lWYWxpZGF0b3IoKSB7XHJcbiAgICBwLmRlc3Ryb3koKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHZhbGlkYXRlRm9ybSgpIHtcclxuICAgIHJldHVybiBwLnZhbGlkYXRlKCk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBvblZhbGlkYXRlRm9ybVN1Y2Nlc3MoKSB7XHJcbiAgICBwLm9uKCdmb3JtOnN1Y2Nlc3MnLFxyXG5cclxuICAgICAgZnVuY3Rpb24oKSB7fSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnZXRBdHRyaWJ1dGVzKCkge1xyXG4gICAgdmFyIG9iaiA9IHt9O1xyXG4gICAgY3JlYXRlVmFsaWRhdG9yKCk7XHJcbiAgICBpZiAodmFsaWRhdGVGb3JtKCkgPT09IHRydWUpIHtcclxuICAgICAgJCgnZm9ybVtuYW1lPVwiJyArIGZvcm1OYW1lICsgJ1wiJykuZmluZCgnLm1kbC10ZXh0ZmllbGRfX2lucHV0JykuZWFjaChcclxuXHJcbiAgICAgICAgZnVuY3Rpb24oaW5kZXgsIGVsZW1lbnQpIHtcclxuICAgICAgICAgIG9ialskKHRoaXMpLmF0dHIoJ2lkJyldID0gJCh0aGlzKS52YWwoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgJCgnZm9ybVtuYW1lPVwiJyArIGZvcm1OYW1lICsgJ1wiJykuZmluZCgnLm1kbC1jaGVja2JveF9faW5wdXQnKS5lYWNoKFxyXG5cclxuICAgICAgICBmdW5jdGlvbihpbmRleCwgZWxlbWVudCkge1xyXG4gICAgICAgICAgb2JqWyQodGhpcykuYXR0cignaWQnKV0gPSAkKHRoaXMpLnByb3AoJ2NoZWNrZWQnKTtcclxuICAgICAgICB9KTtcclxuICAgICAgJCgnZm9ybVtuYW1lPVwiJyArIGZvcm1OYW1lICsgJ1wiJykuZmluZCgnLm1kbC1yYWRpb19fYnV0dG9uJykuZWFjaChcclxuICAgICAgICBmdW5jdGlvbihpbmRleCwgZWxlbWVudCkge1xyXG4gICAgICAgICAgb2JqWyQodGhpcykuYXR0cignaWQnKV0gPSAkKHRoaXMpLnByb3AoJ2NoZWNrZWQnKTtcclxuICAgICAgICB9KTtcclxuICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuICAgIGVsc2UgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiByZXNldEZvcm0oKSB7XHJcbiAgICBpZiAoY3JlYXRlVmFsaWRhdG9yKCkgPT0gdHJ1ZSkge1xyXG4gICAgICBkZXN0cm95VmFsaWRhdG9yKCk7XHJcbiAgICB9XHJcbiAgICAkKCdmb3JtW25hbWU9XCInICsgZm9ybU5hbWUgKyAnXCInKS5maW5kKCcubWRsLXRleHRmaWVsZF9faW5wdXQnKS5lYWNoKFxyXG5cclxuICAgICAgZnVuY3Rpb24oaW5kZXgsIGVsZW1lbnQpIHtcclxuICAgICAgICAkKHRoaXMpLnZhbCgnJyk7XHJcbiAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5lcSgwKS5yZW1vdmVDbGFzcygnaXMtZGlydHknKTtcclxuICAgICAgICAkKHRoaXMpLnBhcmVudCgpLmVxKDApLnJlbW92ZUNsYXNzKCdpcy1pbnZhbGlkJyk7XHJcbiAgICAgIH0pO1xyXG4gICAgJCgnZm9ybVtuYW1lPVwiJyArIGZvcm1OYW1lICsgJ1wiJykuZmluZCgnLm1kbC1jaGVja2JveF9faW5wdXQnKS5lYWNoKFxyXG5cclxuICAgICAgZnVuY3Rpb24oaW5kZXgsIGVsZW1lbnQpIHtcclxuICAgICAgICAkKHRoaXMpLnByb3AoJ2NoZWNrZWQnLCBmYWxzZSk7XHJcbiAgICAgIH0pO1xyXG4gICAgJCgnZm9ybVtuYW1lPVwiJyArIGZvcm1OYW1lICsgJ1wiJykuZmluZCgnLm1kbC1jaGVja2JveCcpLmVhY2goXHJcblxyXG4gICAgICBmdW5jdGlvbihpbmRleCwgZWxlbWVudCkge1xyXG4gICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoJ2lzLWNoZWNrZWQnKTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG4gIHJldHVybiB7XHJcbiAgICBzZXQ6IHNldE9wdGlvbnMsXHJcbiAgICBnZXQ6IGdldEF0dHJpYnV0ZXMsXHJcbiAgICBjbGVhcjogcmVzZXRGb3JtXHJcbiAgLy8gY3JlYXRlVmFsaWRhdG9yOiBjcmVhdGVWYWxpZGF0b3IsXHJcbiAgLy8gZGVzdHJveVZhbGlkYXRvcjogZGVzdHJveVZhbGlkYXRvcixcclxuICAvLyB2YWxpZGF0ZUZvcm06IHZhbGlkYXRlRm9ybSxcclxuICAvLyBvblZhbGlkYXRlRm9ybVN1Y2Nlc3M6IG9uVmFsaWRhdGVGb3JtU3VjY2VzcyxcclxuICAvLyBkaXNhYmxlU3VibWl0QnRuOiBkaXNhYmxlU3VibWl0QnRuXHJcbiAgfTtcclxufShqUXVlcnksIHBhcnNsZXkpKTtcclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
