!function(){function e(e,t){t=t||{bubbles:!1,cancelable:!1,detail:void 0};var n=document.createEvent("CustomEvent");return n.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),n}return"function"==typeof window.CustomEvent?!1:(e.prototype=window.Event.prototype,void(window.CustomEvent=e))}(),function(){Element.prototype.scrollIntoViewIfNeeded||(Element.prototype.scrollIntoViewIfNeeded=function(e){e=0===arguments.length?!0:!!e;var t=this.parentNode,n=window.getComputedStyle(t,null),i=parseInt(n.getPropertyValue("border-top-width")),a=parseInt(n.getPropertyValue("border-left-width")),r=this.offsetTop-t.offsetTop<t.scrollTop,o=this.offsetTop-t.offsetTop+this.clientHeight-i>t.scrollTop+t.clientHeight,s=this.offsetLeft-t.offsetLeft<t.scrollLeft,l=this.offsetLeft-t.offsetLeft+this.clientWidth-a>t.scrollLeft+t.clientWidth,c=r&&!o;(r||o)&&e&&(t.scrollTop=this.offsetTop-t.offsetTop-t.clientHeight/2-i+this.clientHeight/2),(s||l)&&e&&(t.scrollLeft=this.offsetLeft-t.offsetLeft-t.clientWidth/2-a+this.clientWidth/2),(r||o||s||l)&&!e&&this.scrollIntoView(c)})}(),window.App||(window.App={}),window.App.config={promises:{dustBluebird:Promise.promisifyAll(dust),cloudinaryBird:Promise.promisifyAll($.cloudinary)},commons:{map:{},trans:{}},cache:{activeEstate:{},activeEstateListing:{}},modules:{map:{},info:{},edit:{},"delete":{},insert:{},filters:{}}},window.App.utils={},$.cloudinary.config({cloud_name:"firvain",api_key:"375138932689591"}),App.utils={findById:function(e,t){for(var n=e.getLayers(),i=n.getLength(),a=0;i>a;a++)if(t===n.item(a).get("id"))return n.item(a);return null},findByName:function(e,t){for(var n=e.getLayers(),i=n.getLength(),a=0;i>a;a++)if(t===n.item(a).get("name"))return n.item(a);return null},preventDotAndSpace:function(e){var t=e.charCode?e.charCode:e.keyCode;return this.innerHTML=t,46!==t&&32!==t},geometryFunction:function(e,t){var n,i,a=t;return a||(a=new ol.geom.Polygon(null)),n=e[0],i=e[1],a.setCoordinates([[n,[n[0],i[1]],i,[i[0],n[1]],n]]),a},hasClass:function(e,t){return e.classList?e.classList.contains(t):new RegExp("(^| )"+t+"( |$)","gi").test(e.className)},removeClass:function(e,t){var n=e;n.classList?n.classList.remove(t):n.className=n.className.replace(new RegExp("(^|\\b)"+t.split(" ").join("|")+"(\\b|$)","gi")," ")},addClass:function(e,t){var n=e;n.classList?n.classList.add(t):n.className+=" "+t},toggleClass:function(e,t){var n,i,a=e;a.classList?a.classList.toggle(t):(n=a.className.split(" "),i=n.indexOf(t),i>=0?n.splice(i,1):n.push(t),a.className=n.join(" "))},requestFullScreen:function(e){var t,n=e.requestFullScreen||e.webkitRequestFullScreen||e.mozRequestFullScreen||e.msRequestFullScreen;n?n.call(e):"undefined"!=typeof window.ActiveXObject&&(t=new ActiveXObject("WScript.Shell"),null!==t&&t.SendKeys("{F11}"))},exitFullsreen:function(e){var t,n=e.exitFullScreen||e.webkitExitFullscreen||e.mozCancelFullScreen||e.msExitFullscreen;n?n.call(e):"undefined"!=typeof window.ActiveXObject&&(t=new ActiveXObject("WScript.Shell"),null!==t&&t.SendKeys("{Esc}"))},elToEn:function(e){for(var t,n=e,i=new Array("α","ά","Ά","Α","β","Β","γ","Γ","δ","Δ","ε","έ","Ε","Έ","ζ","Ζ","η","ή","Η","θ","Θ","ι","ί","ϊ","ΐ","Ι","Ί","κ","Κ","λ","Λ","μ","Μ","ν","Ν","ξ","Ξ","ο","ό","Ο","Ό","π","Π","ρ","Ρ","σ","ς","Σ","τ","Τ","υ","ύ","Υ","Ύ","φ","Φ","χ","Χ","ψ","Ψ","ω","ώ","Ω","Ώ"," ","'","'",","),a=new Array("a","a","A","A","v","V","g","G","d","D","e","e","E","E","z","Z","i","i","I","th","Th","i","i","i","i","I","I","k","K","l","L","m","M","n","N","x","X","o","o","O","O","p","P","r","R","s","s","S","t","T","u","u","Y","Y","f","F","ch","Ch","ps","Ps","o","o","O","O"," ","_","_","_"),r=0;r<i.length;r++)n=n.replace(new RegExp(i[r],"g"),a[r]);return t=n},handleDate:function(e,t){var n,i=[];return"string"==typeof e&&"el"!==t?(n=_.split(e,"-",3),i=[n[1],n[0],n[2]],_.join(i,"-")):e},sanitize:function(e){var t,n=e.value;t=n.replace(/[^a-z0-9A-ZA-zΑ-Ωα-ωίϊΐόάέύϋΰήώ]/gi,""),e.value=t,console.log(e),console.log(e.value),console.log(t)}},App.config.modules.map=function(e,t,n,i,a){"use strict";var r=[3677385,4120949],o=[3652772,4112808,37e5,4132797],s=new i.format.GeoJSON({defaultDataProjection:"EPSG:4326"}),l={iconType:function(e){var t={Apartment:function(){return"apartment"},Store:function(){return"store"},"Detached House":function(){return"detached"},Maisonette:function(){return"maisonette"},Villa:function(){return"villa"}};return t[e]()},estates:function(e){var t="./images/pins/none/"+l.iconType(e.get("estatetype_en"))+"-48.png";return new i.style.Style({geometry:e.getGeometry(),image:new i.style.Icon({src:t,anchorOrigin:"bottom-left",anchor:[.5,0],scale:1})})}},c={bing:function(){return new i.source.BingMaps({key:"Ak2Gq8VUfICsPpuf7LRANXmXt2sHWmSLPhohmVLFtFIEwYjs_5MCyAhAFwRSVpLj",imagerySet:"AerialWithLabels"})},mapBox:function(){return new i.source.XYZ({attributions:[new i.Attribution({html:'<a href="https://www.mapbox.com/about/maps/" target="_blank">&copy; Mapbox &copy; OpenStreetMap</a>'})],url:"https://api.mapbox.com/v4/mapbox.streets/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoiZmlydmFpbiIsImEiOiJlOWYyYTM0NThiNWM0YjJjODJjNDE4ODQzNzA2MGQyNiJ9.-NVDO27Hzt-w_nQosUPfLA"})},estates:function(){return new i.source.Vector({format:s,loader:function(){var e="http://www.geomerchant.eu/api/property/all/"+id,t=this;n.resolve($.ajax({url:e,type:"GET",dataType:"json"})).then(function(e){var n=s.readFeatures(e,{featureProjection:"EPSG:3857"});t.addFeatures(n)}).then(function(){t.getFeatures().forEach(function(e){e.setId(e.getProperties().gid)})})["catch"](function(e){console.log(e),404===e.status?toastr.error("Sorry, we cannot find any properties!"):503===e.status?toastr.error("Service Unavailable!"):toastr.error("Internal Server Error! Please reload page or try again later")})}})}},d={bing:function(e){return new i.layer.Tile({visible:!0,source:c.bing(),maxZoom:19,crossOrigin:"anonymous",preload:1/0,id:"bing",name:e.layers.bing})},mapBox:function(e){return new i.layer.Tile({source:c.mapBox(),id:"mapbox",name:e.layers.mapBox})},estates:function(){return new i.layer.Vector({source:c.estates(),id:"estates",visible:!0,style:l.estates})},newEstates:function(e){return new i.layer.Vector({source:new i.source.Vector,id:"newEstates",visible:!1,style:new i.style.Style({image:new i.style.Icon({src:"./images/pins/generic-48.png",anchorOrigin:"bottom-left",anchor:[.5,0],scale:1,color:"rgb(96, 125, 139)"})})})}},u=function(){var e=a.config.commons.trans,t=Object.keys(d).map(function(t){return"bing"!==t?d[t](e):null});return new i.Map({target:"appwrapper__map",layers:_.compact(t),loadTilesWhileAnimating:!0,loadTilesWhileInteracting:!0,renderer:"canvas",controls:i.control.defaults({attributionOptions:{collapsible:!1,collapsed:!1}}).extend([new i.control.ScaleLine({units:"metric"}),new i.control.OverviewMap({className:"ol-overviewmap ol-custom-overviewmap",collapsible:!0,collapsed:!0,layers:[d.bing(e)]}),new i.control.ZoomToExtent({extent:o})]),view:new i.View({center:r,extent:o,projection:"EPSG:3857",zoom:14,maxZoom:19,minZoom:14})})};return{initialize:u}}(window,document,Promise,ol,App),App.config.modules.info=function(e,t,n,i,a){"use strict";function r(e){f.renderAsync("edit",e).then(function(e){g.removeClass(p,"visuallyhidden"),p.innerHTML=e,getmdlSelect.init(".getmdl-select")})["catch"](function(e){console.log(e)})}function o(e){var o,s,l,f=e.map,m=_.cloneDeep(a.config.commons.trans),y=new ol.style.Style({image:new ol.style.Icon({src:"./images/pins/generic-48.png",anchorOrigin:"bottom-left",anchor:[.5,0],scale:1,color:"rgb(255,82,82)"})}),v=f.forEachFeatureAtPixel(e.pixel,function(e,t){return{feature:e,layer:t}},this,function(e){return"estates"===e.get("id")},this);if(v){g.findById(f,"estates").getSource().getFeatures().forEach(function(e){e.setStyle(null)}),s=v.feature,o=s.getGeometry().getCoordinates(),f.getView().setCenter(o),f.getView().setZoom(16),l=s.getProperties().gid,s.setStyle(y);var h=n.resolve(i.ajax({url:"http://www.geomerchant.eu/api/property",type:"GET",data:{gid:l}}));h.then(function(e){var t=e.features[0];return a.config.cache.activeEstate=t.properties,t}).then(function(e){"el"===c?m.values={gid:e.properties.gid,x:o[0],y:o[1],areaName:e.properties.area_name,estateType:e.properties.estatetype,address:e.properties.street_el,addressNumber:e.properties.street_number,pscode:e.properties.ps_code,estateArea:e.properties.estatearea,bedrooms:e.properties.bedrooms,floor:e.properties.floor,year:e.properties.year,planNumber:e.properties.plan_num,plotArea:e.properties.plotarea,parcelNumber:e.properties.parcel_num,parking:e.properties.parking,furnished:e.properties.furnished,isnew:e.properties.isnew,heating:e.properties.heating,cooling:e.properties.cooling,view:e.properties.view,title:e.properties.title}:m.values={gid:e.properties.gid,x:e.geometry.coordinates[0],y:e.geometry.coordinates[1],areaName:e.properties.area_name,estateType:e.properties.estatetype_en,address:e.properties.street_en,addressNumber:e.properties.street_number,pscode:e.properties.ps_code,estateArea:e.properties.estatearea,bedrooms:e.properties.bedrooms,floor:e.properties.floor,year:e.properties.year,planNumber:e.properties.plan_num,plotArea:e.properties.plotarea,parcelNumber:e.properties.parcel_num,parking:e.properties.parking,furnished:e.properties.furnished,isnew:e.properties.isnew,heating:e.properties.heating,cooling:e.properties.cooling,view:e.properties.view,title:e.properties.title}}),h["catch"](function(e){console.log(e)});var b=n.resolve(i.ajax({url:"http://www.geomerchant.eu/api/listing",type:"GET",data:{gid:l}})).then(function(e){a.config.cache.activeEstateListing=e,m.listing.values=e,m.listing.values.date_start=g.handleDate(e.date_start,c),m.listing.values.date_end=g.handleDate(e.date_end,c),m.listing.exists=!0})["catch"](function(e){var n=t.querySelector("#appwrapper__snackbar"),i={message:a.config.commons.trans.errors.listing404};console.log(e),404===e.status&&(m.listing.exists=!1,n.MaterialSnackbar.showSnackbar(i))});n.each([h,b],function(e){}).then(function(){r(m),d.removeAttribute("disabled"),u.removeAttribute("disabled"),g.addClass(d,"mdl-button--accent"),g.addClass(u,"mdl-button--accent")})["catch"](function(e){console.log(e)})}else p.innerHTML="",g.addClass(p,"visuallyhidden"),d.setAttribute("disabled",!0),u.setAttribute("disabled",!0),g.findById(f,"estates").getSource().getFeatures().forEach(function(e){e.setStyle(null)})}function s(){var e=a.config.commons.map;t.querySelector("body").dataset.active="info",e.on("click",o)}function l(){var e=a.config.commons.map;e.un("click",o)}var c=t.documentElement.lang,d=t.querySelector("#edit"),u=t.querySelector("#delete"),p=t.querySelector("#appwrapper__infobox-content"),f=a.config.promises.dustBluebird,g=a.utils;return{init:s,disable:l}}(window,document,Promise,jQuery,App),App.config.modules.edit=function(e,t,n,i,a,r){"use strict";function o(){m.children.length>0&&(m.innerHTML="")}function s(e){var t=App.config.commons.map,n=t.getInteractions(),i={};return n.forEach(function(t){return t.get("id")===e?(i=t,!1):!0}),i}function l(){var e=m.querySelectorAll("input[type=text]");[].forEach.call(e,function(e){e.addEventListener("blur",function(){var e,t=this.value;"number"===this.dataset.type?e=t.replace(/[\/\D\/ ]/gi,""):"alphanum"===this.dataset.type?e=t.replace(/[^a-z0-9A-ZA-zΑ-Ωα-ωίϊΐόάέύϋΰήώ ]/gi,""):"special"===this.dataset.type?e=t.replace(/[^0-9 \/]/gi,""):"date"===this.dataset.type&&(e=t.replace(/[^0-9 \-]/gi,"")),this.value=e,h.removeClass(this.parentNode,"is-invalid")})})}function c(e){var t;return t="el"===y?{"Διαμέρισμα":function(){return"Apartment"},"Μονοκατοικία":function(){return"Detached House"},"Μεζονέτα":function(){return"Maisonette"},"Έπαυλη":function(){return"Villa"}}:{Apartment:function(){return"Διαμέρισμα"},"Detached House":function(){return"Μονοκατοικία"},Maisonette:function(){return"Μεζονέτα"},Villa:function(){return"Έπαυλη"}},t[e]()}function d(){var e={},n={},i=m.querySelectorAll("input[type=text]"),a=m.querySelectorAll("input[type=checkbox]");return e.estate={},e.listing={},[].forEach.call(i,function(n){var i=_.last(_.split(n.getAttribute("id"),"-",3)),a=n.value,r=t.querySelector("#estate").dataset.newx,o=t.querySelector("#estate").dataset.newy,s=t.querySelector("#estate").dataset.originalx,l=t.querySelector("#estate").dataset.originaly;n.getAttribute("id").indexOf("estate")>-1?("undefined"!=typeof r?(e.estate.x=r,e.estate.y=o):(e.estate.x=s,e.estate.y=l),"el"===y?("type"===i&&(e.estate.estatetypeEn=c(a),e.estate.estatetype=a),"address"===i&&(e.estate.streetEn=h.elToEn(a),e.estate.streetEl=a)):("type"===i&&(e.estate.estatetypeEn=a,e.estate.estatetype=c(a)),"address"===i&&(e.estate.streetEn=a,e.estate.streetEl=h.elToEn(a))),"addressNumber"===i&&(e.estate.streetNumber=a),e.estate[i]=a):"type"===i?"Sale"===a||"Πώληση"===a?(e.listing.sale=!0,e.listing.rent=!1):(e.listing.sale=!1,e.listing.rent=!0):e.listing[i]=a}),[].forEach.call(a,function(t){var n=_.last(_.split(t.getAttribute("id"),"-",3)),i=t.checked;"pets"!==n?e.estate[n]=i:e.listing[n]=i}),n.estate=_.omit(e.estate,["address","addressNumber","type","toggle"]),n.listing=e.listing,n}function u(e){function a(e,t){var n=e;return n.gid=t,n}var r=t.querySelector("#appwrapper__snackbar"),l={};n.resolve(i.ajax({url:"http://www.geomerchant.eu/api/property",type:"PUT",data:e.estate})).then(function(t){return l.estateId=t.propertyGid,_.isEmpty(e.listing)?null:i.ajax({url:"http://www.geomerchant.eu/api/listing",type:"PUT",data:a(e.listing,t.propertyGid)})}).then(function(e){var t;t=null===e?{message:"Updated Estate: "+l.estateId}:{message:"Updated EstateID: "+l.estateId+" and ListingID: "+e.listingId},r.MaterialSnackbar.showSnackbar(t)})["catch"](function(e){var t={message:e};console.log(e),r.MaterialSnackbar.showSnackbar(t)})["finally"](function(){var e=App.config.commons.map;o(),h.addClass(m,"visuallyhidden"),h.findById(e,"estates").getSource().getFeatures().forEach(function(e){e.setStyle(null)}),b.setAttribute("disabled",!0),w.setAttribute("disabled",!0),v.init(),E.dataset.active="info",s("translate").setActive(!1)})}function p(){var e,n,o,s,l="el"===y?"DD-MM-YYYY":"MM-DD-YYYY",c=t.getElementById("infobox__date-start"),d=t.getElementById("infobox__date-end"),u=t.getElementById("listing__general-dateStart"),p=t.getElementById("listing__general-dateEnd"),f=new MutationObserver(function(e){var n;e.forEach(function(e){"class"===e.attributeName&&(n=i(e.target).prop(e.attributeName),n.indexOf("mddtp-picker--inactive")>-1?h.removeClass(t.getElementById("appwrapper__infobox"),"unclickable"):h.addClass(t.getElementById("appwrapper__infobox"),"unclickable"))})});null!==u&&(console.log(u.value),o="undefined"!==u.value?r(u.value,l):r(),e=new a["default"]({type:"date",init:o,future:r().add(5,"years"),trigger:u,orientation:"PORTRAIT"}),f.observe(t.getElementById("mddtp-picker__date"),{attributes:!0}),u.addEventListener("onOk",function(){h.addClass(this.parentNode,"is-dirty"),this.value=e.time.format(l).toString()}),c.addEventListener("click",function(){e.toggle()})),null!==p&&(s="undefined"!==p.value?r(u.value,l):r(),p.addEventListener("onOk",function(){h.addClass(this.parentNode,"is-dirty"),this.value=n.time.format(l).toString()}),n=new a["default"]({type:"date",init:s,future:r().add(5,"years"),trigger:p,orientation:"PORTRAIT"}),f.observe(t.getElementById("mddtp-picker__date"),{attributes:!0}),d.addEventListener("click",function(){n.toggle()}))}function f(){var e=new MutationObserver(function(e){var n;e.forEach(function(e){"data-val"===e.attributeName&&(n=e.target.value,"Rent"===n||"Ενοικίαση"===n?h.removeClass(t.querySelector("#listing__general-pets-wrapper"),"visuallyhidden"):h.addClass(t.querySelector("#listing__general-pets-wrapper"),"visuallyhidden"))})}),n=App.config.commons.map,i=m.querySelectorAll("input"),a=m.querySelectorAll("label"),r=m.querySelectorAll("button"),c=t.querySelector(".close"),f=t.querySelector(".agree"),g=t.querySelector("#estate_location-toggle"),y=t.querySelector("#estate__info-gid").value,_=new ol.interaction.Translate({features:new ol.Collection([h.findById(n,"estates").getSource().getFeatureById(y)]),layers:[h.findById(n,"estates")]});l(),_.set("id","translate"),null!==t.getElementById("listing__idAndType-type")&&e.observe(t.getElementById("listing__idAndType-type"),{attributes:!0,characterData:!0}),_.on("translateend",function(e){var n=t.querySelector("#estate");n.dataset.newx=e.coordinate[0],n.dataset.newy=e.coordinate[1],g.checked=!1,h.removeClass(g.parentNode,"is-checked"),_.setActive(!1)}),n.addInteraction(_),_.setActive(!1),g.addEventListener("click",function(){this.checked?_.setActive(!0):_.setActive(!1)}),[].forEach.call(t.getElementsByClassName("listing"),function(e){h.removeClass(e,"listing-disabled")}),[].forEach.call(i,function(e){h.hasClass(e,"not-edditable")||e.removeAttribute("disabled")}),[].forEach.call(a,function(e){h.removeClass(e,"is-disabled")}),[].forEach.call(r,function(e){e.removeAttribute("disabled")}),h.removeClass(t.querySelector("#confirmBtns"),"visuallyhidden"),c.addEventListener("click",function(){o(),h.addClass(m,"visuallyhidden"),h.findById(n,"estates").getSource().getFeatures().forEach(function(e){e.setStyle(null)}),b.setAttribute("disabled",!0),w.setAttribute("disabled",!0),v.init(),E.dataset.active="info",s("translate").setActive(!1)}),f.addEventListener("click",function(){var e=d();console.log(e),u(e)}),p()}function g(){v.disable(),f()}var m=t.querySelector("#appwrapper__infobox-content"),y=t.documentElement.lang,v=App.config.modules.info,h=App.utils,b=t.querySelector("#edit"),w=t.querySelector("#delete"),E=t.querySelector("body");return{init:g}}(window,document,Promise,$,mdDateTimePicker,moment,App),App.config.modules["delete"]=function(e,t,n,i,a,r){"use strict";function o(){E.children.length>0&&(E.innerHTML="")}function s(){var e=a.config.commons.map;m.findById(e,"estates").getSource().clear()}function l(e){n.resolve(i.ajax({url:"http://www.geomerchant.eu/api/listing",type:"DELETE",data:{id:e}})).then(function(e){console.log(e),E.querySelector("#listing").innerHTML="",E.querySelector("#listing").parentNode.removeChild(E.querySelector("#listing"))})["finally"](function(){var e=a.config.commons.map;o(),S.dataset.active="info",h.setAttribute("disabled",!0),v.setAttribute("disabled",!0),A.init(),m.findById(e,"estates").getSource().getFeatures().forEach(function(e){e.setStyle(null)})})["catch"](function(e){var t={message:e};console.log(e),w.MaterialSnackbar.showSnackbar(t)})}function c(e){n.resolve(i.ajax({url:"http://www.geomerchant.eu/api/property",type:"DELETE",data:{gid:e}})).then(function(){s()})["finally"](function(){var e=a.config.commons.map;o(),S.dataset.active="info",A.init(),h.setAttribute("disabled",!0),v.setAttribute("disabled",!0),m.findById(e,"estates").getSource().getFeatures().forEach(function(e){e.setStyle(null)})})["catch"](function(e){var t={message:e};console.log(e),w.MaterialSnackbar.showSnackbar(t)})}function d(){var e=b.querySelectorAll("input[name=options]"),t={};return 0!==e.length&&[].forEach.call(e,function(e){var n=_.last(_.split(e.getAttribute("id"),"-",3));t[n]=e.checked}),t}function u(){b.close()}function p(){var e,n=d();_.isEmpty(n)?(e=t.getElementById("estate__info-gid").value,c(e)):(n.listing===!0&&(e=t.getElementById("listing__idAndType-id").value,l(e)),n.estate===!0&&(e=t.getElementById("estate__info-gid").value,c(e))),b.close()}function f(){var e=t.getElementById("listing__idAndType-id"),n={};null===e?(n.title="Delete Estate",n.choose=!1):(n.title="Please choose what you want to delete",n.choose=!0),y.renderAsync("deleteDialog",n).then(function(e){b.innerHTML=e,b.showModal()}).then(function(){b.querySelector("#cancelDelete").addEventListener("click",u),b.querySelector("#confirmDelete").addEventListener("click",p)})["catch"](function(e){console.log(e)})}function g(){b.showModal||r.registerDialog(b),f()}var m=a.utils,y=a.config.promises.dustBluebird,v=t.getElementById("delete"),h=t.getElementById("edit"),b=t.querySelector("dialog"),w=t.querySelector("#appwrapper__snackbar"),E=t.getElementById("appwrapper__infobox-content"),S=t.querySelector("body"),A=a.config.modules.info;return{init:g}}(window,document,Promise,jQuery,App,dialogPolyfill),App.config.modules.insert=function(e,t,n,i,a,r,o,s,l,c){"use strict";function d(){C.children.length>0&&(C.innerHTML="",t.getElementById("activeModule").innerHTML="Information")}function u(){var e=C.querySelectorAll("input[type=text]");Array.prototype.map.call(e,function(e){""===e.value?k.addClass(e.parentNode,"is-invalid"):k.removeClass(e.parentNode,"is-invalid")})}function p(){var e=C.querySelectorAll("input[type=text]");return _.some(e,function(e){return""===e.value})}function f(e){var t=a.config.commons.map,n=t.getInteractions(),i={};return n.forEach(function(t){return t.get("id")===e?(i=t,!1):!0}),i}function g(){var e,n,a="el"===L?"DD-MM-YYYY":"MM-DD-YYYY",s=t.getElementById("infobox__date-start"),l=t.getElementById("infobox__date-end"),d=t.getElementById("listing__general-dateStart"),u=t.getElementById("listing__general-dateEnd"),p=new MutationObserver(function(e){var n;e.forEach(function(e){"class"===e.attributeName&&(n=i(e.target).prop(e.attributeName),n.indexOf("mddtp-picker--inactive")>-1?k.removeClass(t.getElementById("appwrapper__infobox"),"unclickable"):k.addClass(t.getElementById("appwrapper__infobox"),"unclickable"))})});null!==d&&(e=new r["default"]({type:"date",init:o(),future:o().add(5,"years"),trigger:d,orientation:"PORTRAIT"}),p.observe(t.getElementById("mddtp-picker__date"),{attributes:!0}),"Chrome"!==c.name?(d.removeAttribute("disabled"),d.addEventListener("onOk",function(){k.addClass(this.parentNode,"is-dirty"),this.value=e.time.format(a).toString(),this.disabled=!0})):d.addEventListener("onOk",function(){k.addClass(this.parentNode,"is-dirty"),this.value=e.time.format(a).toString()}),s.addEventListener("click",function(){e.toggle()})),null!==u&&("Chrome"!==c.name?(u.removeAttribute("disabled"),u.addEventListener("onOk",function(){k.addClass(this.parentNode,"is-dirty"),this.value=n.time.format(a).toString(),this.disabled=!0})):u.addEventListener("onOk",function(){k.addClass(this.parentNode,"is-dirty"),this.value=n.time.format(a).toString()}),n=new r["default"]({type:"date",init:o(),future:o().add(5,"years"),trigger:u,orientation:"PORTRAIT"}),p.observe(t.getElementById("mddtp-picker__date"),{attributes:!0}),l.addEventListener("click",function(){n.toggle()}))}function m(e){var t;return t="el"===L?{"Διαμέρισμα":function(){return"Apartment"},"Μονοκατοικία":function(){return"Detached House"},"Μεζονέτα":function(){return"Maisonette"},"Έπαυλη":function(){return"Villa"}}:{Apartment:function(){return"Διαμέρισμα"},"Detached House":function(){return"Μονοκατοικία"},Maisonette:function(){return"Μεζονέτα"},Villa:function(){return"Έπαυλη"}},t[e]()}function y(){var e=C.querySelectorAll("input[type=text]");[].forEach.call(e,function(e){e.addEventListener("blur",function(){var e,t=this.value;"number"===this.dataset.type?e=t.replace(/[\/\D\/ ]/gi,""):"alphanum"===this.dataset.type?e=t.replace(/[^a-z0-9A-ZA-zΑ-Ωα-ωίϊΐόάέύϋΰήώ ]/gi,""):"special"===this.dataset.type?e=t.replace(/[^0-9 \/]/gi,""):"date"===this.dataset.type&&(e=t.replace(/[^0-9 \-]/gi,"")),this.value=e,k.removeClass(this.parentNode,"is-invalid")})})}function v(e){var n=a.config.commons.map,i={},r={},o=C.querySelectorAll("input[type=text]"),s=C.querySelectorAll("input[type=checkbox]");return i.estate={},i.listing={},e?(i.estate.x=k.findById(n,"newEstates").getSource().getFeatures()[0].getGeometry().getCoordinates()[0],i.estate.y=k.findById(n,"newEstates").getSource().getFeatures()[0].getGeometry().getCoordinates()[1]):(i.estate.x=t.getElementById("estate").dataset.originalx,i.estate.y=t.getElementById("estate").dataset.originaly),[].forEach.call(o,function(e){var t=_.last(_.split(e.getAttribute("id"),"-",3)),n=e.value;"el"===L?("type"===t&&"estate__general_estate-type"===e.id?(i.estate.estatetypeEn=m(n),i.estate.estatetype=n):"type"===t&&"listing__idAndType-type"===e.id&&("Sale"===n||"Πώληση"===n?(i.listing.sale=!0,i.listing.rent=!1):(i.listing.sale=!1,i.listing.rent=!0)),"address"===t&&(i.estate.streetEn=k.elToEn(n),i.estate.streetEl=n)):("type"===t&&"estate__general_estate-type"===e.id?(i.estate.estatetypeEn=n,i.estate.estatetype=m(n)):"type"===t&&"listing__idAndType-type"===e.id&&("Sale"===n||"Πώληση"===n?(i.listing.sale=!0,i.listing.rent=!1):(i.listing.sale=!1,i.listing.rent=!0)),"address"===t&&(i.estate.streetEn=n,i.estate.streetEl=k.elToEn(n))),"addressNumber"===t&&(i.estate.streetNumber=n),"price"===t&&(i.listing.price=n),"dateStart"===t||"dateEnd"===t?i.listing[t]=n:i.estate[t]=n}),[].forEach.call(s,function(e){var t=_.last(_.split(e.getAttribute("id"),"-",3)),n=e.checked;"pets"!==t?i.estate[t]=n:i.listing[t]=n}),r.estate=_.omit(i.estate,["address","addressNumber","type","toggle"]),r.listing=i.listing,r}function h(t){t.estate.adminId=e.id,n.resolve(i.ajax({url:"http://www.geomerchant.eu/api/property",type:"POST",data:t.estate})).then(function(e){var t=e.gid,n={cloud_name:"firvain",upload_preset:"testupload",folder:t,client_allowed_formats:"jpg",theme:"minimal",tags:t};return l.openUploadWidget(n,function(e,t){return e?0:1}),t}).then(function(e){return t.listing.gid=e,i.ajax({url:"http://www.geomerchant.eu/api/listing",type:"POST",data:t.listing})})["finally"](function(){var e=a.config.commons.map;d(),k.addClass(C,"visuallyhidden"),x.dataset.active="info",k.findById(e,"newEstates").getSource().clear(),k.findById(e,"estates").getSource().clear(),M.init()})["catch"](function(e){console.log(e)})}function b(e){n.resolve(i.ajax({url:"http://www.geomerchant.eu/api/listing",type:"POST",data:_.merge({gid:e.gid},e.listing)})).then(function(e){console.log(e)})["finally"](function(){d(),k.addClass(C,"visuallyhidden"),x.dataset.active="info",M.init()})["catch"](function(e){console.log(e)})}function w(){T.renderAsync("insertListing",_.cloneDeep(a.config.commons.trans)).then(function(e){var n=t.getElementById("confirmBtns__agree"),a=t.getElementById("confirmBtns__disagree");i("#estate").after(e),getmdlSelect.init(".getmdl-select"),k.removeClass(t.getElementById("confirmBtns"),"visuallyhidden"),y(),g(),a.addEventListener("click",function(e){e.preventDefault(),e.stopPropagation(),d(),C.innerHTML="",k.addClass(C,"visuallyhidden"),x.dataset.active=M,M.init()}),n.addEventListener("click",function(e){var n;e.preventDefault(),e.stopPropagation(),p()!==!0?(n=v(!1),n.gid=t.getElementById("estate__info-gid").value,b(n)):u()})})["catch"](function(e){console.log(e)})}function E(){var e=a.config.commons.map,n=f("newEstate"),i=_.cloneDeep(a.config.commons.trans);T.renderAsync("insert",i).then(function(e){d(),C.innerHTML=e,k.removeClass(C,"visuallyhidden"),getmdlSelect.init(".getmdl-select")}).then(function(i){var a=t.getElementById("confirmBtns__agree"),r=t.getElementById("confirmBtns__disagree"),o=t.getElementById("listing");y(),g(),r.addEventListener("click",function(t){t.preventDefault(),t.stopPropagation(),d(),k.addClass(C,"visuallyhidden"),x.dataset.active=M,n.setActive(!1),k.findById(e,"newEstates").getSource().clear(),M.init()}),a.addEventListener("click",function s(e){e.preventDefault(),e.stopPropagation(),k.removeClass(o,"visuallyhidden"),this.innerHTML="Agree",e.target.removeEventListener(e.type,s),this.addEventListener("click",function(e){var t;e.preventDefault(),e.stopPropagation(),p()!==!0?(t=v(!0),h(t)):u()})})})["catch"](function(e){console.log(e)})}function S(){var e=a.config.commons.map,t=new ol.interaction.Draw({features:N,source:k.findById(e,"newEstates").getSource(),type:"Point",style:new ol.style.Style({image:new ol.style.Icon({src:"./images/pins/generic-48.png",anchorOrigin:"bottom-left",anchor:[.5,0],scale:1,color:"rgb(96, 125, 139)"})})});t.set("id","newEstate"),t.setActive(!1),e.addInteraction(t)}function A(){return"undefined"===C.innerHTML||""===C.innerHTML?0:"undefined"!==C.innerHTML&&null!==t.getElementById("listing")?1:2}function I(){var e=a.config.commons.map,n=f("newEstate"),i=k.findById(e,"newEstates");M.disable(),0===A()?(t.getElementById("activeModule").innerHTML="Add Estate And Listing",n.setActive(!0),k.findById(e,"newEstates").setVisible(!0),N.on("change:length",function(){this.getLength()>0&&(n.setActive(!1),i.getSource().clear())}),n.on("drawend",E)):2===A()?(t.getElementById("activeModule").innerHTML="Add Listing",n.setActive(!1),w()):(n.setActive(!1),t.getElementById("activeModule").innerHTML="Information",M.init())}function B(){_.isEmpty(f("newEstate"))&&S(),I()}var L=t.documentElement.lang,x=t.querySelector("body"),k=a.utils,T=a.config.promises.dustBluebird,C=t.getElementById("appwrapper__infobox-content"),M=a.config.modules.info,N=new ol.Collection;return{init:B}}(window,document,Promise,jQuery,App,mdDateTimePicker,moment,dialogPolyfill,cloudinary,bowser);var userMap=function(e,t,n,i,a){"use strict";function r(){n.resolve(i.ajax({url:"http://www.geomerchant.eu/api/language",type:"GET",data:{type:s,context:o}})).then(function(e){a.config.commons.trans=e,a.config.commons.map=a.config.modules.map.initialize()}).then(function(){var e;a.config.modules.info.init(),e=new MutationObserver(function(e){e.forEach(function(e){"undefined"!=typeof e.target.dataset&&("insert"===e.target.dataset.active?a.config.modules.insert.init():"delete"===e.target.dataset.active?a.config.modules["delete"].init():"edit"===e.target.dataset.active&&a.config.modules.edit.init())})}),e.observe(t.querySelector("body"),{attributes:!0})})["catch"](function(e){console.log(e)})}var o="admin",s=t.documentElement.lang,l=i(".mdl-spinner");return i(t).ajaxStart(function(){i(".spiner-wrapper").removeClass("visuallyhidden"),l.addClass("is-active")}).ajaxStop(function(){i(".spiner-wrapper").addClass("visuallyhidden"),l.removeClass("is-active")}),toastr.options={closeButton:!1,debug:!1,newestOnTop:!1,progressBar:!1,positionClass:"toast-top-center",preventDuplicates:!1,onclick:null,showDuration:"300",hideDuration:"1000",timeOut:"5000",extendedTimeOut:"1000",showEasing:"swing",hideEasing:"linear",showMethod:"fadeIn",hideMethod:"fadeOut"},{init:r}}(window,document,Promise,jQuery,App);userMap.init(),$(function(){var e=App.utils,t=document.getElementById("insert"),n=document.getElementById("delete"),i=document.querySelector("#edit");$("#logout").click(function(){location.href="/logout"}),document.getElementById("enter-fullscreen").addEventListener("click",function(){var t=document.body;e.requestFullScreen(t),e.removeClass(document.getElementById("exit-fullscreen").parentNode,"visuallyhidden"),e.addClass(this.parentNode,"visuallyhidden")}),document.getElementById("exit-fullscreen").addEventListener("click",function(){var t=document;e.exitFullsreen(t),e.removeClass(document.getElementById("enter-fullscreen").parentNode,"visuallyhidden"),e.addClass(this.parentNode,"visuallyhidden")}),t.addEventListener("click",function(){var e=document.querySelector("body");e.dataset.active="insert"}),n.addEventListener("click",function(){var e=document.querySelector("body");e.dataset.active="delete"}),i.addEventListener("click",function(){var e=document.querySelector("body");e.dataset.active="edit"})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
