function PropertyStyle(){var e;return e="../images/map-icons/pins/48/pin1.png",new ol.style.Style({image:new ol.style.Icon({src:e,anchor:[.5,1],scale:.7})})}function clickInfo(e){e.preventDefault();var t={},o=map.forEachFeatureAtPixel(e.pixel,function(e,t){return{feature:e,layer:t}},this,function(e){return"property"===e.get("id")?!0:void 0},this);o?(t.feature={},o.feature.getKeys().forEach(function(e){t.feature[e]=o.feature.get(e)}),dust.render("adminPropertyInfo.dust",t,function(e,t){$(".property-info").html(t),$(".property-info").removeClass("visuallyhidden")})):($(".property-info").addClass("visuallyhidden"),toastr.error("Cant Find Any Property There..."))}var center=[3677385,4120949],extent=[3590094,4102833,3855483,4261211],lang=document.documentElement.lang,geoJSONFormat=new ol.format.GeoJSON({defaultDataProjection:"EPSG:4326"}),bing=new ol.layer.Tile({visible:!0,source:new ol.source.BingMaps({key:"Ak2Gq8VUfICsPpuf7LRANXmXt2sHWmSLPhohmVLFtFIEwYjs_5MCyAhAFwRSVpLj",imagerySet:"Aerial"}),maxZoom:19,crossOrigin:"anonymous",preload:1/0,id:"bing"}),mapbox=new ol.layer.Tile({source:new ol.source.XYZ({attributions:[new ol.Attribution({html:'<a href="https://www.mapbox.com/about/maps/" target="_blank">&copy; Mapbox &copy; OpenStreetMap</a>'})],url:"https://api.mapbox.com/v4/mapbox.streets/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoiZmlydmFpbiIsImEiOiJlOWYyYTM0NThiNWM0YjJjODJjNDE4ODQzNzA2MGQyNiJ9.-NVDO27Hzt-w_nQosUPfLA"}),id:"mapbox"}),propertySource=new ol.source.Vector({format:geoJSONFormat,loader:function(e,t,o){var r="http://127.0.0.1:3000/db/admin",n=this;n.clear(),$.ajax({url:r,type:"POST",beforeSend:function(e){localStorage.getItem("userToken")&&e.setRequestHeader("Authorization","Bearer "+localStorage.getItem("userToken"))},dataType:"json",data:{id:id}}).done(function(e){var t=geoJSONFormat.readFeatures(e,{featureProjection:"EPSG:3857"});n.addFeatures(t)}).fail(function(){})},strategy:ol.loadingstrategy.all}),property=new ol.layer.Vector({source:propertySource,id:"property",visible:!0,style:PropertyStyle()});property.setZIndex(2);var map=new ol.Map({target:"adminMap",layers:[mapbox,property],loadTilesWhileAnimating:!0,loadTilesWhileInteracting:!0,renderer:"canvas",controls:ol.control.defaults({attributionOptions:{collapsible:!1,collapsed:!1}}).extend([new ol.control.ScaleLine({units:"metric"}),new ol.control.OverviewMap({className:"ol-overviewmap ol-custom-overviewmap",collapsible:!0,collapsed:!0,layers:[bing]}),new ol.control.ZoomToExtent({extent:extent})]),view:new ol.View({center:center,projection:"EPSG:3857",zoom:14,maxZoom:19,minZoom:10})});"el"===lang?(bing.set("name","Δορυφορική εικόνα"),mapbox.set("name","Χάρτης"),property.set("name","Ακίνητα")):(bing.set("name","Sattelite Image"),mapbox.set("name","Map"),property.set("name","Properties"));var features=new ol.Collection,drawnProperties=new ol.layer.Vector({source:new ol.source.Vector,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"#ffcc33",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#ffcc33"})})}),id:"drawnProperties"});map.addLayer(drawnProperties);var draw=new ol.interaction.Draw({source:drawnProperties.getSource(),type:"Point",style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"#ffcc33",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#ffcc33"})})})});map.addInteraction(draw),draw.setActive(!1);var select=new ol.interaction.Select({layers:[property],features:features,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 0, 0, 0.2)"}),stroke:new ol.style.Stroke({color:"#FF00003",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#FF0000"})})})});map.addInteraction(select),select.setActive(!1),map.on("click",clickInfo),$("#insertProperty").click(function(){$(".property-info").addClass("visuallyhidden"),toastr.options={positionClass:"toast-top-center",preventDuplicates:!0,timeOut:30},map.un("click",clickInfo),select.setActive(!1),draw.setActive(!0),draw.on("drawend",function(e){e.preventDefault(),draw.setActive(!1);var t={};$(".modal-dialog").removeClass("visuallyhidden"),dust.render("propertyInsert.dust",t,function(e,t){$(".modal-content").html(t),componentHandler.upgradeDom(),handleForm.set({name:"insertProperty",submitBtnId:"insert"}),$("#cancelInsert").on("click",function(e){e.preventDefault(),handleForm.clear(),drawnProperties.getSource().clear(),$(".modal-dialog").addClass("visuallyhidden"),map.on("click",clickInfo)}),$("#insert").on("click",function(e){e.preventDefault();var t,o;t=handleForm.get(),null!==t&&(handleCoords.setLayer("drawnProperties"),o=handleCoords.coords(),t.x=o[0],t.y=o[1],t.adminId=id,$.ajax({url:"http://127.0.0.1:3000/db/insert",type:"POST",data:t}).done(function(e,t,o){toastr.options={positionClass:"toast-bottom-full-width",preventDuplicates:!0,timeOut:30},201===o.status?toastr.success("Property Recorded In Database"):toastr.error("Oops Something Went Wrong!!!")}).fail(function(e,t,o){toastr.error("Oops Something Went Wrong!!!")}).always(function(){e.preventDefault(),drawnProperties.getSource().clear(),propertySource.clear(),handleForm.clear(),$(".modal-dialog").addClass("visuallyhidden"),map.on("click",clickInfo)}))})})})}),$("#deleteProperty").click(function(e){e.preventDefault(),$(".property-info").addClass("visuallyhidden"),toastr.options={positionClass:"toast-top-center",preventDuplicates:!0,timeOut:20},toastr.info("Delete Property"),map.un("click",clickInfo),draw.setActive(!1),features.clear(),select.setActive(!0),select.on("select",function(e){if(1===e.target.getFeatures().getLength()){toastr.options.newestOnTop=!0,toastr.options.preventDuplicates=!0,toastr.options.extendedTimeOut=0,toastr.options.timeOut=0,toastr.options.closeButton=!0;var t=toastr.warning('<p>Are you sure?</p><div class="toastr-btns"><button id="yesDelete" class="mdl-button mdl-js-button ">Yes</button><button id="noDelete" class="mdl-button mdl-js-button">No</button></div>');t.on("click","#yesDelete",function(){var e;e=select.getFeatures().item(0).get("gid"),$.ajax({url:"http://127.0.0.1:3000/db/delete",type:"POST",dataType:"text",data:{gid:e}}).done(function(e,t,o){toastr.options={positionClass:"toast-bottom-full-width",preventDuplicates:!0,timeOut:30},toastr.success("Property Deleted From Database")}).fail(function(e,t,o){toastr.options={positionClass:"toast-bottom-full-width",preventDuplicates:!0,timeOut:30},toastr.success("Oops Something Went Wrong!!!")}).always(function(){propertySource.clear(),select.getFeatures().clear(),select.setActive(!1),map.on("click",clickInfo)}),t.remove()}),t.on("click","#noDelete",function(){t.remove(),select.getFeatures().clear(),select.setActive(!1)})}})}),$("#logout").click(function(){location.href="/map/logout"});var handleCoords=function(e){"use strict";function t(e){for(var t=map.getLayers(),o=t.getLength(),r=0;o>r;r++)if(e===t.item(r).get("id"))return t.item(r);return null}function o(e){a=t(e)}function r(){var t;return t=a.getSource().getFeatures()[0].getGeometry().getCoordinates(),n=e.proj.transform(t,"EPSG:3857","EPSG:4326")}var n,a;return{coords:r,setLayer:o}}(ol),handleForm=function(e,t){"use strict";function o(e){s=e.name,c=e.submitBtnId}function r(){return u=e('form[name="'+s+'"').parsley(),!0}function n(){u.destroy()}function a(){return u.validate()}function l(){var t={};return r(),a()===!0?(e('form[name="'+s+'"').find(".mdl-textfield__input").each(function(o,r){t[e(this).attr("id")]=e(this).val()}),e('form[name="'+s+'"').find(".mdl-checkbox__input").each(function(o,r){t[e(this).attr("id")]=e(this).prop("checked")}),t):null}function i(){1==r()&&n(),e('form[name="'+s+'"').find(".mdl-textfield__input").each(function(t,o){e(this).val(""),e(this).parent().eq(0).removeClass("is-dirty"),e(this).parent().eq(0).removeClass("is-invalid")}),e('form[name="'+s+'"').find(".mdl-checkbox__input").each(function(t,o){e(this).prop("checked",!1)}),e('form[name="'+s+'"').find(".mdl-checkbox").each(function(t,o){e(this).removeClass("is-checked")})}var s,c,u;return{set:o,get:l,clear:i}}(jQuery,parsley);
//# sourceMappingURL=data:application/json;base64,
