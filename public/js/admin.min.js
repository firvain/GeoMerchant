function PropertyStyle(){var e="../images/map-icons/pins/48/pin1.png";return new ol.style.Style({image:new ol.style.Icon({src:e,anchor:[.5,1],scale:.7})})}function clickInfo(e){var t={};e.preventDefault(),select.setActive(!0),select.once("select",function(e){var o,a=e.selected,n=a.length;1===n?(t.feature={},o=_.head(e.selected),o.getKeys().forEach(function(e){t.feature[e]=o.get(e)}),dust.render("adminPropertyInfo",t,function(e,t){$(".property-info").html(t),$(".property-info").removeClass("visuallyhidden"),componentHandler.upgradeDom(),$("#listing").on("click",function(e){var t;e.preventDefault(),t=$(this).data("gid"),$.ajax({url:"http://127.0.0.1:3000/db/listing",type:"GET",dataType:"json",data:{gid:t}}).done(function(e){var o=e.id;$(".modal-dialog").removeClass("visuallyhidden"),dust.render("listingInsert",e,function(e,a){$(".modal-content").html(a),componentHandler.upgradeDom(),handleForm.set({name:"insert-update-listing",submitBtnId:"ok"}),$("input[name=options]").on("change",function(e){"Sale"===$(this).val()?($("#pets").prop("disabled",!0),$("#pets").prop("checked",!1),$("label[for=pets]").removeClass("is-checked"),$("#prefered_customer").val(""),$("#prefered_customer").parent().eq(0).removeClass("is-dirty"),$("#prefered_customer").prop("disabled",!0)):($("#pets").prop("disabled",!1),$("#prefered_customer").prop("disabled",!1))}),$("#sent-listing").on("click",function(e){var a;e.preventDefault(),a=handleForm.get(),console.log(a),null!==a&&(a.property_gid=t,a.listing_id=o,$.ajax({url:"http://127.0.0.1:3000/db/listing/update",type:"POST",data:a,dataType:"text"}).done(function(e,t,o){201===o.status?toastr.success("Property Updated In Database"):toastr.error("Oops Something Went Wrong!!!")}).fail(function(e,t,o){toastr.error("Oops Something Went Wrong!!!")}).always(function(){handleForm.clear(),$("#openModal").addClass("visuallyhidden"),propertySource.clear(),select.getFeatures().clear(),select.setActive(!1)}))}),$("#cancel-listing").on("click",function(e){e.preventDefault(),handleForm.clear(),select.getFeatures().clear(),select.setActive(!1),$("#openModal").addClass("visuallyhidden")})})}).fail(function(){var e={};"el"===lang?(e.msg="Δεν Βρέθηκε Αγγελία",e.text="Δημιουργία Καινούργιας;",e.yes="ΝΑΙ",e.no="ΟΧΙ"):(e.msg="No Listing Found",e.text="Create New Listing?",e.yes="YES",e.no="NO"),dust.render("dialog",e,function(e,o){$("#openModal").removeClass("visuallyhidden"),$(".modal-content").html(o),componentHandler.upgradeDom(),$("#yes").on("click",function(e){e.preventDefault(),dust.render("listingInsert",{rent:"true"},function(e,o){$(".modal-content").html(o),componentHandler.upgradeDom(),handleForm.set({name:"insert-update-listing",submitBtnId:"ok"}),$("input[name=options]").on("change",function(e){"Sale"===$(this).val()?($("#pets").prop("disabled",!0),$("#pets").prop("checked",!1),$("label[for=pets]").removeClass("is-checked"),$("#prefered_customer").val(""),$("#prefered_customer").parent().eq(0).removeClass("is-dirty"),$("#prefered_customer").prop("disabled",!0)):($("#pets").prop("disabled",!1),$("#prefered_customer").prop("disabled",!1))}),$("#sent-listing").on("click",function(e){var o;e.preventDefault(),o=handleForm.get(),null!==o&&(o.property_gid=t,$.ajax({url:"http://127.0.0.1:3000/db/listing/insert",type:"POST",data:o,dataType:"text"}).done(function(e,t,o){201===o.status?toastr.success("Property Updated In Database"):toastr.error("Oops Something Went Wrong!!!")}).fail(function(e,t,o){toastr.error("Oops Something Went Wrong!!!")}).always(function(){handleForm.clear(),$("#openModal").addClass("visuallyhidden"),select.getFeatures().clear(),select.setActive(!1)}))}),$("#cancel-listing").on("click",function(e){e.preventDefault(),handleForm.clear(),select.getFeatures().clear(),select.setActive(!1),$("#openModal").addClass("visuallyhidden")})})}),$("#no").on("click",function(e){e.preventDefault(),$("#openModal").addClass("visuallyhidden"),select.getFeatures().clear(),select.setActive(!1)})})})})})):(select.getFeatures().clear(),$(".property-info").addClass("visuallyhidden"),toastr.options={positionClass:"toast-bottom-full-width",preventDuplicates:!0,timeOut:60},toastr.error("Cant Find Any Property There..."))})}var $loading=$(".mdl-spinner");$(document).ajaxStart(function(){$loading.addClass("is-active")}).ajaxStop(function(){$loading.removeClass("is-active")});var center=[3677385,4120949],extent=[3590094,4102833,3855483,4261211],lang=document.documentElement.lang,geoJSONFormat=new ol.format.GeoJSON({defaultDataProjection:"EPSG:4326"}),propertySource,property,map,features,drawnProperties,draw,select,translate,bing=new ol.layer.Tile({visible:!0,source:new ol.source.BingMaps({key:"Ak2Gq8VUfICsPpuf7LRANXmXt2sHWmSLPhohmVLFtFIEwYjs_5MCyAhAFwRSVpLj",imagerySet:"Aerial"}),maxZoom:19,crossOrigin:"anonymous",preload:1/0,id:"bing"}),mapbox=new ol.layer.Tile({source:new ol.source.XYZ({attributions:[new ol.Attribution({html:'<a href="https://www.mapbox.com/about/maps/" target="_blank">&copy; Mapbox &copy; OpenStreetMap</a>'})],url:"https://api.mapbox.com/v4/mapbox.streets/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoiZmlydmFpbiIsImEiOiJlOWYyYTM0NThiNWM0YjJjODJjNDE4ODQzNzA2MGQyNiJ9.-NVDO27Hzt-w_nQosUPfLA"}),id:"mapbox"});propertySource=new ol.source.Vector({format:geoJSONFormat,loader:function(e,t,o){var a="http://127.0.0.1:3000/db/admin",n=this;n.clear(),$.ajax({url:a,type:"POST",beforeSend:function(e){localStorage.getItem("userToken")&&e.setRequestHeader("Authorization","Bearer "+localStorage.getItem("userToken"))},dataType:"json",data:{id:id}}).done(function(e){var t=geoJSONFormat.readFeatures(e,{featureProjection:"EPSG:3857"});n.addFeatures(t)}).fail(function(){console.log("error")})},strategy:ol.loadingstrategy.all}),property=new ol.layer.Vector({source:propertySource,id:"property",visible:!0,style:PropertyStyle()}),property.setZIndex(2),map=new ol.Map({target:"adminMap",layers:[mapbox,property],loadTilesWhileAnimating:!0,loadTilesWhileInteracting:!0,renderer:"canvas",controls:ol.control.defaults({attributionOptions:{collapsible:!1,collapsed:!1}}).extend([new ol.control.ScaleLine({units:"metric"}),new ol.control.OverviewMap({className:"ol-overviewmap ol-custom-overviewmap",collapsible:!0,collapsed:!0,layers:[bing]}),new ol.control.ZoomToExtent({extent:extent})]),view:new ol.View({center:center,projection:"EPSG:3857",zoom:14,maxZoom:19,minZoom:10})}),"el"===lang?(bing.set("name","Δορυφορική εικόνα"),mapbox.set("name","Χάρτης"),property.set("name","Ακίνητα")):(bing.set("name","Sattelite Image"),mapbox.set("name","Map"),property.set("name","Properties")),features=new ol.Collection,drawnProperties=new ol.layer.Vector({source:new ol.source.Vector,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"#ffcc33",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#ffcc33"})})}),id:"drawnProperties"}),map.addLayer(drawnProperties),draw=new ol.interaction.Draw({source:drawnProperties.getSource(),type:"Point",style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"#ffcc33",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#ffcc33"})})})}),map.addInteraction(draw),draw.setActive(!1),select=new ol.interaction.Select({layers:[property],features:features,multi:!1,style:new ol.style.Style({image:new ol.style.Circle({radius:10,fill:new ol.style.Fill({color:"#448aff"})})})}),map.addInteraction(select),select.setActive(!1),translate=new ol.interaction.Translate({features:select.getFeatures()}),map.addInteraction(translate),translate.setActive(!1),map.on("click",clickInfo),$("#logout").click(function(){location.href="/map/logout"}),$("#insertProperty").click(function(){toastr.clear(),$(".property-info").addClass("visuallyhidden"),toastr.options={positionClass:"toast-top-center",preventDuplicates:!0,timeOut:60},map.un("click",clickInfo),select.getFeatures().clear(),select.setActive(!1),draw.setActive(!0),draw.on("drawend",function(e){var t={};e.preventDefault(),draw.setActive(!1),$(".modal-dialog").removeClass("visuallyhidden"),dust.render("propertyInsert",t,function(e,t){$(".modal-content").html(t),componentHandler.upgradeDom(),handleForm.set({name:"insertProperty",submitBtnId:"insert"}),$("#estateType").change(function(){"Μονοκατοικία"===$(this).val()?($("#estateType_en").val("Detached House"),$("#estateType_en").parent().find(".mdl-selectfield__box-value").html("Detached House"),$("#bedrooms").val(""),$("#bedrooms").prop("disabled",!1)):"Διαμέρισμα"===$(this).val()?($("#estateType_en").val("Apartment"),$("#estateType_en").parent().find(".mdl-selectfield__box-value").html("Apartment"),$("#bedrooms").val(""),$("#bedrooms").prop("disabled",!1)):($("#estateType_en").val("Store"),$("#estateType_en").parent().find(".mdl-selectfield__box-value").html("Store"),$("#bedrooms").val(0),$("#bedrooms").prop("disabled",!0))}),$("#estateType_en").change(function(){"Detached House"===$(this).val()?($("#estateType").val("Μονοκατοικία"),$("#estateType").parent().find(".mdl-selectfield__box-value").html("Μονοκατοικία"),$("#bedrooms").val(""),$("#bedrooms").prop("disabled",!1)):"Apartment"===$(this).val()?($("#estateType").val("Διαμέρισμα"),$("#estateType").parent().find(".mdl-selectfield__box-value").html("Διαμέρισμα"),$("#bedrooms").val(""),$("#bedrooms").prop("disabled",!1)):($("#estateType").val("Κατάστημα"),$("#estateType").parent().find(".mdl-selectfield__box-value").html("Κατάστημα"),$("#bedrooms").val(0),$("#bedrooms").prop("disabled",!0))}),$("#cancelInsert").on("click",function(e){e.preventDefault(),handleForm.clear(),drawnProperties.getSource().clear(),$(".modal-dialog").addClass("visuallyhidden"),map.on("click",clickInfo)}),$("#insert").on("click",function(e){var t,o;e.preventDefault(),t=handleForm.get(),console.log(t),null!==t&&(handleCoords.setLayer("drawnProperties"),o=handleCoords.coords(),t.x=o[0],t.y=o[1],t.adminId=id,$.ajax({url:"http://127.0.0.1:3000/db/insert",type:"POST",data:t}).done(function(e,t,o){toastr.options={positionClass:"toast-bottom-full-width",preventDuplicates:!0,timeOut:60},201===o.status?toastr.success("Property Recorded In Database"):toastr.error("Oops Something Went Wrong!!!")}).fail(function(e,t,o){toastr.error("Oops Something Went Wrong!!!")}).always(function(){e.preventDefault(),drawnProperties.getSource().clear(),propertySource.clear(),handleForm.clear(),$(".modal-dialog").addClass("visuallyhidden"),map.on("click",clickInfo)}))})})})}),$("#deleteProperty").click(function(e){e.preventDefault(),toastr.clear(),$(".property-info").addClass("visuallyhidden"),toastr.options={positionClass:"toast-top-center",preventDuplicates:!0,timeOut:20},map.un("click",clickInfo),draw.setActive(!1),features.clear(),propertySource.clear(),select.getFeatures().clear(),select.setActive(!0),select.once("select",function(e){var t;1===e.target.getFeatures().getLength()&&(toastr.options.newestOnTop=!0,toastr.options.preventDuplicates=!0,toastr.options.extendedTimeOut=0,toastr.options.timeOut=0,toastr.options.closeButton=!0,t=toastr.warning('<p>Are you sure?</p><div class="toastr-btns"><button id="yesDelete" class="mdl-button mdl-js-button ">Yes</button><button id="noDelete" class="mdl-button mdl-js-button">No</button></div>'),t.on("click","#yesDelete",function(){var e=select.getFeatures().item(0).get("gid");$.ajax({url:"http://127.0.0.1:3000/db/delete",type:"POST",dataType:"text",data:{gid:e}}).done(function(e,t,o){toastr.options={positionClass:"toast-bottom-full-width",preventDuplicates:!0,timeOut:60},toastr.success("Property Deleted From Database")}).fail(function(e,t,o){toastr.options={positionClass:"toast-bottom-full-width",preventDuplicates:!0,timeOut:60},toastr.success("Oops Something Went Wrong!!!")}).always(function(){propertySource.clear(),select.getFeatures().clear(),select.setActive(!1),map.on("click",clickInfo)}),t.remove()}),t.on("click","#noDelete",function(){t.remove(),select.getFeatures().clear(),select.setActive(!1)}))})}),$("#updateProperty").on("click",function(e){function t(e,t){$(".modal-dialog").removeClass("visuallyhidden"),dust.render("propertyUpdate",e,function(e,a){var n={};$(".modal-content").html(a),n.bedrooms=$("#bedrooms").val(),componentHandler.upgradeDom(),handleForm.set({name:"updateProperty",submitBtnId:"update"}),$("#estateType").change(function(){"Μονοκατοικία"===$(this).val()?($("#estateType_en").val("Detached House"),$("#estateType_en").parent().find(".mdl-selectfield__box-value").html("Detached House"),$("#bedrooms").val(n.bedrooms),$("#bedrooms").prop("disabled",!1)):"Διαμέρισμα"===$(this).val()?($("#estateType_en").val("Apartment"),$("#estateType_en").parent().find(".mdl-selectfield__box-value").html("Apartment"),$("#bedrooms").val(n.bedrooms),$("#bedrooms").prop("disabled",!1)):($("#estateType_en").val("Store"),$("#estateType_en").parent().find(".mdl-selectfield__box-value").html("Store"),$("#bedrooms").val(0),$("#bedrooms").prop("disabled",!0))}),$("#estateType_en").change(function(){"Detached House"===$(this).val()?($("#estateType").val("Μονοκατοικία"),$("#estateType").parent().find(".mdl-selectfield__box-value").html("Μονοκατοικία"),$("#bedrooms").val(n.bedrooms),$("#bedrooms").prop("disabled",!1)):"Apartment"===$(this).val()?($("#estateType").val("Διαμέρισμα"),$("#estateType").parent().find(".mdl-selectfield__box-value").html("Διαμέρισμα"),$("#bedrooms").val(n.bedrooms),$("#bedrooms").prop("disabled",!1)):($("#estateType").val("Κατάστημα"),$("#estateType").parent().find(".mdl-selectfield__box-value").html("Κατάστημα"),$("#bedrooms").val(0),$("#bedrooms").prop("disabled",!0))}),$("#update").on("click",function(e){var a;e.preventDefault(),a=handleForm.get(),_.isNil(a)||(a.x=t[0],a.y=t[1],a.gid=o,$.ajax({url:"http://127.0.0.1:3000/db/update",type:"POST",data:a}).done(function(e,t,o){toastr.options={positionClass:"toast-bottom-full-width",preventDuplicates:!0,timeOut:60},200===o.status?toastr.success("Property Updated In Database"):toastr.error("Oops Something Went Wrong!!!")}).fail(function(){toastr.error("Oops Something Went Wrong!!!")}).always(function(){propertySource.clear(),select.getFeatures().clear(),select.setActive(!1),translate.setActive(!1),map.on("click",clickInfo),$(".modal-dialog").addClass("visuallyhidden")}))}),$("#cancelUpdate").on("click",function(e){e.preventDefault(),handleForm.clear(),propertySource.clear(),select.getFeatures().clear(),select.setActive(!1),translate.setActive(!1),map.on("click",clickInfo),$(".modal-dialog").addClass("visuallyhidden"),map.on("click",clickInfo)})})}var o,a,n;e.preventDefault(),toastr.clear(),map.un("click",clickInfo),draw.setActive(!1),features.clear(),propertySource.clear(),select.getFeatures().clear(),select.setActive(!0),$(".property-info").addClass("visuallyhidden"),select.once("select",function(e){var r,l=e.selected,s=l.length;1===s&&(o=_.head(e.selected).get("gid"),r=_.head(e.selected),n=ol.proj.transform(r.getGeometry().getCoordinates(),"EPSG:3857","EPSG:4326"),$.ajax({url:"http://127.0.0.1:3000/db/fetch",type:"POST",dataType:"json",data:{gid:o}}).done(function(e){var o={};o.options={},a=_.head(e.features).properties,toastr.options.newestOnTop=!0,toastr.options.preventDuplicates=!0,toastr.options.extendedTimeOut=0,toastr.options.timeOut=0,toastr.options.closeButton=!1,toastr.options.positionClass="toast-top-center",o=toastr.warning('<p>Change Property Coordinates?</p><div class="toastr-btns"><button id="yesChangeXY" class="mdl-button mdl-js-button ">Yes</button><button id="noChangeXY" class="mdl-button mdl-js-button">No</button></div>'),o.on("click","#yesChangeXY",function(){translate.setActive(!0),translate.on("translateend",function(e){n=ol.proj.transform(e.coordinate,"EPSG:3857","EPSG:4326"),t(a,n)})}),o.on("click","#noChangeXY",function(){translate.setActive(!1),toastr.clear(),t(a,n)})}).fail(function(){toastr.error("Oops Something Went Wrong!!!")}))}),$("#adminMap").removeAttr("style")}),$(document).ready(function(){window.Parsley.on("field:error",function(){console.log("Validation failed for: ",this.$element)}),window.Parsley.addValidator("date",{requirementType:"string",validateString:function(e,t){return moment(e,"DD-MM-YYYY",!0).isValid()===!0?!0:!1},messages:{en:"Wrong Date",el:"Λάθος Ημερομηνία"}})});var handleCoords=function(e){"use strict";function t(e){for(var t=map.getLayers(),o=t.getLength(),a=0;o>a;a++)if(e===t.item(a).get("id"))return t.item(a);return null}function o(e){r=t(e)}function a(){var t;return t=r.getSource().getFeatures()[0].getGeometry().getCoordinates(),n=e.proj.transform(t,"EPSG:3857","EPSG:4326")}var n,r;return{coords:a,setLayer:o}}(ol),handleForm=function(e,t){"use strict";function o(e){d=e.name,p=e.submitBtnId,a()}function a(){var t=e(".getmdl-select");t.each(function(){n(this)})}function n(e){var t=e.querySelector("input"),o=e.querySelectorAll("li");e.querySelector("i"),[].forEach.call(o,function(e){e.onclick=function(){t.value=e.textContent}})}function r(){return u=e('form[name="'+d+'"').parsley(),!0}function l(){u.destroy()}function s(){return u.validate()}function i(){var t={};return r(),s()===!0?(e('form[name="'+d+'"').find(".mdl-textfield__input").each(function(o,a){t[e(this).attr("id")]=e(this).val()}),e('form[name="'+d+'"').find(".mdl-checkbox__input").each(function(o,a){t[e(this).attr("id")]=e(this).prop("checked")}),e('form[name="'+d+'"').find(".mdl-radio__button").each(function(o,a){t[e(this).attr("id")]=e(this).prop("checked")}),e('form[name="'+d+'"').find(".mdl-selectfield__select").each(function(o,a){t[e(this).attr("id")]=e(this).val()}),t):null}function c(){1==r()&&l(),e('form[name="'+d+'"').find(".mdl-textfield__input").each(function(t,o){e(this).val(""),e(this).parent().eq(0).removeClass("is-dirty"),e(this).parent().eq(0).removeClass("is-invalid")}),e('form[name="'+d+'"').find(".mdl-checkbox__input").each(function(t,o){e(this).prop("checked",!1)}),e('form[name="'+d+'"').find(".mdl-checkbox").each(function(t,o){e(this).removeClass("is-checked")})}var d,p,u;return{set:o,get:i,clear:c}}(jQuery,parsley);
//# sourceMappingURL=data:application/json;base64,
