var bing=new ol.layer.Tile({visible:!0,source:new ol.source.BingMaps({key:"Ak2Gq8VUfICsPpuf7LRANXmXt2sHWmSLPhohmVLFtFIEwYjs_5MCyAhAFwRSVpLj",imagerySet:"Aerial"}),maxZoom:19,crossOrigin:"anonymous",preload:1/0,nameEl:"Δορυφορική εικόνα",nameEn:"Satellite Image",id:"bing"}),mapbox=new ol.layer.Tile({source:new ol.source.XYZ({attributions:new ol.Attribution({html:'<a href="https://www.mapbox.com/about/maps/" target="_blank">&copy; Mapbox &copy; OpenStreetMap</a>'}),url:"https://api.mapbox.com/v4/mapbox.streets/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoiZmlydmFpbiIsImEiOiJlOWYyYTM0NThiNWM0YjJjODJjNDE4ODQzNzA2MGQyNiJ9.-NVDO27Hzt-w_nQosUPfLA"})}),map=new ol.Map({target:"map",layers:[mapbox],loadTilesWhileAnimating:!0,loadTilesWhileInteracting:!0,renderer:"canvas",controls:ol.control.defaults({attributionOptions:{collapsible:!1,collapsed:!1}}).extend([new ol.control.ScaleLine({units:"metric"}),new ol.control.OverviewMap({className:"ol-overviewmap ol-custom-overviewmap",collapsible:!0,collapsed:!0,layers:[new ol.layer.Tile({source:new ol.source.OSM,visible:!0,preload:1/0,crossOrigin:"anonymous",nameEl:"Μικρός Χάρτης",nameEn:"MiniMap",id:"overviewOsm"})]})]),view:new ol.View({center:[3713616,4181258],extent:[3590094,4102833,3855483,4261211],projection:"EPSG:3857",zoom:14,maxZoom:19,minZoom:10})});
!function(){function e(e){e.preventDefault(),o.getSource().clear();var r=e.coordinate;n.setGeometry(new ol.geom.Point(r)),o.getSource().addFeature(n)}var n=new ol.Feature,r=new ol.style.Style({image:new ol.style.Icon({anchor:[.5,1],anchorXUnits:"fraction",anchorYUnits:"fraction",opacity:1,scale:1,src:"../images/maki/renders/marker-24.png"})});n.setStyle(r);var o=new ol.layer.Vector({map:map,source:new ol.source.Vector});$(".marker").on("change",function(n){n.preventDefault(),$(this).prop("checked")===!0?map.on("singleclick",e):(map.un("singleclick",e),o.getSource().clear())})}();
!function(){var e=new ol.Geolocation({projection:map.getView().getProjection(),trackingOptions:{maximumAge:1e4,enableHighAccuracy:!0,timeout:6e5}}),o=new ol.Feature;e.on("change:accuracyGeometry",function(){o.setGeometry(e.getAccuracyGeometry())});var t=new ol.Feature;t.setStyle(new ol.style.Style({image:new ol.style.Circle({radius:6,fill:new ol.style.Fill({color:"#3399CC"}),stroke:new ol.style.Stroke({color:"#fff",width:2})})})),e.on("change:position",function(){var o=e.getPosition();t.setGeometry(o?new ol.geom.Point(o):null)}),featuresOverlaySource=new ol.source.Vector({});new ol.layer.Vector({map:map,source:featuresOverlaySource});$(".geolocation").on("change",function(r){r.preventDefault(),$(this).prop("checked")===!0?(e.setTracking(!0),featuresOverlaySource.addFeatures([t,o])):(e.setTracking(!1),featuresOverlaySource.clear())})}();
!function(){function e(e){e.preventDefault();var n=e.coordinate;o.innerHTML="<p>You clicked here:</p><code>"+n+"</code>",c.setPosition(n)}var n=document.getElementById("popup"),o=document.getElementById("popup-content"),t=document.getElementById("popup-closer");t.onclick=function(){return c.setPosition(void 0),t.blur(),!1};var c=new ol.Overlay({element:n,autoPan:!0,autoPanAnimation:{duration:250}});map.addOverlay(c),$(".info").on("change",function(n){n.preventDefault(),$(this).prop("checked")===!0?map.on("singleclick",e):map.un("singleclick",e)})}();
!function(){$(".weather").change(function(){if($(this).prop("checked")===!0){map.getOverlays().forEach(function(e){"weather"===e.get("name")&&($(e.getElement()).parent().remove(),$(e.getElement()).remove())});var e=ol.proj.transform(map.getView().getCenter(),"EPSG:3857","EPSG:4326"),t=e[1],a=e[0];$.ajax({url:"http://api.openweathermap.org/data/2.5/find?lat="+t+"&lon="+a+"&cnt=5&cluster=no&units=metric&type=accurate&APPID=f9cd9fa2c427c3b115e87e4862619c5c",type:"GET",dataType:"json"}).done(function(e){function t(e,t){var a=document.createElement("div");return a.setAttribute("class","weather-popup default-primary-color  paper-shadow-bottom-z-4"),a.setAttribute("id",t),a.setAttribute("data-name","weather"),new ol.Overlay({element:a,position:e})}var a,r,n=e.list;$.each(n,function(e,n){r=ol.proj.transform([n.coord.lon,n.coord.lat],"EPSG:4326","EPSG:3857"),a=t(r,e),map.addOverlay(a),a.set("name","weather"),weatherData={name:n.name,temp:n.main.temp,pressure:n.main.pressure,humidity:n.main.humidity},dust.render("weatherPopup.dust",weatherData,function(t,a){$("#"+e).html(a)})})}).fail(function(){})}else $(this).prop("checked")===!1&&map.getOverlays().forEach(function(e){"weather"===e.get("name")&&($(e.getElement()).parent().remove(),$(e.getElement()).remove())})})}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcC5qcyIsImFkZC1tYXJrZXIuanMiLCJnZW9sb2NhdGlvbi5qcyIsImluZm8uanMiLCJ3ZWF0aGVyLmpzIl0sIm5hbWVzIjpbImJpbmciLCJvbCIsImxheWVyIiwiVGlsZSIsInZpc2libGUiLCJzb3VyY2UiLCJCaW5nTWFwcyIsImtleSIsImltYWdlcnlTZXQiLCJtYXhab29tIiwiY3Jvc3NPcmlnaW4iLCJwcmVsb2FkIiwiSW5maW5pdHkiLCJuYW1lRWwiLCJuYW1lRW4iLCJpZCIsIm1hcGJveCIsIlhZWiIsImF0dHJpYnV0aW9ucyIsIkF0dHJpYnV0aW9uIiwiaHRtbCIsInVybCIsIm1hcCIsIk1hcCIsInRhcmdldCIsImxheWVycyIsImxvYWRUaWxlc1doaWxlQW5pbWF0aW5nIiwibG9hZFRpbGVzV2hpbGVJbnRlcmFjdGluZyIsInJlbmRlcmVyIiwiY29udHJvbHMiLCJjb250cm9sIiwiZGVmYXVsdHMiLCJhdHRyaWJ1dGlvbk9wdGlvbnMiLCJjb2xsYXBzaWJsZSIsImNvbGxhcHNlZCIsImV4dGVuZCIsIlNjYWxlTGluZSIsInVuaXRzIiwiT3ZlcnZpZXdNYXAiLCJjbGFzc05hbWUiLCJPU00iLCJ2aWV3IiwiVmlldyIsImNlbnRlciIsImV4dGVudCIsInByb2plY3Rpb24iLCJ6b29tIiwibWluWm9vbSIsImhhbmRsZU1hcmtlciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJmZWF0dXJlc092ZXJsYXkiLCJnZXRTb3VyY2UiLCJjbGVhciIsImNvb3JkaW5hdGVzIiwiY29vcmRpbmF0ZSIsIm1hcmtlciIsInNldEdlb21ldHJ5IiwiZ2VvbSIsIlBvaW50IiwiYWRkRmVhdHVyZSIsIkZlYXR1cmUiLCJpY29uU3R5bGUiLCJzdHlsZSIsIlN0eWxlIiwiaW1hZ2UiLCJJY29uIiwiYW5jaG9yIiwiYW5jaG9yWFVuaXRzIiwiYW5jaG9yWVVuaXRzIiwib3BhY2l0eSIsInNjYWxlIiwic3JjIiwic2V0U3R5bGUiLCJWZWN0b3IiLCIkIiwib24iLCJ0aGlzIiwicHJvcCIsInVuIiwiZ2VvbG9jYXRpb24iLCJHZW9sb2NhdGlvbiIsImdldFZpZXciLCJnZXRQcm9qZWN0aW9uIiwidHJhY2tpbmdPcHRpb25zIiwibWF4aW11bUFnZSIsImVuYWJsZUhpZ2hBY2N1cmFjeSIsInRpbWVvdXQiLCJhY2N1cmFjeUZlYXR1cmUiLCJnZXRBY2N1cmFjeUdlb21ldHJ5IiwicG9zaXRpb25GZWF0dXJlIiwiQ2lyY2xlIiwicmFkaXVzIiwiZmlsbCIsIkZpbGwiLCJjb2xvciIsInN0cm9rZSIsIlN0cm9rZSIsIndpZHRoIiwiZ2V0UG9zaXRpb24iLCJmZWF0dXJlc092ZXJsYXlTb3VyY2UiLCJlIiwic2V0VHJhY2tpbmciLCJhZGRGZWF0dXJlcyIsImhhbmRsZUluZm8iLCJldnQiLCJjb250ZW50IiwiaW5uZXJIVE1MIiwiaW5mbyIsInNldFBvc2l0aW9uIiwiY29udGFpbmVyIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNsb3NlciIsIm9uY2xpY2siLCJ1bmRlZmluZWQiLCJibHVyIiwiT3ZlcmxheSIsImVsZW1lbnQiLCJhdXRvUGFuIiwiYXV0b1BhbkFuaW1hdGlvbiIsImR1cmF0aW9uIiwiYWRkT3ZlcmxheSIsImNoYW5nZSIsImdldE92ZXJsYXlzIiwiZm9yRWFjaCIsIm92bCIsImdldCIsImdldEVsZW1lbnQiLCJwYXJlbnQiLCJyZW1vdmUiLCJwcm9qIiwidHJhbnNmb3JtIiwiZ2V0Q2VudGVyIiwibGF0IiwibG9uIiwiYWpheCIsInR5cGUiLCJkYXRhVHlwZSIsImRvbmUiLCJkYXRhIiwiY3JlYXRlV2VhdGhlck92ZXJsYXkiLCJwb3NpdGlvbiIsImluZGV4IiwiZWxlbSIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJvdmVybGF5Iiwib2JqcyIsImxpc3QiLCJlYWNoIiwidmFsIiwiY29vcmQiLCJzZXQiLCJ3ZWF0aGVyRGF0YSIsIm5hbWUiLCJ0ZW1wIiwibWFpbiIsInByZXNzdXJlIiwiaHVtaWRpdHkiLCJkdXN0IiwicmVuZGVy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SytJLFNBR3ZCQyxLQUFLLGtCQUdDekYsR0FBRUUsTUFBTUMsS0FBSyxjQUFlLEdBQ3JDeEQsSUFBSXNHLGNBQWNDLFFBQVEsU0FBU0MsR0FDVCxZQUFwQkEsRUFBSUMsSUFBSSxVQUNUcEQsRUFBRW1ELEVBQUlFLGNBQWNDLFNBQVVDLFNBQy9CdkQsRUFBRW1ELEVBQUlFLGNBQWNFIiwiZmlsZSI6InNjcmlwdHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGJpbmcgPSBuZXcgb2wubGF5ZXIuVGlsZSh7XHJcbiAgdmlzaWJsZTogdHJ1ZSxcclxuICBzb3VyY2U6IG5ldyBvbC5zb3VyY2UuQmluZ01hcHMoe1xyXG4gICAga2V5OiAnQWsyR3E4VlVmSUNzUHB1ZjdMUkFOWG1YdDJzSFdtU0xQaG9obVZMRnRGSUV3WWpzXzVNQ3lBaEFGd1JTVnBMaicsXHJcbiAgICBpbWFnZXJ5U2V0OiAnQWVyaWFsJ1xyXG4gIH0pLFxyXG4gIG1heFpvb206IDE5LFxyXG4gIGNyb3NzT3JpZ2luOiAnYW5vbnltb3VzJyxcclxuICBwcmVsb2FkOiBJbmZpbml0eSxcclxuICBuYW1lRWw6ICfOlM6/z4HPhc+Gzr/Pgc65zrrOriDOtc65zrrPjM69zrEnLFxyXG4gIG5hbWVFbjogJ1NhdGVsbGl0ZSBJbWFnZScsXHJcbiAgaWQ6ICdiaW5nJ1xyXG59KTtcclxudmFyIG1hcGJveCA9IG5ldyBvbC5sYXllci5UaWxlKHtcclxuICBzb3VyY2U6IG5ldyBvbC5zb3VyY2UuWFlaKHtcclxuICAgIGF0dHJpYnV0aW9uczogbmV3IG9sLkF0dHJpYnV0aW9uKHtcclxuICAgICAgaHRtbDogJzxhIGhyZWY9XFxcImh0dHBzOi8vd3d3Lm1hcGJveC5jb20vYWJvdXQvbWFwcy9cXFwiIHRhcmdldD1cXFwiX2JsYW5rXFxcIj4mY29weTsgTWFwYm94ICZjb3B5OyBPcGVuU3RyZWV0TWFwPC9hPidcclxuICAgIH0pLFxyXG4gICAgdXJsOiAnaHR0cHM6Ly9hcGkubWFwYm94LmNvbS92NC9tYXBib3guc3RyZWV0cy97en0ve3h9L3t5fS5wbmc/YWNjZXNzX3Rva2VuPXBrLmV5SjFJam9pWm1seWRtRnBiaUlzSW1FaU9pSmxPV1l5WVRNME5UaGlOV00wWWpKak9ESmpOREU0T0RRek56QTJNR1F5TmlKOS4tTlZETzI3SHp0LXdfblFvc1VQZkxBJ1xyXG4gIH0pXHJcbn0pO1xyXG52YXIgbWFwID0gbmV3IG9sLk1hcCh7XHJcbiAgdGFyZ2V0OiAnbWFwJyxcclxuICBsYXllcnM6IFttYXBib3hdLFxyXG4gIGxvYWRUaWxlc1doaWxlQW5pbWF0aW5nOiB0cnVlLFxyXG4gIGxvYWRUaWxlc1doaWxlSW50ZXJhY3Rpbmc6IHRydWUsXHJcbiAgcmVuZGVyZXI6ICdjYW52YXMnLFxyXG4gIGNvbnRyb2xzOiBvbC5jb250cm9sLmRlZmF1bHRzKHtcclxuICAgIGF0dHJpYnV0aW9uT3B0aW9uczoge1xyXG4gICAgICBjb2xsYXBzaWJsZTogZmFsc2UsXHJcbiAgICAgIGNvbGxhcHNlZDogZmFsc2VcclxuICAgIH1cclxuICB9KS5leHRlbmQoW1xyXG4gICAgbmV3IG9sLmNvbnRyb2wuU2NhbGVMaW5lKHtcclxuICAgICAgdW5pdHM6ICdtZXRyaWMnXHJcbiAgICB9KSwgbmV3IG9sLmNvbnRyb2wuT3ZlcnZpZXdNYXAoe1xyXG4gICAgICBjbGFzc05hbWU6ICdvbC1vdmVydmlld21hcCBvbC1jdXN0b20tb3ZlcnZpZXdtYXAnLFxyXG4gICAgICBjb2xsYXBzaWJsZTogdHJ1ZSxcclxuICAgICAgY29sbGFwc2VkOiB0cnVlLFxyXG4gICAgICBsYXllcnM6IFtuZXcgb2wubGF5ZXIuVGlsZSh7XHJcbiAgICAgICAgc291cmNlOiBuZXcgb2wuc291cmNlLk9TTSgpLFxyXG4gICAgICAgIHZpc2libGU6IHRydWUsXHJcbiAgICAgICAgcHJlbG9hZDogSW5maW5pdHksXHJcbiAgICAgICAgY3Jvc3NPcmlnaW46ICdhbm9ueW1vdXMnLFxyXG4gICAgICAgIG5hbWVFbDogJ86czrnOus+Bz4zPgiDOp86sz4HPhM63z4InLFxyXG4gICAgICAgIG5hbWVFbjogJ01pbmlNYXAnLFxyXG4gICAgICAgIGlkOiAnb3ZlcnZpZXdPc20nXHJcbiAgICAgIH0pXVxyXG4gICAgfSlcclxuICBdKSxcclxuICB2aWV3OiBuZXcgb2wuVmlldyh7XHJcbiAgICBjZW50ZXI6IFszNzEzNjE2LCA0MTgxMjU4XSxcclxuICAgIGV4dGVudCA6IFszNTkwMDk0LDQxMDI4MzMsMzg1NTQ4Myw0MjYxMjExXSxcclxuICAgIHByb2plY3Rpb246ICdFUFNHOjM4NTcnLFxyXG4gICAgem9vbTogMTQsXHJcbiAgICBtYXhab29tOiAxOSxcclxuICAgIG1pblpvb206IDEwXHJcbiAgfSksXHJcbn0pO1xyXG4iLCIoZnVuY3Rpb24oKSB7XHJcbiAgdmFyIG1hcmtlciA9IG5ldyBvbC5GZWF0dXJlKCk7XHJcbiAgdmFyIGljb25TdHlsZSA9IG5ldyBvbC5zdHlsZS5TdHlsZSh7XHJcbiAgICBpbWFnZTogbmV3IG9sLnN0eWxlLkljb24oIC8qKiBAdHlwZSB7b2x4LnN0eWxlLkljb25PcHRpb25zfSAqLyAoe1xyXG4gICAgICBhbmNob3I6IFswLjUsIDFdLFxyXG4gICAgICBhbmNob3JYVW5pdHM6ICdmcmFjdGlvbicsXHJcbiAgICAgIGFuY2hvcllVbml0czogJ2ZyYWN0aW9uJyxcclxuICAgICAgb3BhY2l0eTogMSxcclxuICAgICAgc2NhbGU6IDEsXHJcbiAgICAgIHNyYzogJy4uL2ltYWdlcy9tYWtpL3JlbmRlcnMvbWFya2VyLTI0LnBuZydcclxuICAgIH0pKVxyXG4gIH0pO1xyXG4gIG1hcmtlci5zZXRTdHlsZShpY29uU3R5bGUpO1xyXG4gIHZhciBmZWF0dXJlc092ZXJsYXkgPSBuZXcgb2wubGF5ZXIuVmVjdG9yKHtcclxuICAgIG1hcDogbWFwLFxyXG4gICAgc291cmNlOiBuZXcgb2wuc291cmNlLlZlY3RvcigpXHJcbiAgfSk7XHJcblxyXG4gIGZ1bmN0aW9uIGhhbmRsZU1hcmtlcihldmVudCkge1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIGZlYXR1cmVzT3ZlcmxheS5nZXRTb3VyY2UoKS5jbGVhcigpO1xyXG4gICAgdmFyIGNvb3JkaW5hdGVzID0gZXZlbnQuY29vcmRpbmF0ZTtcclxuICAgIG1hcmtlci5zZXRHZW9tZXRyeShuZXcgb2wuZ2VvbS5Qb2ludChjb29yZGluYXRlcykpO1xyXG4gICAgZmVhdHVyZXNPdmVybGF5LmdldFNvdXJjZSgpLmFkZEZlYXR1cmUobWFya2VyKTtcclxuICB9XHJcbiAgJCgnLm1hcmtlcicpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbihldmVudCkge1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIC8qIEFjdCBvbiB0aGUgZXZlbnQgKi9cclxuICAgIGlmICgkKHRoaXMpLnByb3AoJ2NoZWNrZWQnKSA9PT0gdHJ1ZSkge1xyXG4gICAgICBtYXAub24oJ3NpbmdsZWNsaWNrJywgaGFuZGxlTWFya2VyKTtcclxuICAgICAgXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBtYXAudW4oJ3NpbmdsZWNsaWNrJywgaGFuZGxlTWFya2VyKTtcclxuICAgICAgZmVhdHVyZXNPdmVybGF5LmdldFNvdXJjZSgpLmNsZWFyKCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn0oKSk7XHJcbiIsIihmdW5jdGlvbigpIHtcclxuICB2YXIgZ2VvbG9jYXRpb24gPSBuZXcgb2wuR2VvbG9jYXRpb24oe1xyXG4gICAgLy8gdGFrZSB0aGUgcHJvamVjdGlvbiB0byB1c2UgZnJvbSB0aGUgbWFwJ3Mgdmlld1xyXG4gICAgcHJvamVjdGlvbjogbWFwLmdldFZpZXcoKS5nZXRQcm9qZWN0aW9uKCksXHJcbiAgICB0cmFja2luZ09wdGlvbnM6IHtcclxuICAgICAgbWF4aW11bUFnZTogMTAwMDAsXHJcbiAgICAgIGVuYWJsZUhpZ2hBY2N1cmFjeTogdHJ1ZSxcclxuICAgICAgdGltZW91dDogNjAwMDAwXHJcbiAgICB9XHJcbiAgfSk7XHJcbiAgdmFyIGFjY3VyYWN5RmVhdHVyZSA9IG5ldyBvbC5GZWF0dXJlKCk7XHJcbiAgZ2VvbG9jYXRpb24ub24oJ2NoYW5nZTphY2N1cmFjeUdlb21ldHJ5JywgZnVuY3Rpb24oKSB7XHJcbiAgICBhY2N1cmFjeUZlYXR1cmUuc2V0R2VvbWV0cnkoZ2VvbG9jYXRpb24uZ2V0QWNjdXJhY3lHZW9tZXRyeSgpKTtcclxuICB9KTtcclxuICB2YXIgcG9zaXRpb25GZWF0dXJlID0gbmV3IG9sLkZlYXR1cmUoKTtcclxuICBwb3NpdGlvbkZlYXR1cmUuc2V0U3R5bGUobmV3IG9sLnN0eWxlLlN0eWxlKHtcclxuICAgIGltYWdlOiBuZXcgb2wuc3R5bGUuQ2lyY2xlKHtcclxuICAgICAgcmFkaXVzOiA2LFxyXG4gICAgICBmaWxsOiBuZXcgb2wuc3R5bGUuRmlsbCh7XHJcbiAgICAgICAgY29sb3I6ICcjMzM5OUNDJ1xyXG4gICAgICB9KSxcclxuICAgICAgc3Ryb2tlOiBuZXcgb2wuc3R5bGUuU3Ryb2tlKHtcclxuICAgICAgICBjb2xvcjogJyNmZmYnLFxyXG4gICAgICAgIHdpZHRoOiAyXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gIH0pKTtcclxuICAvLyBsaXN0ZW4gdG8gY2hhbmdlcyBpbiBwb3NpdGlvblxyXG4gIGdlb2xvY2F0aW9uLm9uKCdjaGFuZ2U6cG9zaXRpb24nLCBmdW5jdGlvbigpIHtcclxuICAgIHZhciBjb29yZGluYXRlcyA9IGdlb2xvY2F0aW9uLmdldFBvc2l0aW9uKCk7XHJcbiAgICBwb3NpdGlvbkZlYXR1cmUuc2V0R2VvbWV0cnkoY29vcmRpbmF0ZXMgPyBuZXcgb2wuZ2VvbS5Qb2ludChjb29yZGluYXRlcykgOiBudWxsKTtcclxuICB9KTtcclxuICBmZWF0dXJlc092ZXJsYXlTb3VyY2UgPSBuZXcgb2wuc291cmNlLlZlY3Rvcih7fSk7XHJcbiAgdmFyIGZlYXR1cmVzT3ZlcmxheSA9IG5ldyBvbC5sYXllci5WZWN0b3Ioe1xyXG4gICAgbWFwOiBtYXAsXHJcbiAgICBzb3VyY2U6IGZlYXR1cmVzT3ZlcmxheVNvdXJjZVxyXG4gIH0pO1xyXG4gICQoJy5nZW9sb2NhdGlvbicpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbihlKSB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBpZiAoJCh0aGlzKS5wcm9wKCdjaGVja2VkJykgPT09IHRydWUpIHtcclxuICAgICAgZ2VvbG9jYXRpb24uc2V0VHJhY2tpbmcodHJ1ZSk7XHJcbiAgICAgIGZlYXR1cmVzT3ZlcmxheVNvdXJjZS5hZGRGZWF0dXJlcyhbcG9zaXRpb25GZWF0dXJlLGFjY3VyYWN5RmVhdHVyZV0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZ2VvbG9jYXRpb24uc2V0VHJhY2tpbmcoZmFsc2UpO1xyXG4gICAgICBmZWF0dXJlc092ZXJsYXlTb3VyY2UuY2xlYXIoKTtcclxuICAgIH1cclxuICB9KTtcclxufSgpKTtcclxuIiwiKGZ1bmN0aW9uKCkge1xyXG4gIHZhciBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncG9wdXAnKTtcclxuICB2YXIgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwb3B1cC1jb250ZW50Jyk7XHJcbiAgdmFyIGNsb3NlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwb3B1cC1jbG9zZXInKTtcclxuICBjbG9zZXIub25jbGljayA9IGZ1bmN0aW9uKCkge1xyXG4gICAgaW5mby5zZXRQb3NpdGlvbih1bmRlZmluZWQpO1xyXG4gICAgY2xvc2VyLmJsdXIoKTtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9O1xyXG4gIHZhciBpbmZvID0gbmV3IG9sLk92ZXJsYXkoIC8qKiBAdHlwZSB7b2x4Lk92ZXJsYXlPcHRpb25zfSAqLyAoe1xyXG4gICAgZWxlbWVudDogY29udGFpbmVyLFxyXG4gICAgYXV0b1BhbjogdHJ1ZSxcclxuICAgIGF1dG9QYW5BbmltYXRpb246IHtcclxuICAgICAgZHVyYXRpb246IDI1MFxyXG4gICAgfVxyXG4gIH0pKTtcclxuICBtYXAuYWRkT3ZlcmxheShpbmZvKTtcclxuXHJcbiAgZnVuY3Rpb24gaGFuZGxlSW5mbyhldnQpIHtcclxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgdmFyIGNvb3JkaW5hdGUgPSBldnQuY29vcmRpbmF0ZTtcclxuICAgIGNvbnRlbnQuaW5uZXJIVE1MID0gJzxwPllvdSBjbGlja2VkIGhlcmU6PC9wPjxjb2RlPicgKyBjb29yZGluYXRlICsgJzwvY29kZT4nO1xyXG4gICAgaW5mby5zZXRQb3NpdGlvbihjb29yZGluYXRlKTtcclxuICB9XHJcbiAgJCgnLmluZm8nKS5vbignY2hhbmdlJywgZnVuY3Rpb24oZSkge1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgaWYgKCQodGhpcykucHJvcCgnY2hlY2tlZCcpID09PSB0cnVlKSB7XHJcbiAgICAgIG1hcC5vbignc2luZ2xlY2xpY2snLCBoYW5kbGVJbmZvKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIG1hcC51bignc2luZ2xlY2xpY2snLCBoYW5kbGVJbmZvKTtcclxuICAgIH1cclxuICB9KTtcclxufSgpKTtcclxuIiwiKGZ1bmN0aW9uKCkge1xyXG4gICQoJy53ZWF0aGVyJykuY2hhbmdlKGZ1bmN0aW9uKCkge1xyXG4gICAgaWYgKCQodGhpcykucHJvcCgnY2hlY2tlZCcpID09PSB0cnVlKSB7XHJcbiAgICAgICAgbWFwLmdldE92ZXJsYXlzKCkuZm9yRWFjaChmdW5jdGlvbihvdmwpIHtcclxuICAgICAgICBpZiAob3ZsLmdldCgnbmFtZScpID09PSAnd2VhdGhlcicpIHtcclxuICAgICAgICAgICgkKG92bC5nZXRFbGVtZW50KCkpLnBhcmVudCgpKS5yZW1vdmUoKTtcclxuICAgICAgICAgICQob3ZsLmdldEVsZW1lbnQoKSkucmVtb3ZlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgdmFyIGNlbnRlciA9IG9sLnByb2oudHJhbnNmb3JtKG1hcC5nZXRWaWV3KCkuZ2V0Q2VudGVyKCksICdFUFNHOjM4NTcnLCAnRVBTRzo0MzI2Jyk7XHJcbiAgICAgIHZhciBsYXQgPSBjZW50ZXJbMV07XHJcbiAgICAgIHZhciBsb24gPSBjZW50ZXJbMF07XHJcbiAgICAgICQuYWpheCh7XHJcbiAgICAgICAgdXJsOiAnaHR0cDovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvZmluZD9sYXQ9JyArIGxhdCArICcmbG9uPScgKyBsb24gKyAnJmNudD01JmNsdXN0ZXI9bm8mdW5pdHM9bWV0cmljJnR5cGU9YWNjdXJhdGUmQVBQSUQ9ZjljZDlmYTJjNDI3YzNiMTE1ZTg3ZTQ4NjI2MTljNWMnLFxyXG4gICAgICAgIHR5cGU6ICdHRVQnLFxyXG4gICAgICAgIGRhdGFUeXBlOiAnanNvbicsXHJcbiAgICAgIH0pLmRvbmUoZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZVdlYXRoZXJPdmVybGF5KHBvc2l0aW9uLCBpbmRleCkge1xyXG4gICAgICAgICAgdmFyIGVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgIGVsZW0uc2V0QXR0cmlidXRlKCdjbGFzcycsICd3ZWF0aGVyLXBvcHVwIGRlZmF1bHQtcHJpbWFyeS1jb2xvciAgcGFwZXItc2hhZG93LWJvdHRvbS16LTQnKTtcclxuICAgICAgICAgIGVsZW0uc2V0QXR0cmlidXRlKCdpZCcsIGluZGV4KTtcclxuICAgICAgICAgIGVsZW0uc2V0QXR0cmlidXRlKCdkYXRhLW5hbWUnLCAnd2VhdGhlcicpO1xyXG4gICAgICAgICAgcmV0dXJuIG5ldyBvbC5PdmVybGF5KHtcclxuICAgICAgICAgICAgZWxlbWVudDogZWxlbSxcclxuICAgICAgICAgICAgcG9zaXRpb246IHBvc2l0aW9uLFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBvYmpzID0gZGF0YS5saXN0O1xyXG4gICAgICAgIHZhciBvdmVybGF5LCBjb29yZGluYXRlcztcclxuICAgICAgICAkLmVhY2gob2JqcywgZnVuY3Rpb24oaW5kZXgsIHZhbCkge1xyXG4gICAgICAgICAgY29vcmRpbmF0ZXMgPSBvbC5wcm9qLnRyYW5zZm9ybShbdmFsLmNvb3JkLmxvbiwgdmFsLmNvb3JkLmxhdF0sICdFUFNHOjQzMjYnLCAnRVBTRzozODU3Jyk7XHJcbiAgICAgICAgICBvdmVybGF5ID0gY3JlYXRlV2VhdGhlck92ZXJsYXkoY29vcmRpbmF0ZXMsIGluZGV4KTtcclxuICAgICAgICAgIG1hcC5hZGRPdmVybGF5KG92ZXJsYXkpO1xyXG4gICAgICAgICAgb3ZlcmxheS5zZXQoJ25hbWUnLCAnd2VhdGhlcicpO1xyXG4gICAgICAgICAgd2VhdGhlckRhdGEgPSB7XHJcbiAgICAgICAgICAgICduYW1lJzogdmFsLm5hbWUsXHJcbiAgICAgICAgICAgICd0ZW1wJzogdmFsLm1haW4udGVtcCxcclxuICAgICAgICAgICAgJ3ByZXNzdXJlJzogdmFsLm1haW4ucHJlc3N1cmUsXHJcbiAgICAgICAgICAgICdodW1pZGl0eSc6IHZhbC5tYWluLmh1bWlkaXR5XHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgICAgZHVzdC5yZW5kZXIoJ3dlYXRoZXJQb3B1cC5kdXN0Jywgd2VhdGhlckRhdGEsIGZ1bmN0aW9uKGVyciwgb3V0KSB7XHJcbiAgICAgICAgICAgICQoXCIjXCIgKyBpbmRleCkuaHRtbChvdXQpO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0pLmZhaWwoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgLy8gdG9hc3RyLmVycm9yKFwizpTOtc69IM6yz4HOrc64zrfOus6xzr0gz4DOu863z4HOv8+Gzr/Pgc6vzrXPgiDOs865zrEgz4TOuc+CIM66zrHOuc+BzrnOus6tz4Igz4PPhc69zrjOrs66zrXPgiFcIik7XHJcbiAgICAgIH0pO1xyXG4gICAgfSBlbHNlIGlmICgkKHRoaXMpLnByb3AoJ2NoZWNrZWQnKSA9PT0gZmFsc2UpIHtcclxuICAgICAgbWFwLmdldE92ZXJsYXlzKCkuZm9yRWFjaChmdW5jdGlvbihvdmwpIHtcclxuICAgICAgICBpZiAob3ZsLmdldCgnbmFtZScpID09PSAnd2VhdGhlcicpIHtcclxuICAgICAgICAgICgkKG92bC5nZXRFbGVtZW50KCkpLnBhcmVudCgpKS5yZW1vdmUoKTtcclxuICAgICAgICAgICQob3ZsLmdldEVsZW1lbnQoKSkucmVtb3ZlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9KTtcclxufSgpKTtcclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9