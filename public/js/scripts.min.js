var center=[3677385,4120949],extent=[3590094,4102833,3855483,4261211],lang=document.documentElement.lang,styleCache={},geoJSONFormat=new ol.format.GeoJSON({defaultDataProjection:"EPSG:4326"}),bing=new ol.layer.Tile({visible:!0,source:new ol.source.BingMaps({key:"Ak2Gq8VUfICsPpuf7LRANXmXt2sHWmSLPhohmVLFtFIEwYjs_5MCyAhAFwRSVpLj",imagerySet:"Aerial"}),maxZoom:19,crossOrigin:"anonymous",preload:1/0,id:"bing"}),mapbox=new ol.layer.Tile({source:new ol.source.XYZ({attributions:[new ol.Attribution({html:'<a href="https://www.mapbox.com/about/maps/" target="_blank">&copy; Mapbox &copy; OpenStreetMap</a>'})],url:"https://api.mapbox.com/v4/mapbox.streets/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoiZmlydmFpbiIsImEiOiJlOWYyYTM0NThiNWM0YjJjODJjNDE4ODQzNzA2MGQyNiJ9.-NVDO27Hzt-w_nQosUPfLA"}),id:"mapbox"}),propertyStyleFunction=function(e,t){var o=e.get("features").length,l=(propertySource.getFeatures().length,20),r=styleCache[o];return r||(r=o>1?[new ol.style.Style({image:new ol.style.Circle({radius:l,stroke:new ol.style.Stroke({color:[156,39,176,1],width:5}),fill:new ol.style.Fill({color:[68,138,255,.8]})}),text:new ol.style.Text({text:o.toString(),fill:new ol.style.Fill({color:"#FFFFFF"})}),zIndex:101})]:[new ol.style.Style({image:new ol.style.Icon({src:"../images/map-icons/pins/48/pin5.png",anchorOrigin:"bottom-left",anchor:[0,0],scale:.7})})],styleCache[o]=r),r},propertySource=new ol.source.Vector({format:geoJSONFormat,loader:function(e,t,o){var l=ol.proj.transformExtent(e,"EPSG:3857","EPSG:4326"),r="http://localhost:3000/db/property?bbox[x1]="+l[0]+"&bbox[y1]="+l[1]+"&bbox[x2]="+l[2]+"&bbox[y2]="+l[3],n=this;this.clear(),$.ajax({url:r,type:"GET",dataType:"json"}).done(function(e){var t=geoJSONFormat.readFeatures(e,{featureProjection:"EPSG:3857"});n.addFeatures(t)}).fail(function(){console.log("error")})},strategy:ol.loadingstrategy.bbox}),propertyClusterSource=new ol.source.Cluster({distance:40,source:propertySource,attributions:[new ol.Attribution({html:'All maps © <a href="http://www.terracognita.gr/">Terra Cognita</a>'})]}),property=new ol.layer.Vector({source:propertyClusterSource,id:"estates",visible:!0,style:propertyStyleFunction});property.setZIndex(2);var PSAStyleFunction=function(e,t){var o,l=e.get("style");return o="el"===lang?e.get("name_el"):e.get("name_en"),styleCache[l]||(styleCache=[new ol.style.Style({image:new ol.style.Icon({src:"../images/maki/renders/"+l+"-24.png",anchorOrigin:"bottom-left",anchor:[.5,.5],scale:1}),text:new ol.style.Text({text:o,stroke:new ol.style.Stroke({color:[156,39,176,.8],width:1}),offsetY:12})})]),styleCache},PSA=new ol.layer.Vector({style:PSAStyleFunction,maxResolution:3});PSA.setZIndex(1);var filteredEstates=new ol.layer.Vector({source:new ol.source.Vector,id:"filteredEstates",visible:!1,style:filteredEsateStyle}),map=new ol.Map({target:"map",layers:[mapbox,property,PSA,filteredEstates],loadTilesWhileAnimating:!0,loadTilesWhileInteracting:!0,renderer:"canvas",controls:ol.control.defaults({attributionOptions:{collapsible:!1,collapsed:!1}}).extend([new ol.control.ScaleLine({units:"metric"}),new ol.control.OverviewMap({className:"ol-overviewmap ol-custom-overviewmap",collapsible:!0,collapsed:!0,layers:[bing]}),new ol.control.ZoomToExtent({extent:extent})]),view:new ol.View({center:center,extent:extent,projection:"EPSG:3857",zoom:14,maxZoom:19,minZoom:10})});"el"===lang?(bing.set("name","Δορυφορική εικόνα"),mapbox.set("name","Χάρτης"),property.set("name","Ακίνητα")):(bing.set("name","Sattelite Image"),mapbox.set("name","Map"),property.set("name","Properties"));
function filteredEsateStyle(e,t){return styleCache=[new ol.style.Style({image:new ol.style.Icon({src:"../images/map-icons/pins/48/pin4.png",anchorOrigin:"bottom-left",anchor:[.5,.5],scale:.7})})],styleCache}function selectByFilters(){var e={};if(e.leaseType=$("input[name=options]:checked").val(),e.startPrice=$("#startPrice").val(),e.endPrice=$("#endPrice").val(),features=getFilteredEstates(e),features.length>0){filteredEstates.getSource().clear(),filteredEstates.getSource().addFeatures(features),filteredEstates.setVisible(!0),property.setVisible(!1);filteredEstates.getSource().getExtent()}else filteredEstates.setVisible(!1),property.setVisible(!0)}function getFilteredEstates(e){var t=[],r={Rent:function(e){return propertySource.getFeatures().forEach(function(r){var s=r.get("price"),i=r.get("type_en");if("Rent"===i&&s>=e.startPrice&&s<=e.endPrice){var a=r.clone();t.push(a)}}),t},Sale:function(e){return propertySource.getFeatures().forEach(function(r){var s=r.get("price"),i=r.get("type_en");if("Sale"===i&&s>=e.startPrice&&s<=e.endPrice){var a=r.clone();t.push(a)}}),t}};return r[e.leaseType]?r[e.leaseType](e):void 0}$("#clearFilters").click(function(){filteredEstates.getSource().clear(),filteredEstates.setVisible(!1),property.setVisible(!0)});
!function(){var e=new ol.Geolocation({projection:map.getView().getProjection(),trackingOptions:{maximumAge:1e4,enableHighAccuracy:!0,timeout:6e5}}),o=new ol.Feature;e.on("change:accuracyGeometry",function(){o.setGeometry(e.getAccuracyGeometry())});var t=new ol.Feature;t.setStyle(new ol.style.Style({image:new ol.style.Circle({radius:6,fill:new ol.style.Fill({color:"#3399CC"}),stroke:new ol.style.Stroke({color:"#fff",width:2})})})),e.on("change:position",function(){var o=e.getPosition();t.setGeometry(o?new ol.geom.Point(o):null)}),featuresOverlaySource=new ol.source.Vector({});new ol.layer.Vector({map:map,source:featuresOverlaySource});$(".geolocation").on("change",function(r){r.preventDefault(),$(this).prop("checked")===!0?(e.setTracking(!0),featuresOverlaySource.addFeatures([t,o])):(e.setTracking(!1),featuresOverlaySource.clear())})}();
!function(){function e(e){e.preventDefault();var t=e.coordinate;if(map.getView().getResolution()>4)map.getView().setResolution(2.388657133911758),map.getView().setCenter(t);else{var a={},n={},r=[];if(a.title=n,"el"===lang?(n.estateCode="Κωδικός Ιδιοκτησίας",n.type="Τύπος",n.area="Εμβαδό",n.address="Διευθυνση",n.bedrooms="Υπνοδωμάτια",n.price="Τιμή",n["new"]="Νεόδμητο",n.parking="Στάθμεση",n.furnished="Επιπλωμένο",n.pets="Κατοικίδια",n.view="Θέα",n.heating="Θέρμανση",n.cooling="Ψύξη",n.contactInfo="Στοιχεία Επικοινωνίας",n.name="Όνομα",n.lastname="Επίθετο",n.phone="Τηλέφωνο",n.email="Ηλεκτρονική Διεύθυνση"):(n.estateCode="Estate Code",n.type="Type",n.area="Size",n.address="Address",n.bedrooms="Bedrooms",n.price="Price",n["new"]="Newly Build",n.parking="Parking",n.furnished="Furnished",n.pets="Pets Allowed",n.view="View",n.heating="Heating",n.cooling="Cooling",n.contactInfo="Contact Info",n.name="Name",n.lastname="Last Name",n.phone="Telephone",n.email="Email"),clickedFeature=map.forEachFeatureAtPixel(e.pixel,function(e,t){return{feature:e,layer:t}},this,function(e){return console.log(e.get("id")),"estates"===e.get("id")||"filteredEstates"===e.get("id")?!0:void 0},this),clickedFeature){if("filteredEstates"===clickedFeature.layer.get("id")){var o=clickedFeature.feature,i={};i.gid=o.get("gid"),i.type=o.get("estatetype"),i.area=o.get("estatearea"),"el"===lang?i.address=o.get("street_el")+" "+o.get("h_num_el"):i.address=o.get("street_en")+" "+o.get("h_num_en"),i.bedrooms=o.get("bedrooms"),i.price=o.get("price"),i["new"]=o.get("new"),i.parking=o.get("parking"),i.furnished=o.get("furnished"),i.pets=o.get("pets"),i.view=o.get("view"),i.heating=o.get("heating"),i.cooling=o.get("cooling"),"el"===lang?(i.name=o.get("name_el"),i.lastname=o.get("lastname_el")):(i.name=o.get("name_en"),i.lastname=o.get("lastname_en")),i.phone=o.get("phone1"),i.email=o.get("email"),r.push({feature:i}),featureCoordinate=o.get("geometry").getCoordinates(),a.features=r;var s=new ol.source.Vector({attributions:[new ol.Attribution({html:'POI by <a href="http://www.terracognita.gr/">Terra Cognita</a>'})],format:geoJSONFormat,loader:function(e,t,a){var n="http://localhost:3000/db/uses/"+i.gid,r=this;$.ajax({url:n,type:"GET",dataType:"json"}).done(function(e){var t=geoJSONFormat.readFeatures(e.property_services_analysis,{featureProjection:"EPSG:3857"}),a=new ol.style.Style({fill:new ol.style.Fill({color:[156,39,176,.1]})});t[0].setStyle(a),r.addFeatures(t)}).fail(function(){console.log("error")})},strategy:ol.loadingstrategy.all});PSA.setSource(s)}else clickedFeature.feature.get("features").forEach(function(e){var t={};t.gid=e.get("gid"),t.type=e.get("estatetype"),t.area=e.get("estatearea"),"el"===lang?t.address=e.get("street_el")+" "+e.get("h_num_el"):t.address=e.get("street_en")+" "+e.get("h_num_en"),t.bedrooms=e.get("bedrooms"),t.price=e.get("price"),t["new"]=e.get("new"),t.parking=e.get("parking"),t.furnished=e.get("furnished"),t.pets=e.get("pets"),t.view=e.get("view"),t.heating=e.get("heating"),t.cooling=e.get("cooling"),"el"===lang?(t.name=e.get("name_el"),t.lastname=e.get("lastname_el")):(t.name=e.get("name_en"),t.lastname=e.get("lastname_en")),t.phone=e.get("phone1"),t.email=e.get("email"),r.push({feature:t}),featureCoordinate=e.get("geometry").getCoordinates(),a.features=r;var n=new ol.source.Vector({attributions:[new ol.Attribution({html:'POI by <a href="http://www.terracognita.gr/">Terra Cognita</a>'})],format:geoJSONFormat,loader:function(e,a,n){var r="http://localhost:3000/db/uses/"+t.gid,o=this;$.ajax({url:r,type:"GET",dataType:"json"}).done(function(e){var t=geoJSONFormat.readFeatures(e.property_services_analysis,{featureProjection:"EPSG:3857"}),a=new ol.style.Style({fill:new ol.style.Fill({color:[156,39,176,.1]})});t[0].setStyle(a),o.addFeatures(t)}).fail(function(){console.log("error")})},strategy:ol.loadingstrategy.all});PSA.setSource(n)});dust.render("estateCards.dust",a,function(e,t){$(".estate-cards").html(t),$(".estate-cards").removeClass("visuallyhidden")}),$('a[href="#openModal"]').click(function(){dust.render("modalInfo.dust",a,function(e,t){$(".modal-content").html(t)})}),map.getView().setCenter(featureCoordinate)}}}$(".info").on("change",function(t){t.preventDefault(),$(this).prop("checked")===!0?map.on("click",e):map.un("click",e)})}();
!function(){function e(e){e.preventDefault();var r=n.getSource().getFeatures().length,a=e.coordinate;if(0===r)t.setGeometry(new ol.geom.Point(a)),t.setId("first"),n.getSource().addFeature(t),c[0]=a[0],c[1]=a[1];else if(1===r){var i=t.clone();i.setGeometry(new ol.geom.Point(a)),i.setId("second"),n.getSource().addFeature(i),c[2]=a[0],c[3]=a[1],o(c)}else n.getSource().clear()}function o(e){var o=ol.proj.transform([e[0],e[1]],"EPSG:3857","EPSG:4326"),t=ol.proj.transform([e[2],e[3]],"EPSG:3857","EPSG:4326"),r=o[0],a=o[1],c=t[0],i=t[1];$.ajax({url:"https://api.mapbox.com/v4/directions/mapbox.driving/"+r+","+a+";"+c+","+i+".json?alternatives=false&access_token=pk.eyJ1IjoiZmlydmFpbiIsImEiOiJlOWYyYTM0NThiNWM0YjJjODJjNDE4ODQzNzA2MGQyNiJ9.-NVDO27Hzt-w_nQosUPfLA",type:"GET",dataType:"json"}).done(function(e){var o={};o.type="Feature",o.geometry=e.routes[0].geometry,n.getSource().addFeatures(geoJSONFormat.readFeatures(o,{dataProjection:"EPSG:4326",featureProjection:"EPSG:3857"})),map.getView().fit(n.getSource().getExtent(),map.getSize())}).fail(function(){console.log("error")}).always(function(){console.log("complete")})}var t=new ol.Feature,r=new ol.style.Style({image:new ol.style.Icon({anchor:[.5,1],anchorXUnits:"fraction",anchorYUnits:"fraction",opacity:1,scale:1,src:"../images/map-icons/pins/24/pin1.png",snapToPixel:!1}),zIndex:100});t.setStyle(r);var a=new ol.style.Style({stroke:new ol.style.Stroke({color:"#408080",width:5,lineDash:[4,4]})}),n=new ol.layer.Vector({map:map,source:new ol.source.Vector,style:a,id:"route",nameEl:"Διαδρομή",NameEn:"Route"}),c=[];geoJSONFormat=new ol.format.GeoJSON({defaultDataProjection:"EPSG:4326",geometryName:"geometry"}),$(".marker").on("change",function(o){o.preventDefault(),$(this).prop("checked")===!0?map.on("singleclick",e):(map.un("singleclick",e),n.getSource().clear())})}();
!function(){$(".weather").change(function(){if($(this).prop("checked")===!0){map.getOverlays().forEach(function(e){"weather"===e.get("name")&&($(e.getElement()).parent().remove(),$(e.getElement()).remove())});var e=ol.proj.transform(map.getView().getCenter(),"EPSG:3857","EPSG:4326"),t=e[1],a=e[0];$.ajax({url:"http://api.openweathermap.org/data/2.5/find?lat="+t+"&lon="+a+"&cnt=5&cluster=no&units=metric&type=accurate&APPID=f9cd9fa2c427c3b115e87e4862619c5c",type:"GET",dataType:"json"}).done(function(e){function t(e,t){var a=document.createElement("div");return a.setAttribute("class","weather-popup default-primary-color mdl-shadow--6dp"),a.setAttribute("id",t),a.setAttribute("data-name","weather"),new ol.Overlay({element:a,position:e})}var a,r,n=e.list;$.each(n,function(e,n){r=ol.proj.transform([n.coord.lon,n.coord.lat],"EPSG:4326","EPSG:3857"),a=t(r,e),map.addOverlay(a),a.set("name","weather"),weatherData={name:n.name,temp:n.main.temp,pressure:n.main.pressure,humidity:n.main.humidity},dust.render("weatherPopup.dust",weatherData,function(t,a){$("#"+e).html(a)})})}).fail(function(){})}else $(this).prop("checked")===!1&&map.getOverlays().forEach(function(e){"weather"===e.get("name")&&($(e.getElement()).parent().remove(),$(e.getElement()).remove())})})}();
//# sourceMappingURL=data:application/json;base64,